C     GL0704       09 APR 87                                         MRP
C?IBM/GLD/GBR/VAX/UNX
      SUBROUTINE DPHNIX
C??
C?CDC
C     PROGRAM DPHNIX
C??
C1INTRODUCTION
C     LINK 0704
C*
C     ----------------
C     GAUSSIAN 82
C     U OF T VERSION
C     APRIL 1987
C     ----------------
C*
C     TWO-ELECTRON INTEGRAL DERIVATIVE PACKAGE FOR SPD FUNCTIONS,
C     USING THE METHOD OF RYS POLYNOMIALS.
C     NORMALLY ONLY DERIVATIVES INVOLVING D SHELLS ARE EVALUATED HERE
C     BUT THIS ROUTINE IS CAPABLE OF EVALUATING ALL THE DERIVATIVES.
C
C     NOTE: THE 2-ELECTRON ENERGY COMPONENT (VEEXX) CANNOT BE EVALUATED
C     AS ALL INTEGRALS WHERE ALL 4 SHELLS ARE ON THE SAME CENTER
C     ARE SKIPPED.
C
C     THE MODE OF OPERATION IS DETERMINED BY IOP(63) - IF PROGRAM DTWOL
C     WAS CALLED DURING THIS OVERLAY, DPHNIX ASSUMES ALL SP DERIVATIVES
C     HAVE ALREADY BEEN EVALUATED. HOWEVER, IF IOP(63) IS 0, THEN ALL
C     THE DERIVATIVES ARE EVALUATED HERE - THUS IT IS VERY IMPORTANT TO
C     CALL LINKS 0703 AND 0704 FROM THE SAME OVERLAY CARD IN THE ROUTE.
C*
C     THE ORDER OF THE FUNCTIONS PRODUCED IS:
C      1      S
C      2      X
C      3      Y
C      4      Z
C      5      X**2      D(0)   3*Z**2-R**2
C      6      Z**2      D(1,+) X*Z
C      7      Z**2      D(1,-) Y*Z
C      8      X*Y       D(2,+) X**2-Y**2
C      9      X*Z       D(2,-) X*Y
C     10      Y*Z
C     11      X**3                             F(0)   Z*(5*Z**2-3*R**2)
C     12      Y**3                             F(1,+) X*(5*Z**2-R**2)
C     13      Z**3                             F(1,-) Y*(5*Z**2-R**2)
C     14      X*Y**2                           F(2,+) Z*(X**2-Y**2)
C     15      X**2*Y                           F(2,-) Z*(X*Y)
C     16      X**2*Z                           F(3,+) X*(X**2-3*Y**2)
C     17      X*Z**2                           F(3,-) Y*(3*X**2-Y**2)
C     18      Y*Z**2
C     19      Y**2*Z
C     20      X*Y*Z
C*
C     NOTE: MUCH OF THE CODE FOR F ORBITAL DERIVATIVES IS PRESENT, BUT
C     THE BLOCK DATA BDT2W2 (LINK GL9990C) MAY HAVE TO BE EXTENDED,
C     AS WILL ARRAYS ASSOCIATED WITH SUBROUTINE RPOLX.
C     THERE MAY ALSO BE OTHER ARRAY DIMENSIONS THAT
C     NEED TO BE FIXED (EG. D1234, XIP...ZIPK).
C*
C1OPTIONS
C     ******************************************************************
C     OPTIONS ... IOP()
C     ******************************************************************
C     SEE PROGRAM GBOPT ... LINK 0711.
C     ******************************************************************
C*
C/
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA, NB=#NB)
C     PARAMETER (NS=#NS, NP=#NP)
C     PARAMETER (NF=#NF)
C##
      PARAMETER (NA= 36, NB=200)
      PARAMETER (NS=120, NP=300)
      PARAMETER (NF=120)
C###
      PARAMETER (NA3=3*NA)
      PARAMETER (NBB=NB*(NB+1)/2)
      PARAMETER (NF2=NF+2)
      PARAMETER (ZERO=0.0D0, ONE=1.0D0)
C
      INTEGER SHELLA,SHELLN,SHELLT,SHELLC,AOS,UBOUND
C
      LOGICAL OPEN,NOGSCF,FCNTRL,F0INIT,IFAST
C
      COMMON /A/ IOP(99)
      COMMON /A/ NATOMS,ICHARG,MULTIP,IAN(NA),NAE,NBE,NE,NBASIS,C(NA,3)
      COMMON /A/ CDUM(4),ICDUM(401)
C
      COMMON/B/IXYZ(NS),SHELLA(NS),SHELLN(NS),SHELLT(NS),
     1 SHELLC(NS),AOS(NS),NSHELL,MAXTYP,EXX(NP),C1(NP),C2(NP)
      COMMON/C704B/SAVIMO(4),TXX,VNEXX,VEEXX,VNNXX,FN(NA3,6),
     1 FBASIS(NP,6)
      COMMON/C704C/IJNDX(NB),TP(7),WP(7),F(9),CA(20),CB(20),
     1 CC(20),CD(20)
      COMMON/C704D/DM(NBB),DN(NBB)
      COMMON/C704E/VCC(NF,NF2)
C?GLD PUT ARRAY D1234 IN EXTENDED MEMORY.
C     EXTENDED BLOCK/C704F/D1234(1296)
C     COMMON /GLDDATA/ MYID(12)
C??
C?GBR/IBM/VAX/CDC/UNX
      COMMON/C704F/D1234(1296)
C??
      COMMON/CCPQ/CCPX(48),CCPY(48),CCPZ(48),CCQX(48),CCQY(48),CCQZ(48)
      COMMON/GCLOOP/IGAUSS,IGBEG,IGEND,IGDF,JGAUSS,JGBEG,JGEND,JGDF,
     1              KGAUSS,KGBEG,KGEND,KGDF,LGAUSS,LGBEG,LGEND,LGDF
      COMMON/I2ECOM/LAMAX,LBMAX,LCMAX,LDMAX,LPMAX,LQMAX,LPQMAX,L2EFLL,
     1 EQ,EP2I,RHOT2,G(13),VALI2P(49),VALI3P(112),A(174)
      COMMON/LIMIT2/ITYPE,JTYPE,KTYPE,LTYPE,
     1              IMJ,IMK,JML,KML,IMKJML,ISTART,JSTART,KSTART,LSTART,
     2              IEND,JEND,KEND,LEND,LENTQ,
     3              R3OV2,ROOT3,ROOT5,ROOT15,R1,R2,R4,Z1,Z2,Z3
      COMMON/QINFO/XA,YA,ZA,XB,YB,ZB,RABSQ,XC,YC,ZC,XD,YD,ZD,RCDSQ,
     1             PQCUT1,PQCUT2,PQCUT3,
     2             EQSAV(100),QXSAV(100),QYSAV(100),QZSAV(100),
     3             QXPSAV(100),EXPARG,PTEST,PEXP,EP,
     4             KLIND,KLCUTQ(100)
      COMMON /SHLCOM/ ISHELL,JSHELL,KSHELL,LSHELL,IRANGE,JRANGE,KRANGE,
     1 LRANGE
      COMMON/IPDRV1/
     1 AB2I,CD2I,AIAB,BIAB,CICD,DICD,PQX,PQY,PQZ,
     2 D1ABX,D1ABY,D1ABZ,D1CDX,D1CDY,D1CDZ,XYZDMY(48)
      COMMON/XYZIP1/XIP (580),YIP (580),ZIP (580),
     1              XIPI(405),YIPI(405),ZIPI(405),
     2              XIPJ(405),YIPJ(405),ZIPJ(405),
     3              XIPK(405),YIPK(405),ZIPK(405)
      COMMON/IO/IN,IOUT,IODUM1(4),IFILE,IODUM2(10),NFILE(100,2)
C
      DIMENSION INDX(20),INDY(20),INDZ(20),LBOUND(4),UBOUND(4),IMOSAV(4)
C
      EQUIVALENCE (IXYZ(1),XYZ), (SAVIMO(1),IMOSAV(1))
C
      DATA INDX/0,1,0,0,2,0,0,1,1,0,3,0,0,1,2,2,1,0,0,1/
      DATA INDY/0,0,1,0,0,2,0,1,0,1,0,3,0,2,1,0,0,1,2,1/
      DATA INDZ/0,0,0,1,0,0,2,0,1,1,0,0,3,0,0,1,2,2,1,1/
      DATA PT25/0.25D0/, PT5/0.5D0/, TEN/10.0D0/
      DATA ONEPT5/1.5D0/
      DATA TWOPT5/2.5D0/, THREE/3.0D0/, FOUR/4.0D0/, FIVE/5.0D0/
      DATA PI/3.14159265358979D0/
      DATA TENM5/1.0D-5/, TENM10/1.0D-10/, F42/42.0D0/,
     1 TENM9/1.0D-9/
      DATA LBOUND/1,1,5,11/, UBOUND/1,4,10,20/
C?GLD
C     DATA ND1234/1296/
C??
 1010 FORMAT(' DPHNIX SHELL PASSES:',I9,', FAST PASSES:',I9)
C
C     INITIALIZATION.
      IF(IOP(10).EQ.0)RETURN
C
C     FOR GOULD F77+, ARRAY D1234 IS LOCATED IN EXTENDED MEMORY.
C?GLD
C     NASK = (ND1234+MYID(12)-1) / MYID(12)
C     CALL X:GDSPCE (NASK, NGET, ISTAT, *9000)
C??
      CALL FILLST
      CALL SETCP
      IPRINT = 0
      IF (IOP(21) .EQ. 1) IPRINT = 1
      CALL RYSSET (IOP(20), IPRINT)
      PQCUT1 = TENM5
      PQCUT2 = TENM10
      PQCUT3 = F42
      PQCUT4 = TENM9
C
C     SEE IF THE 'FAST' CODE IS TO BE USED WHERE POSSIBLE.
C     GLD VERSION: FAST CODE IS TOO LARGE, SO USE ONLY REGULAR CODE.
C
C?GBR/IBM/VAX/CDC/UNX
      FCNTRL = .TRUE.
      IF (IOP(26) .EQ. 1) FCNTRL = .FALSE.
C??
      ROOT3=DSQRT(THREE)
      R3OV2=PT5*ROOT3
      ROOT5=DSQRT(FIVE)
      ROOT15 = ROOT3 * ROOT5
      R1=PT5*DSQRT(TWOPT5)
      R2=ONEPT5/ROOT5
      R4=PT5*DSQRT(ONEPT5)
      Z1=FOUR/ROOT5
      Z2=ONE/ROOT5
      Z3=THREE/ROOT5
C     RECOVER DERIVATIVES FROM DISK.
      CALL TREAD (14, SAVIMO, NFILE(14,1), 1, NFILE(14,1), 1, 0)
      IOP63=IOP(63)
      PCONST=(PI+PI)*PI*DSQRT(PI)
C
C     RETRIEVE APPROPRIATE DENSITY MATRICES.
      NOGSCF=.TRUE.
      OPEN=.FALSE.
      J=(NBASIS*(NBASIS+1))/2
      IOP9=IOP(9)-1
      IF(IOP9)10,20,30
C     CLOSED SHELL.
   10 CALL TREAD(19,DM,NBB,1,J,1,0)
      CALL REDODD(DM,J,0,IJNDX,IOP,NBASIS,1)
      GO TO 40
C     UHF OPEN SHELL.
   20 CALL TREAD(19,DM,NBB,1,J,1,0)
      CALL TREAD(21,DN,NBB,1,J,1,0)
      CALL REDODD(DM,J,0,IJNDX,IOP,NBASIS,1)
      CALL REDODD(DN,J,1,IJNDX,IOP,NBASIS,1)
      OPEN=.TRUE.
      GO TO 40
C     GENERALIZED SCF.
C     READ THE DENSITY MATRICES AND THE VECTOR COUPLING COEFFICIENTS.
   30 NVAL=IMOSAV(3)-IMOSAV(1)
      NOPEN=IMOSAV(4)-IMOSAV(3)
      NFOCK=NVAL+NOPEN+1
      K=J*NFOCK
      READ(IFILE)(DM(I),I=1,K)
      REWIND IFILE
      CALL REDODD(DM,K,0,IJNDX,IOP,NBASIS,NFOCK)
      CALL TREAD(17,VCC,NF,NF2,NFOCK,NFOCK+2,0)
      NOGSCF=.FALSE.
C
C     CLEAR LOCAL VARIABLES.
   40 DO 50 I=1,174
   50 A(I)=ZERO
      DO 60 I=1,48
      CCPX(I)=ZERO
      CCPY(I)=ZERO
      CCPZ(I)=ZERO
      CCQX(I)=ZERO
      CCQY(I)=ZERO
   60 CCQZ(I)=ZERO
      KNTSHL = 0
      KNTFST = 0
C
C     ******************************************************************
C     COMMENCE LOOPS OVER SHELLS.
C     ******************************************************************
C
      DO 405 ITMP=1,NSHELL
      DO 401 JTMP=1,ITMP
      DO 402 KTMP=1,ITMP
      MAXL=KTMP
      IF(ITMP.EQ.KTMP) MAXL=JTMP
      DO 403 LTMP=1,MAXL
      NUMDF=SHELLT(ITMP)/2+SHELLT(JTMP)/2+SHELLT(KTMP)/2+SHELLT(LTMP)/2
C     DO ALL DERIVATIVES HERE IF DTWOL WAS NOT CALLED.
      IF(IOP63.NE.0.AND.NUMDF.EQ.0) GO TO 403
      ISHELL=ITMP
      JSHELL=JTMP
      KSHELL=KTMP
      LSHELL=LTMP
      IF(IXYZ(ISHELL).NE.IXYZ(JSHELL)) GO TO 800
      ISHELL=KTMP
      JSHELL=LTMP
      KSHELL=ITMP
      LSHELL=JTMP
  800 IF(IXYZ(ISHELL).NE.IXYZ(KSHELL).AND.IXYZ(ISHELL).NE.IXYZ(LSHELL))
     1 GO TO 810
      IDUM=ISHELL
      ISHELL=JSHELL
      JSHELL=IDUM
  810 IF(IXYZ(JSHELL).NE.IXYZ(KSHELL)) GO TO 820
      IDUM=KSHELL
      KSHELL=LSHELL
      LSHELL=IDUM
  820 IATMS=IXYZ(ISHELL)
      JATMS=IXYZ(JSHELL)
      KATMS=IXYZ(KSHELL)
      LATMS=IXYZ(LSHELL)
C
C     DETERMINE IFORMS.  THIS VARIABLE DETERMINES BRANCHING
C     TO SELECT 1, 2, ETC CENTER CODE.
      IFORMS=1
      IF(KATMS.EQ.LATMS) IFORMS=IFORMS+3
      IF(IATMS.EQ.JATMS) IFORMS=IFORMS+2
      IF(JATMS.EQ.LATMS) IFORMS=IFORMS+1
      IF(IATMS.EQ.KATMS) IFORMS=IFORMS+1
C     1111=8 2111=5 2211=6 2121=3 3211=4 3121=2 4321=1.
      IF(IFORMS.EQ.8) GO TO 403
      KNTSHL = KNTSHL + 1
      XA=C(IATMS,1)
      YA=C(IATMS,2)
      ZA=C(IATMS,3)
      IGBEG=SHELLA(ISHELL)
      IGEND=IGBEG+SHELLN(ISHELL)-1
      ITYPE=SHELLT(ISHELL)
      LAMAX=ITYPE+1
      I=LBOUND(LAMAX)
      ISTART=I+SHELLC(ISHELL)
      IEND=UBOUND(LAMAX)
      IRANGE=IEND-ISTART+1
      IAOS=AOS(ISHELL)-I
C
      XB=C(JATMS,1)
      YB=C(JATMS,2)
      ZB=C(JATMS,3)
      JGBEG=SHELLA(JSHELL)
      JGEND=JGBEG+SHELLN(JSHELL)-1
      JTYPE=SHELLT(JSHELL)
      LBMAX=JTYPE+1
      J=LBOUND(LBMAX)
      JSTART=J+SHELLC(JSHELL)
      JEND=UBOUND(LBMAX)
      JRANGE=JEND-JSTART+1
      JAOS=AOS(JSHELL)-J
      LPMAX=LAMAX+JTYPE
      IMJ=IABS(ISHELL-JSHELL)
      RABSQ=(XB-XA)**2+(YB-YA)**2+(ZB-ZA)**2
C
      XC=C(KATMS,1)
      YC=C(KATMS,2)
      ZC=C(KATMS,3)
      KGBEG=SHELLA(KSHELL)
      KGEND=KGBEG+SHELLN(KSHELL)-1
      KTYPE=SHELLT(KSHELL)
      LCMAX=KTYPE+1
      K=LBOUND(LCMAX)
      KSTART=K+SHELLC(KSHELL)
      KEND=UBOUND(LCMAX)
      KRANGE=KEND-KSTART+1
      KAOS=AOS(KSHELL)-K
      IMK=IABS(ISHELL-KSHELL)
C
      XD=C(LATMS,1)
      YD=C(LATMS,2)
      ZD=C(LATMS,3)
      LGBEG=SHELLA(LSHELL)
      LGEND=LGBEG+SHELLN(LSHELL)-1
      LTYPE=SHELLT(LSHELL)
      LDMAX=LTYPE+1
      L=LBOUND(LDMAX)
      LSTART=L+SHELLC(LSHELL)
      LEND=UBOUND(LDMAX)
      LRANGE=LEND-LSTART+1
      LAOS=AOS(LSHELL)-L
      LQMAX=LCMAX+LTYPE
      LPQMAX=LPMAX+LQMAX-1
      JML=IABS(JSHELL-LSHELL)
      KML=IABS(KSHELL-LSHELL)
      IMKJML=IMK+JML
      NZERO=((ITYPE+JTYPE+KTYPE+LTYPE+1)/2)+1
      RCDSQ=(XD-XC)**2+(YD-YC)**2+(ZD-ZC)**2
C?GBR/IBM/VAX/CDC/UNX
      IFAST=FCNTRL.AND.F0INIT(KNTFST)
C??
C     OBTAIN ALL DENSITY MATRIX CONTRIBUTIONS, GIVEN THE FOUR SHELLS.
      IJKL=0
      DNSMAX=ZERO
      DO 90 I=ISTART,IEND
      IF(IMJ.EQ.0)JEND=I
      IF(IMKJML.EQ.0)KEND=I
      IAS=IAOS+I
      LII=IJNDX(IAS)
C
      DO 90 J=JSTART,JEND
      JAS=JAOS+J
      LJJ=IJNDX(JAS)
      LIJ=LII+JAS
      IF(IAS.LT.JAS)LIJ=LJJ+IAS
      IF(NOGSCF)D12=DM(LIJ)
      IF(OPEN)D12B=DN(LIJ)
      CC2=PT5
      IF(IAS.NE.JAS)CC2=CC2+CC2
C
      DO 90 K=KSTART,KEND
      LEND=UBOUND(LDMAX)
      IF(KML.EQ.0)LEND=K
      IF(IMKJML.EQ.0.AND.I.EQ.K)LEND=J
      KAS=KAOS+K
      LKK=IJNDX(KAS)
      LIK=LII+KAS
      IF(IAS.LT.KAS)LIK=LKK+IAS
      LJK=LJJ+KAS
      IF(JAS.LT.KAS)LJK=LKK+JAS
      IF(NOGSCF)D13=DM(LIK)
      IF(NOGSCF)D23=DM(LJK)
      IF(OPEN)D13B=DN(LIK)
      IF(OPEN)D23B=DN(LJK)
C
      DO 90 L=LSTART,LEND
      IJKL=IJKL+1
      LAS=LAOS+L
      LLL=IJNDX(LAS)
      LIL=LII+LAS
      IF(IAS.LT.LAS)LIL=LLL+IAS
      LJL=LJJ+LAS
      IF(JAS.LT.LAS)LJL=LLL+JAS
      LKL=LKK+LAS
      IF(KAS.LT.LAS)LKL=LLL+KAS
      CC4=CC2
      IF(KAS.NE.LAS)CC4=CC4+CC4
      IF(LIJ.NE.LKL)CC4=CC4+CC4
C
C     SELECT APPROPRIATE FORMULA BASED ON IOP(9).
      IF(IOP9)1030,1040,1050
 1030 DTEMP=D12*DM(LKL)-PT25*(D13*DM(LJL)+D23*DM(LIL))
      GO TO 1060
 1040 DTEMP=(D12+D12B)*(DM(LKL)+DN(LKL))-PT5*(D13*DM(LJL)+
     1 D23*DM(LIL)+D13B*DN(LJL)+D23B*DN(LIL))
      GO TO 1060
C     GENERAL SCF - OFFSET EACH INDEX BY THE NUMBER OF FOCK MATRICES.
 1050 NFIJ=LIJ*NFOCK-NFOCK
      NFIK=LIK*NFOCK-NFOCK
      NFIL=LIL*NFOCK-NFOCK
      NFJK=LJK*NFOCK-NFOCK
      NFJL=LJL*NFOCK-NFOCK
      NFKL=LKL*NFOCK-NFOCK
      D12=DM(NFIJ+1)
      D13=DM(NFIK+1)
      D14=DM(NFIL+1)
      D23=DM(NFJK+1)
      D24=DM(NFJL+1)
      D34=DM(NFKL+1)
C     CORE PART.
      DTEMP=D12*D34-PT25*(D13*D24+D14*D23)
      IF(NFOCK.EQ.1)GO TO 1060
      DO 1055 NI=2,NFOCK
      D12B=DM(NFIJ+NI)
      D13B=DM(NFIK+NI)
      D14B=DM(NFIL+NI)
      D23B=DM(NFJK+NI)
      D24B=DM(NFJL+NI)
      D34B=DM(NFKL+NI)
C     CORE - VALENCE-OPEN PART.
      DTEMP=DTEMP+PT5*VCC(NI,1)*(D12*D34B+D12B*D34)+
     1 PT25*VCC(1,NI)*(D13*D24B+D13B*D24+D14*D23B+D14B*D23)
C     VALENCE-OPEN - VALENCE-OPEN PART.
C     SELF-CONTRIBUTION.
      DTEMP=DTEMP+PT5*VCC(NI,NFOCK+1)*D12B*D34B+
     1 PT25*VCC(NI,NFOCK+2)*(D13B*D24B+D14B*D23B)
      IF(NI.EQ.2)GO TO 1055
      N=NI-1
      DO 1054 NJ=2,N
 1054 DTEMP=DTEMP+PT5*VCC(NI,NJ)*(D12B*DM(NFKL+NJ)+DM(NFIJ+NJ)*D34B) +
     1 PT25*VCC(NJ,NI)*(D13B*DM(NFJL+NJ)+DM(NFIK+NJ)*D24B+
     2 D14B*DM(NFJK+NJ)+DM(NFIL+NJ)*D23B)
 1055 CONTINUE
 1060 DTEMP=DTEMP*CC4
      D1234(IJKL)=DTEMP
   90 IF(DABS(DTEMP).GT.DNSMAX)DNSMAX=DABS(DTEMP)
C
      DO 65 I=1,9
   65 F(I)=ZERO
C
C     ******************************************************************
C     COMMENCE LOOP OVER GAUSSIAN EXPANSION
C     ******************************************************************
C     PRELIMINARY Q-LOOP.
      CALL QINF
C?GBR/IBM/VAX/CDC/UNX
      IF(IFAST)CALL F0CFIL
C??
      DO 300 IGAUSS=IGBEG,IGEND
      AS=EXX(IGAUSS)
      CALL FILLCP(ITYPE,IGAUSS,C1,C2,CA,CMAXI)
      ASXA=AS*XA
      ASYA=AS*YA
      ASZA=AS*ZA
C
      DO 301 JGAUSS=JGBEG,JGEND
      BS=EXX(JGAUSS)
      CALL FILLCP(JTYPE,JGAUSS,C1,C2,CB,CMAXJ)
C?GBR/IBM/VAX/CDC/UNX
      IF(IFAST)CALL F0CLD1(CA,CB)
C??
      EP=AS+BS
      EPI=ONE/EP
      EP2I=PT5*EPI
      PX=(ASXA+BS*XB)*EPI
      PY=(ASYA+BS*YB)*EPI
      PZ=(ASZA+BS*ZB)*EPI
      EXPARG=AS*BS*RABSQ*EPI
      IF(EXPARG.GT.PQCUT3)GO TO 301
      PEXP=DEXP(-EXPARG)
      PTEMP=PCONST*PEXP
      PTEST=CMAXI*CMAXJ*PEXP
      TSTIJ=DNSMAX*CMAXI*CMAXJ*TEN
      IJCUTP=0
      IF(PTEST.LT.PQCUT1) IJCUTP=1
      IF(PTEST.LT.PQCUT2) IJCUTP=2
      XAP=PX-XA
      XBP=PX-XB
      YAP=PY-YA
      YBP=PY-YB
      ZAP=PZ-ZA
      ZBP=PZ-ZB
      CALL GETCC2(CCPX,XAP,XBP,LAMAX,LBMAX)
      CALL GETCC2(CCPY,YAP,YBP,LAMAX,LBMAX)
      CALL GETCC2(CCPZ,ZAP,ZBP,LAMAX,LBMAX)
      AIAB=AS*EPI
      BIAB=BS*EPI
      AB2I=EP2I
      TEMP=-(AS+AS)*BIAB
      D1ABX=(XA-XB)*TEMP
      D1ABY=(YA-YB)*TEMP
      D1ABZ=(ZA-ZB)*TEMP
C
      KLIND=0
      DO 302 KGAUSS=KGBEG,KGEND
      CALL FILLCP(KTYPE,KGAUSS,C1,C2,CC,CMAXK)
      CS=EXX(KGAUSS)
      TSTIJK=TSTIJ*CMAXK
C
      DO 303 LGAUSS=LGBEG,LGEND
      KLIND=KLIND+1
      CALL FILLCP(LTYPE,LGAUSS,C1,C2,CD,CMAXL)
C?GBR/IBM/VAX/CDC/UNX
      IF(IFAST)CALL F0CLD2(KLIND)
C??
C     TEST CUTOFFS.
      IPQCUT=IJCUTP+KLCUTQ(KLIND)
      IF(IPQCUT.GE.2)GO TO 303
      EQ=EQSAV(KLIND)
      QX=QXSAV(KLIND)
      QY=QYSAV(KLIND)
      QZ=QZSAV(KLIND)
      QEXP=QXPSAV(KLIND)
      EPEQ=EP*EQ
      EPPEQI=ONE/(EP+EQ)
      RHO=EPEQ*EPPEQI
      TWORHO=RHO+RHO
      ZTEMP=PTEMP*DSQRT(EPPEQI)*QEXP/EPEQ
      PQCUT5=PQCUT4/ZTEMP
      PQCUT5=PQCUT5/(ONE+EP+EQ)
      ZTEST=TSTIJK*CMAXL
      IF(ZTEST.LT.PQCUT5) GO TO 303
      XCQ=QX-XC
      XDQ=QX-XD
      YCQ=QY-YC
      YDQ=QY-YD
      ZCQ=QZ-ZC
      ZDQ=QZ-ZD
      CALL GETCC2(CCQX,XCQ,XDQ,LCMAX,LDMAX)
      CALL GETCC2(CCQY,YCQ,YDQ,LCMAX,LDMAX)
      CALL GETCC2(CCQZ,ZCQ,ZDQ,LCMAX,LDMAX)
      PQX=QX-PX
      PQY=QY-PY
      PQZ=QZ-PZ
      RPQSQ=PQX*PQX+PQY*PQY+PQZ*PQZ
      DXYZ=RHO*RPQSQ
      CALL RPOLX(NZERO,DXYZ,TP,WP)
      CALL GETA2
      DS=EXX(LGAUSS)
      EQI=ONE/EQ
      CD2I=PT5*EQI
      CICD=CS*EQI
      DICD=DS*EQI
      TEMP=-(CS+CS)*DICD
      D1CDX=(XC-XD)*TEMP
      D1CDY=(YC-YD)*TEMP
      D1CDZ=(ZC-ZD)*TEMP
C?GBR/IBM/VAX/CDC/UNX
      IF (IFAST) THEN
         CALL F1ROOT(IFORMS,PQX,PQY,PQZ,RHO,ZTEMP,NZERO,
     1               TP,WP,D1234,F)
         GO TO 303
      END IF
C??
C     ******************************************************************
C     COMPUTE TWO-DIMENSIONAL INTEGRALS AND THEIR DERIVATIVES.
C     ******************************************************************
C
      CALL D2ZER(IFORMS,NZERO,NZROS,TP,WP,TWORHO,ZTEMP)
C
C     ******************************************************************
C     COMBINE TWO-DIMENSIONAL INTEGRALS TO GET DERIVATIVE CONTRIBUTIONS.
C     ******************************************************************
C
      CALL D2AO(ISHELL,JSHELL,KSHELL,LSHELL,
     $          PQCUT5,IFORMS,NZROS,D1234,F)
C
  303 CONTINUE
  302 CONTINUE
  301 CONTINUE
  300 CONTINUE
C
C     ******************************************************************
C     END OF LOOP OVER GAUSSIANS
C     ******************************************************************
C
      FXL=-(F(1)+F(2)+F(3))
      FYL=-(F(4)+F(5)+F(6))
      FZL=-(F(7)+F(8)+F(9))
      IATMS=3*(IATMS-1)
      JATMS=3*(JATMS-1)
      KATMS=3*(KATMS-1)
      LATMS=3*(LATMS-1)
      FN(1+IATMS,4)=FN(1+IATMS,4)+F(1)
      FN(1+JATMS,4)=FN(1+JATMS,4)+F(2)
      FN(1+KATMS,4)=FN(1+KATMS,4)+F(3)
      FN(1+LATMS,4)=FN(1+LATMS,4)+FXL
      FN(2+IATMS,4)=FN(2+IATMS,4)+F(4)
      FN(2+JATMS,4)=FN(2+JATMS,4)+F(5)
      FN(2+KATMS,4)=FN(2+KATMS,4)+F(6)
      FN(2+LATMS,4)=FN(2+LATMS,4)+FYL
      FN(3+IATMS,4)=FN(3+IATMS,4)+F(7)
      FN(3+JATMS,4)=FN(3+JATMS,4)+F(8)
      FN(3+KATMS,4)=FN(3+KATMS,4)+F(9)
      FN(3+LATMS,4)=FN(3+LATMS,4)+FZL
  403 CONTINUE
  402 CONTINUE
  401 CONTINUE
  405 CONTINUE
C
C     RESTORE ORIGINAL BASIS SET INFORMATION.
      IF(MAXTYP.GE.2)CALL TREAD(6,XYZ,NFILE(6,1),1,NFILE(6,1),1,0)
C
C     FOR GOULD F77+, DEALLOCATE EXTENDED MEMORY.
C?GLD
C     CALL X:FDSPCE (NASK, NGET, ISTAT, *9010)
C??
C     WRITE DERIVATIVES TO DISK.
      CALL TWRITE (14, SAVIMO, NFILE(14,1), 1, NFILE(14,1), 1, 0)
      CALL RYSSET (-1, IPRINT)
      IF (IPRINT .EQ. 0) WRITE (IOUT,1010) KNTSHL, KNTFST
      RETURN
C
C     ERROR EXITS.
C?GLD
C9000 WRITE (IOUT,9001) NASK, NGET, ISTAT
C9001 FORMAT ('0*** EXTENDED MEMORY ALLOCATION ERROR IN DPHNIX: ',
C    1 'NASK =',I4,', NGET =',I4,', ISTAT =',I4,'. ***')
C     IOP(1) = -2
C     RETURN
C*
C9010 WRITE (IOUT,9011) NASK, NGET, ISTAT
C9011 FORMAT ('0*** EXTENDED MEMORY DEALLOCATION ERROR IN DPHNIX: ',
C    1 'NASK =',I4,', NGET =',I4,', ISTAT =',I4,'. ***')
C     IOP(1) = -2
C     RETURN
C??
      END
      SUBROUTINE REDODD(D,ND,KEY,IJNDX,IOP,NBASIS,NFOCK)
C*
C     --------------
C     U OF T VERSION
C     MARCH 1987
C     --------------
C*
C     ROUTINE TO REFORMAT THE AOS PORTION OF /B/ FROM A
C     5D BASIS TO A 6D BASIS.  THIS ROUTINE ALSO CALCULATES
C     NAO, WHICH IS USED TO REFORMAT THE DENSITY MATRIX D.
C
C     ND IS THE DIMENSION OF THE DENSITY MATRIX D.
C     KEY IS 0 FOR THE FIRST ENTRY, 1 FOR SUBSEQUENT ENTRIES.
C     IJNDX(I) IS SET TO I*(I-1)/2 FOR LINEAR INDEXING.
C     IOP IS THE OPTIONS ARRAY FROM BLANK COMMON.
C     NBASIS IS THE NUMBER OF BASIS FUNCTIONS.
C     NFOCK IS THE NUMBER OF FOCK MATRICES FOR THIS DENSITY MATRIX.
C
C     THIS CODE WAS ORIGINALLY WRITTEN BY H.B. SCHLEGEL,
C     AND REVISED BY J.S. BINKLEY AND MIKE PETERSON.
C
C     THIS ROUTINE MODELLED AFTER REDOD FROM LINK 0702, MODIFIED TO
C     ACCEPT THE RHF DENSITY (BY MIKE PETERSON), AND WITH ALL ERROR
C     CHECKING REMOVED (IT WAS DONE IN LINK 0702 HOPEFULLY).
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NB=#NB)
C     PARAMETER (NS=#NS, NP=#NP)
C##
      PARAMETER (NB=200)
      PARAMETER (NS=120, NP=300)
C###
      PARAMETER (ZERO=0.0D0)
C
      INTEGER SHELLA,SHELLN,SHELLT,SHELLC,AOS
C
      COMMON/B/IXYZ(NS),SHELLA(NS),SHELLN(NS),SHELLT(NS),
     1 SHELLC(NS),AOS(NS),NSHELL,MAXTYP,EXX(NP),C1(NP),C2(NP)
C
      DIMENSION NAO(NB),IJNDX(NB)
      DIMENSION INCRM(4),IJST(4),IJEND(4),D(ND),TQ(6,6),IOP(99)
C
      DATA INCRM/0,0,1,3/, IJST/1,1,5,11/, IJEND/1,4,10,20/
      DATA H/0.5D0/, THREE/3.0D0/
C
      DO 1 I=1,NB
    1 IJNDX(I)=I*(I-1)/2
C     IF NO PURE D FUNCTIONS, RETURN.
      IF(IOP(8).EQ.0.OR.MAXTYP.LE.1)RETURN
      IF(KEY.NE.0)GO TO 100
      R=H*DSQRT(THREE)
C     REVISE AOS, AND COMPUTE NAO, A MAP FROM OLD AO TO NEW AO NUMBERS.
      INCR=0
      DO 20 I=1,NSHELL
      LAMAX=SHELLT(I)+1
      JST=AOS(I)-1+SHELLC(I)
      JN=IJEND(LAMAX)-IJST(LAMAX)+1-SHELLC(I)-INCRM(LAMAX)
      AOS(I)=AOS(I)+INCR
      DO  10 J=1,JN
      IJ=JST+J
   10 NAO(IJ)=IJ+INCR
   20 INCR=INCR+INCRM(LAMAX)
C
C     ******************************************************************
C     REFORMAT THE DENSITY MATRIX, GIVEN THE ARRAY NAO.
C     ******************************************************************
C
C     EXPAND THE MATRIX.
  100 DO 200 ITMP=1,NBASIS
      I=NBASIS+1-ITMP
      II=IJNDX(I)
      IN=NAO(I)
      IIN=IJNDX(IN)
      DO 200 JTMP=1,I
      J=I+1-JTMP
      IJ=II+J
      JN=NAO(J)
      IJN=IIN+JN
C
C     GET REVERSE BASE INDICES FOR FOCK MATRICES.
      IJ=IJ*NFOCK+1
      IJN=IJN*NFOCK+1
      DO 200 NF=1,NFOCK
      IJ=IJ-1
      IJN=IJN-1
      D(IJN)=D(IJ)
  200 IF(IJ.LT.IJN) D(IJ)=ZERO
C
C     TRANSFORMATION FROM FIVE D TO SIX D FUNCTIONS.
      DO 900 ISHELL=1,NSHELL
      LAMAX=SHELLT(ISHELL)+1
      IST=AOS(ISHELL)-1+SHELLC(ISHELL)
      IN=IJEND(LAMAX)-IJST(LAMAX)+1-SHELLC(ISHELL)
      DO 900 JSHELL=1,ISHELL
      IF(SHELLT(ISHELL).LT.2.AND.SHELLT(JSHELL).LT.2)GO TO 900
C
      LBMAX=SHELLT(JSHELL)+1
      JST=AOS(JSHELL)-1+SHELLC(JSHELL)
      JN=IJEND(LBMAX)-IJST(LBMAX)+1-SHELLC(JSHELL)
C
C     LOOP OVER ALL FOCK MATRICES.
C
      DO 850 NF=1,NFOCK
C
C     GET ALL ELEMENTS FOR A GIVEN SHELL COMBINATION
C
      DO 300 I=1,IN
      MU=IST+I
      DO 300 J=1,JN
      NU=JST+J
      IF(MU.GE.NU) MUNU=IJNDX(MU)+NU
      IF(NU.GT.MU) MUNU=IJNDX(NU)+MU
      MUNU=NFOCK*MUNU-NFOCK+NF
  300 TQ(I,J)=D(MUNU)
C
C     TRANSFORM THE COLUMNS
C
      IF(SHELLT(ISHELL).LT.2) GO TO 500
      DO 400 J=1,JN
      D0=TQ(1,J)
      D1P=TQ(2,J)
      D1M=TQ(3,J)
      D2P=TQ(4,J)
      D2M=TQ(5,J)
      TQ(1,J)=-H*D0+R*D2P
      TQ(2,J)=-H*D0-R*D2P
      TQ(3,J)=D0
      TQ(4,J)=D2M
      TQ(5,J)=D1P
  400 TQ(6,J)=D1M
C
C     TRANSFORM THE ROWS
C
  500 IF(SHELLT(JSHELL).LT.2) GO TO 700
      DO 600 I=1,IN
      D0=TQ(I,1)
      D1P=TQ(I,2)
      D1M=TQ(I,3)
      D2P=TQ(I,4)
      D2M=TQ(I,5)
      TQ(I,1)=-H*D0+R*D2P
      TQ(I,2)=-H*D0-R*D2P
      TQ(I,3)=D0
      TQ(I,4)=D2M
      TQ(I,5)=D1P
  600 TQ(I,6)=D1M
C
C     REPLACE THE CURRENT SHELL COMBINATION IN THE MATRIX
C
  700 DO 800 I=1,IN
      MU=IST+I
      DO 800 J=1,JN
      NU=JST+J
      IF(MU.GE.NU) MUNU=IJNDX(MU)+NU
      IF(NU.GT.MU) MUNU=IJNDX(NU)+MU
      MUNU=NFOCK*MUNU-NFOCK+NF
  800 D(MUNU)=TQ(I,J)
C
  850 CONTINUE
  900 CONTINUE
      RETURN
      END
      SUBROUTINE D2AO(ISHELL,JSHELL,KSHELL,LSHELL,
     $                PQCUT5,IFORMS,NZROS,D1234,F)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NB=#NB)
C     PARAMETER (NS=#NS, NP=#NP)
C##
      PARAMETER (NB=200)
      PARAMETER (NS=120, NP=300)
C###
      PARAMETER (ZERO=0.0D0)
C
      INTEGER SHELLA,SHELLN,SHELLT,SHELLC,AOS,UBOUND
C
      COMMON/B/IXYZ(NS),SHELLA(NS),SHELLN(NS),SHELLT(NS),
     1 SHELLC(NS),AOS(NS),NSHELL,MAXTYP,EXX(NP),C1(NP),C2(NP)
      COMMON/C704C/IJNDX(NB),CFILLC(23),CA(20),CB(20),
     1 CC(20),CD(20)
      COMMON/I2ECOM/LAMAX,LBMAX,LCMAX,LDMAX,LPMAX,LQMAX,LPQMAX,L2EFLL,
     1 EQ,EP2I,RHOT2,G(13),VALI2P(49),VALI3P(112),A(174)
      COMMON/LIMIT2/ITYPE,JTYPE,KTYPE,LTYPE,
     1              IMJ,IMK,JML,KML,IMKJML,ISTART,JSTART,KSTART,LSTART,
     2              IEND,JEND,KEND,LEND,LENTQ,
     3              R3OV2,ROOT3,ROOT5,ROOT15,R1,R2,R4,Z1,Z2,Z3
      COMMON/QINFO/QFILL(14),
     1             PQCUT1,PQCUT2,PQCUT3,
     2             EQSAV(100),QXSAV(100),QYSAV(100),QZSAV(100),
     3             QXPSAV(100),QFILL2(4),
     4             KLIND,KLCUTQ(100)
      COMMON/XYZIP1/XIP (580),YIP (580),ZIP (580),
     $              XIPI(405),YIPI(405),ZIPI(405),
     $              XIPJ(405),YIPJ(405),ZIPJ(405),
     $              XIPK(405),YIPK(405),ZIPK(405)
C?GLD ARRAY D1234 IS IN EXTENDED MEMORY.
C     EXTENDED DUMMY D1234
C??
      DIMENSION D1234(1296),F(9),UBOUND(4)
      DIMENSION INDX(20),INDY(20),INDZ(20)
C
      DATA UBOUND/1,4,10,20/
      DATA INDX/0,1,0,0,2,0,0,1,1,0,3,0,0,1,2,2,1,0,0,1/
      DATA INDY/0,0,1,0,0,2,0,1,0,1,0,3,0,2,1,0,0,1,2,1/
      DATA INDZ/0,0,0,1,0,0,2,0,1,1,0,0,3,0,0,1,2,2,1,1/
C
      IJKL=0
      KOFFST=LDMAX
      JOFFST=LCMAX*KOFFST
      IOFFST=LBMAX*JOFFST
      NXYZNT=LAMAX*IOFFST
C
      DO 185 I=ISTART,IEND
      IX=INDX(I)*IOFFST+1-NXYZNT
      IY=INDY(I)*IOFFST+1-NXYZNT
      IZ=INDZ(I)*IOFFST+1-NXYZNT
      IF(IMJ.EQ.0)JEND=I
      IF(IMKJML.EQ.0)KEND=I
      CC1=CA(I)
C
      DO 185 J=JSTART,JEND
      JX=INDX(J)*JOFFST+IX
      JY=INDY(J)*JOFFST+IY
      JZ=INDZ(J)*JOFFST+IZ
      CC2=CC1*CB(J)
C
      DO 185 K=KSTART,KEND
      LEND=UBOUND(LDMAX)
      KX=INDX(K)*KOFFST+JX
      KY=INDY(K)*KOFFST+JY
      KZ=INDZ(K)*KOFFST+JZ
      CC3=CC2*CC(K)
      IF(KML.EQ.0)LEND=K
      IF(IMKJML.EQ.0.AND.I.EQ.K)LEND=J
C
      DO 185 L=LSTART,LEND
      IJKL=IJKL+1
      DIJKL=D1234(IJKL)*CC3*CD(L)
      IF(DABS(DIJKL).LT.PQCUT5) GO TO 185
      LX=INDX(L)+KX
      LY=INDY(L)+KY
      LZ=INDZ(L)+KZ
      GO TO (190,191,193,192,193,193),IFORMS
  190 CONTINUE
      FXIV=ZERO
      FXJV=ZERO
      FXKV=ZERO
      FYIV=ZERO
      FYJV=ZERO
      FYKV=ZERO
      FZIV=ZERO
      FZJV=ZERO
      FZKV=ZERO
CDIR$ NOVECTOR
      DO 194 IZERO=1,NZROS
      LX=LX+NXYZNT
      LY=LY+NXYZNT
      LZ=LZ+NXYZNT
      XYIP=XIP(LX)*YIP(LY)
      XZIP=XIP(LX)*ZIP(LZ)
      YZIP=YIP(LY)*ZIP(LZ)
      FXIV=FXIV+XIPI(LX)*YZIP
      FXJV=FXJV+XIPJ(LX)*YZIP
      FXKV=FXKV+XIPK(LX)*YZIP
      FYIV=FYIV+YIPI(LY)*XZIP
      FYJV=FYJV+YIPJ(LY)*XZIP
      FYKV=FYKV+YIPK(LY)*XZIP
      FZIV=FZIV+ZIPI(LZ)*XYIP
      FZJV=FZJV+ZIPJ(LZ)*XYIP
      FZKV=FZKV+ZIPK(LZ)*XYIP
  194 CONTINUE
      F(1)=F(1)+FXIV*DIJKL
      F(2)=F(2)+FXJV*DIJKL
      F(3)=F(3)+FXKV*DIJKL
      F(4)=F(4)+FYIV*DIJKL
      F(5)=F(5)+FYJV*DIJKL
      F(6)=F(6)+FYKV*DIJKL
      F(7)=F(7)+FZIV*DIJKL
      F(8)=F(8)+FZJV*DIJKL
      F(9)=F(9)+FZKV*DIJKL
      GO TO 185
  191 CONTINUE
      FXIV=ZERO
      FXKV=ZERO
      FYIV=ZERO
      FYKV=ZERO
      FZIV=ZERO
      FZKV=ZERO
CDIR$ NOVECTOR
      DO 195 IZERO=1,NZROS
      LX=LX+NXYZNT
      LY=LY+NXYZNT
      LZ=LZ+NXYZNT
      XYIP=XIP(LX)*YIP(LY)
      XZIP=XIP(LX)*ZIP(LZ)
      YZIP=YIP(LY)*ZIP(LZ)
      FXIV=FXIV+XIPI(LX)*YZIP
      FXKV=FXKV+XIPK(LX)*YZIP
      FYIV=FYIV+YIPI(LY)*XZIP
      FYKV=FYKV+YIPK(LY)*XZIP
      FZIV=FZIV+ZIPI(LZ)*XYIP
      FZKV=FZKV+ZIPK(LZ)*XYIP
  195 CONTINUE
      F(1)=F(1)+FXIV*DIJKL
      F(3)=F(3)+FXKV*DIJKL
      F(4)=F(4)+FYIV*DIJKL
      F(6)=F(6)+FYKV*DIJKL
      F(7)=F(7)+FZIV*DIJKL
      F(9)=F(9)+FZKV*DIJKL
      GO TO 185
  192 CONTINUE
      FXIV=ZERO
      FXJV=ZERO
      FYIV=ZERO
      FYJV=ZERO
      FZIV=ZERO
      FZJV=ZERO
CDIR$ NOVECTOR
      DO 196 IZERO=1,NZROS
      LX=LX+NXYZNT
      LY=LY+NXYZNT
      LZ=LZ+NXYZNT
      XYIP=XIP(LX)*YIP(LY)
      XZIP=XIP(LX)*ZIP(LZ)
      YZIP=YIP(LY)*ZIP(LZ)
      FXIV=FXIV+XIPI(LX)*YZIP
      FXJV=FXJV+XIPJ(LX)*YZIP
      FYIV=FYIV+YIPI(LY)*XZIP
      FYJV=FYJV+YIPJ(LY)*XZIP
      FZIV=FZIV+ZIPI(LZ)*XYIP
      FZJV=FZJV+ZIPJ(LZ)*XYIP
  196 CONTINUE
      F(1)=F(1)+FXIV*DIJKL
      F(2)=F(2)+FXJV*DIJKL
      F(4)=F(4)+FYIV*DIJKL
      F(5)=F(5)+FYJV*DIJKL
      F(7)=F(7)+FZIV*DIJKL
      F(8)=F(8)+FZJV*DIJKL
      GO TO 185
  193 CONTINUE
      FXIV=ZERO
      FYIV=ZERO
      FZIV=ZERO
CDIR$ NOVECTOR
      DO 197 IZERO=1,NZROS
      LX=LX+NXYZNT
      LY=LY+NXYZNT
      LZ=LZ+NXYZNT
      FXIV=FXIV+XIPI(LX)*YIP(LY)*ZIP(LZ)
      FYIV=FYIV+YIPI(LY)*XIP(LX)*ZIP(LZ)
      FZIV=FZIV+ZIPI(LZ)*XIP(LX)*YIP(LY)
  197 CONTINUE
      F(1)=F(1)+FXIV*DIJKL
      F(4)=F(4)+FYIV*DIJKL
      F(7)=F(7)+FZIV*DIJKL
  185 CONTINUE
C
      RETURN
      END
      SUBROUTINE F1ROOT(IFORMS,PQX,PQY,PQZ,RHO,ZTEMP,NZERO,TP,WP,
     $                  D1234,F)
C***********************************************************************
C     ROUTINE TO COMPUTE REQUIRED TWO-DIMENSIONAL INTEGRALS
C     AND THEN SUM CONTRIBUTIONS INTO OUTPUT TWO-ELECTRON
C     INTEGRAL ARRAY (TQ).
C***********************************************************************
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      COMMON/I2ECOM/LAMAX,LBMAX,LCMAX,LDMAX,LPMAX,LQMAX,LPQMAX,L2EFLL,
     1 EQ,EP2I,RHOT2,G(13),VALI2P(49),VALI3P(112),A(174)
      COMMON/FST2D0/GX(45),GY(45),GZ(45),
     $              X2(125),Y2(125),Z2(125),
     $              X3(225),Y3(225),Z3(225),
     $              X4(405),Y4(405),Z4(405)
      COMMON/FSTCTR/CKLDAT(400),CIJ(100),CKL(100),KLCOND(100)
C
      DIMENSION TP(7),WP(7),D1234(1296),F(9),XINT(11)
C
      DATA XINT/1.0D0,2.0D0,3.0D0,4.0D0,5.0D0,6.0D0,7.0D0,8.0D0,9.0D0,
     1 10.0D0,11.0D0/
C
C     DETERMINE 1-CENTER TERMS.
      IG=-LPQMAX
      DO 130 IZERO=1,NZERO
      IG=IG+LPQMAX
      RHOT2=(RHO+RHO)*TP(IZERO)
      GX(1+IG)=XINT(1)
      GY(1+IG)=XINT(1)
      GZ(1+IG)=WP(IZERO)*ZTEMP
      GX(2+IG)=RHOT2*PQX*GX(1+IG)
      GY(2+IG)=RHOT2*PQY*GY(1+IG)
      GZ(2+IG)=RHOT2*PQZ*GZ(1+IG)
      IF(LPQMAX.LE.2)GO TO 130
      DO 120 IV=3,LPQMAX
      GX(IV+IG)=RHOT2*(PQX*GX(IV+IG-1)-XINT(IV-2)*GX(IV+IG-2))
      GY(IV+IG)=RHOT2*(PQY*GY(IV+IG-1)-XINT(IV-2)*GY(IV+IG-2))
  120 GZ(IV+IG)=RHOT2*(PQZ*GZ(IV+IG-1)-XINT(IV-2)*GZ(IV+IG-2))
  130 CONTINUE
C
C     CONVERT TO 2-CENTER TERMS.
      CALL F02CTR(NZERO)
C
C     CONVERT TO 3-CENTER TERMS.
      CALL F03CTR(NZERO)
C
C     CONVERT TO 4-CENTER TERMS.
      CALL F04CTR(NZERO)
C
C     COMPUTE DERIVATIVES OF TWO-DIMENSIONAL INTEGRALS.
      GO TO(201,202,203,204,205,206),IFORMS
C.....  WRT(ABC).
  201 CALL F1DABC(RHO,NZERO,TP)
      GO TO 207
C.....  WRT(AC) INTO I,K.
  202 CALL F1DAC1(RHO,NZERO,TP)
      GO TO 207
C.....  WRT(AC) INTO I,I.
  203 CALL F1DAC2(RHO,NZERO,TP)
      GO TO 207
C.....  WRT(AB) INTO I,J.
  204 CALL F1DAB1(RHO,NZERO,TP)
      GO TO 207
C.....  WRT(A) INTO I.
  205 CALL F1DA(RHO,NZERO,TP)
      GO TO 207
C.....  WRT(AB) NTO I,I.
  206 CALL F1DAB2(RHO,NZERO,TP)
  207 CONTINUE
C
C     SUM OF CONTRIBUTIONS TO FORCES.
      CALL F1SUM(IFORMS,NZERO,D1234,F)
      RETURN
      END
      SUBROUTINE F1SUM(IFORMS,NZERO,D1234,F)
C***********************************************************************
C     ROUTINE TO SUM-UP TWO-DIMENSIONAL INTEGRAL CONTRIBUTIONS
C     INTO TWO-ELECTRON INTEGRALS.
C***********************************************************************
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA)
C##
      PARAMETER (NA= 36)
C###
      COMMON /A/ IOP(99),ID1(7),ID2(NA),C1(NA,3),C2(4),ID3(401)
C
      COMMON/I2ECOM/LAMAX,LBMAX,LCMAX,LDMAX,LPMAX,LQMAX,LPQMAX,L2EFLL,
     1 EQ,EP2I,RHOT2,G(13),VALI2P(49),VALI3P(112),A(174)
      COMMON/FST2D0/GX(45),GY(45),GZ(45),
     $              X2(125),Y2(125),Z2(125),
     $              X3(225),Y3(225),Z3(225),
     $              X4(405),Y4(405),Z4(405)
      COMMON/FSTCTR/CKLDAT(400),CIJ(100),CKL(100),KLCOND(100)
      COMMON/FSTIND/IJXDAT(100),IJYDAT(100),IJZDAT(100),
     $              KLXDAT(100),KLYDAT(100),KLZDAT(100),
     $              NKLDAT(100),NIJ,MAXNKL
      COMMON/XYZIP1/XIP (580),YIP (580),ZIP (580),
     $              XIPI(405),YIPI(405),ZIPI(405),
     $              XIPJ(405),YIPJ(405),ZIPJ(405),
     $              XIPK(405),YIPK(405),ZIPK(405)
C     COMMON/ZZAAZZ/IISTAT(5,6)
      COMMON/IO/IN,IOUT,IODUM1(215)
C
      DIMENSION D1234(1296),F(9)
C
      DATA ZERO/0.D0/
C
 9000 FORMAT ('0*** NZERO =',I5,' IS INVALID IN F1SUM, LINK 0704.')
C
C     IISTAT(NZERO,IFORMS)=IISTAT(NZERO,IFORMS)+1
      LEN2D=LAMAX*LBMAX*LCMAX*LDMAX
      IF (NZERO.LE.0 .OR. NZERO.GT.5) THEN
         WRITE (IOUT,9000) NZERO
         IOP(1) = -2
         RETURN
      END IF
      GO TO(1000,2000,3000,4000,3000,3000),IFORMS
C
C     ******************************************************************
C     IFORMS=1 ... DERIVATIVES WRT ABC.
C     ******************************************************************
C
C     SELECT CODE BASED ON NUMBER OF ZEROES.
1000  GO TO(10,30,50,70,90),NZERO
C.....  SUM UP FOR ONE ZERO.
   10 INTC=0
      DO 20 IJ=1,NIJ
      IJX=IJXDAT(IJ)
      IJY=IJYDAT(IJ)
      IJZ=IJZDAT(IJ)
      NKL=NKLDAT(IJ)
      DO 20 KL=1,NKL
      INTC=INTC+1
      DIJKL=CIJ(IJ)*CKL(KL)*D1234(INTC)
      KLX=KLXDAT(KL)+IJX
      KLY=KLYDAT(KL)+IJY
      KLZ=KLZDAT(KL)+IJZ
      XY1=X4(KLX)*Y4(KLY)*DIJKL
      XZ1=X4(KLX)*Z4(KLZ)*DIJKL
      YZ1=Y4(KLY)*Z4(KLZ)*DIJKL
      F(1)=F(1)+XIPI(KLX)*YZ1
      F(2)=F(2)+XIPJ(KLX)*YZ1
      F(3)=F(3)+XIPK(KLX)*YZ1
      F(4)=F(4)+YIPI(KLY)*XZ1
      F(5)=F(5)+YIPJ(KLY)*XZ1
      F(6)=F(6)+YIPK(KLY)*XZ1
      F(7)=F(7)+ZIPI(KLZ)*XY1
      F(8)=F(8)+ZIPJ(KLZ)*XY1
   20 F(9)=F(9)+ZIPK(KLZ)*XY1
      GO TO 110
C.....  SUM UP FOR TWO ZEROES.
   30 INTC=0
      DO 40 IJ=1,NIJ
      IJX=IJXDAT(IJ)
      IJY=IJYDAT(IJ)
      IJZ=IJZDAT(IJ)
      NKL=NKLDAT(IJ)
      DO 40 KL=1,NKL
      INTC=INTC+1
      DIJKL=CIJ(IJ)*CKL(KL)*D1234(INTC)
      KLX=KLXDAT(KL)+IJX
      KLY=KLYDAT(KL)+IJY
      KLZ=KLZDAT(KL)+IJZ
      XY1=X4(KLX)*Y4(KLY)
      XZ1=X4(KLX)*Z4(KLZ)
      YZ1=Y4(KLY)*Z4(KLZ)
      XY2=X4(KLX+LEN2D)*Y4(KLY+LEN2D)
      XZ2=X4(KLX+LEN2D)*Z4(KLZ+LEN2D)
      YZ2=Y4(KLY+LEN2D)*Z4(KLZ+LEN2D)
      F(1)=F(1)+DIJKL*(XIPI(KLX)*YZ1+XIPI(KLX+LEN2D)*YZ2)
      F(2)=F(2)+DIJKL*(XIPJ(KLX)*YZ1+XIPJ(KLX+LEN2D)*YZ2)
      F(3)=F(3)+DIJKL*(XIPK(KLX)*YZ1+XIPK(KLX+LEN2D)*YZ2)
      F(4)=F(4)+DIJKL*(YIPI(KLY)*XZ1+YIPI(KLY+LEN2D)*XZ2)
      F(5)=F(5)+DIJKL*(YIPJ(KLY)*XZ1+YIPJ(KLY+LEN2D)*XZ2)
      F(6)=F(6)+DIJKL*(YIPK(KLY)*XZ1+YIPK(KLY+LEN2D)*XZ2)
      F(7)=F(7)+DIJKL*(ZIPI(KLZ)*XY1+ZIPI(KLZ+LEN2D)*XY2)
      F(8)=F(8)+DIJKL*(ZIPJ(KLZ)*XY1+ZIPJ(KLZ+LEN2D)*XY2)
   40 F(9)=F(9)+DIJKL*(ZIPK(KLZ)*XY1+ZIPK(KLZ+LEN2D)*XY2)
      GO TO 110
C.....  SUM UP FOR THREE ZEROES.
   50 LEN22=LEN2D+LEN2D
      INTC=0
      DO 60 IJ=1,NIJ
      IJX=IJXDAT(IJ)
      IJY=IJYDAT(IJ)
      IJZ=IJZDAT(IJ)
      NKL=NKLDAT(IJ)
      DO 60 KL=1,NKL
      INTC=INTC+1
      DIJKL=CIJ(IJ)*CKL(KL)*D1234(INTC)
      KLX=KLXDAT(KL)+IJX
      KLY=KLYDAT(KL)+IJY
      KLZ=KLZDAT(KL)+IJZ
      XY1=X4(KLX)*Y4(KLY)
      XZ1=X4(KLX)*Z4(KLZ)
      YZ1=Y4(KLY)*Z4(KLZ)
      XY2=X4(KLX+LEN2D)*Y4(KLY+LEN2D)
      XZ2=X4(KLX+LEN2D)*Z4(KLZ+LEN2D)
      YZ2=Y4(KLY+LEN2D)*Z4(KLZ+LEN2D)
      XY3=X4(KLX+LEN22)*Y4(KLY+LEN22)
      XZ3=X4(KLX+LEN22)*Z4(KLZ+LEN22)
      YZ3=Y4(KLY+LEN22)*Z4(KLZ+LEN22)
      F(1)=F(1)+DIJKL*
     $  (XIPI(KLX)*YZ1+XIPI(KLX+LEN2D)*YZ2+XIPI(KLX+LEN22)*YZ3)
      F(2)=F(2)+DIJKL*
     $  (XIPJ(KLX)*YZ1+XIPJ(KLX+LEN2D)*YZ2+XIPJ(KLX+LEN22)*YZ3)
      F(3)=F(3)+DIJKL*
     $  (XIPK(KLX)*YZ1+XIPK(KLX+LEN2D)*YZ2+XIPK(KLX+LEN22)*YZ3)
      F(4)=F(4)+DIJKL*
     $  (YIPI(KLY)*XZ1+YIPI(KLY+LEN2D)*XZ2+YIPI(KLY+LEN22)*XZ3)
      F(5)=F(5)+DIJKL*
     $  (YIPJ(KLY)*XZ1+YIPJ(KLY+LEN2D)*XZ2+YIPJ(KLY+LEN22)*XZ3)
      F(6)=F(6)+DIJKL*
     $  (YIPK(KLY)*XZ1+YIPK(KLY+LEN2D)*XZ2+YIPK(KLY+LEN22)*XZ3)
      F(7)=F(7)+DIJKL*
     $  (ZIPI(KLZ)*XY1+ZIPI(KLZ+LEN2D)*XY2+ZIPI(KLZ+LEN22)*XY3)
      F(8)=F(8)+DIJKL*
     $  (ZIPJ(KLZ)*XY1+ZIPJ(KLZ+LEN2D)*XY2+ZIPJ(KLZ+LEN22)*XY3)
   60 F(9)=F(9)+DIJKL*
     $  (ZIPK(KLZ)*XY1+ZIPK(KLZ+LEN2D)*XY2+ZIPK(KLZ+LEN22)*XY3)
      GO TO 110
C.....  SUM UP FOR FOUR ZEROES.
   70 LEN22=LEN2D+LEN2D
      LEN23=LEN2D+LEN22
      INTC=0
      DO 80 IJ=1,NIJ
      IJX=IJXDAT(IJ)
      IJY=IJYDAT(IJ)
      IJZ=IJZDAT(IJ)
      NKL=NKLDAT(IJ)
      DO 80 KL=1,NKL
      INTC=INTC+1
      DIJKL=CIJ(IJ)*CKL(KL)*D1234(INTC)
      KLX=KLXDAT(KL)+IJX
      KLY=KLYDAT(KL)+IJY
      KLZ=KLZDAT(KL)+IJZ
      XY1=X4(KLX)*Y4(KLY)
      XZ1=X4(KLX)*Z4(KLZ)
      YZ1=Y4(KLY)*Z4(KLZ)
      XY2=X4(KLX+LEN2D)*Y4(KLY+LEN2D)
      XZ2=X4(KLX+LEN2D)*Z4(KLZ+LEN2D)
      YZ2=Y4(KLY+LEN2D)*Z4(KLZ+LEN2D)
      XY3=X4(KLX+LEN22)*Y4(KLY+LEN22)
      XZ3=X4(KLX+LEN22)*Z4(KLZ+LEN22)
      YZ3=Y4(KLY+LEN22)*Z4(KLZ+LEN22)
      XY4=X4(KLX+LEN23)*Y4(KLY+LEN23)
      XZ4=X4(KLX+LEN23)*Z4(KLZ+LEN23)
      YZ4=Y4(KLY+LEN23)*Z4(KLZ+LEN23)
      F(1)=F(1)+DIJKL*
     $  (XIPI(KLX)*YZ1+XIPI(KLX+LEN2D)*YZ2+XIPI(KLX+LEN22)*YZ3
     $                +XIPI(KLX+LEN23)*YZ4)
      F(2)=F(2)+DIJKL*
     $  (XIPJ(KLX)*YZ1+XIPJ(KLX+LEN2D)*YZ2+XIPJ(KLX+LEN22)*YZ3
     $                +XIPJ(KLX+LEN23)*YZ4)
      F(3)=F(3)+DIJKL*
     $  (XIPK(KLX)*YZ1+XIPK(KLX+LEN2D)*YZ2+XIPK(KLX+LEN22)*YZ3
     $                +XIPK(KLX+LEN23)*YZ4)
      F(4)=F(4)+DIJKL*
     $  (YIPI(KLY)*XZ1+YIPI(KLY+LEN2D)*XZ2+YIPI(KLY+LEN22)*XZ3
     $                +YIPI(KLY+LEN23)*XZ4)
      F(5)=F(5)+DIJKL*
     $  (YIPJ(KLY)*XZ1+YIPJ(KLY+LEN2D)*XZ2+YIPJ(KLY+LEN22)*XZ3
     $                +YIPJ(KLY+LEN23)*XZ4)
      F(6)=F(6)+DIJKL*
     $  (YIPK(KLY)*XZ1+YIPK(KLY+LEN2D)*XZ2+YIPK(KLY+LEN22)*XZ3
     $                +YIPK(KLY+LEN23)*XZ4)
      F(7)=F(7)+DIJKL*
     $  (ZIPI(KLZ)*XY1+ZIPI(KLZ+LEN2D)*XY2+ZIPI(KLZ+LEN22)*XY3
     $                +ZIPI(KLZ+LEN23)*XY4)
      F(8)=F(8)+DIJKL*
     $  (ZIPJ(KLZ)*XY1+ZIPJ(KLZ+LEN2D)*XY2+ZIPJ(KLZ+LEN22)*XY3
     $                +ZIPJ(KLZ+LEN23)*XY4)
   80 F(9)=F(9)+DIJKL*
     $  (ZIPK(KLZ)*XY1+ZIPK(KLZ+LEN2D)*XY2+ZIPK(KLZ+LEN22)*XY3
     $                +ZIPK(KLZ+LEN23)*XY4)
      GO TO 110
C.....  SUM UP FOR FIVE ZEROES.
   90 LEN22=LEN2D+LEN2D
      LEN23=LEN2D+LEN22
      LEN24=LEN2D+LEN23
      INTC=0
      DO 100 IJ=1,NIJ
      IJX=IJXDAT(IJ)
      IJY=IJYDAT(IJ)
      IJZ=IJZDAT(IJ)
      NKL=NKLDAT(IJ)
      DO 100 KL=1,NKL
      INTC=INTC+1
      DIJKL=CIJ(IJ)*CKL(KL)*D1234(INTC)
      KLX=KLXDAT(KL)+IJX
      KLY=KLYDAT(KL)+IJY
      KLZ=KLZDAT(KL)+IJZ
      XY1=X4(KLX)*Y4(KLY)
      XZ1=X4(KLX)*Z4(KLZ)
      YZ1=Y4(KLY)*Z4(KLZ)
      XY2=X4(KLX+LEN2D)*Y4(KLY+LEN2D)
      XZ2=X4(KLX+LEN2D)*Z4(KLZ+LEN2D)
      YZ2=Y4(KLY+LEN2D)*Z4(KLZ+LEN2D)
      XY3=X4(KLX+LEN22)*Y4(KLY+LEN22)
      XZ3=X4(KLX+LEN22)*Z4(KLZ+LEN22)
      YZ3=Y4(KLY+LEN22)*Z4(KLZ+LEN22)
      XY4=X4(KLX+LEN23)*Y4(KLY+LEN23)
      XZ4=X4(KLX+LEN23)*Z4(KLZ+LEN23)
      YZ4=Y4(KLY+LEN23)*Z4(KLZ+LEN23)
      XY5=X4(KLX+LEN24)*Y4(KLY+LEN24)
      XZ5=X4(KLX+LEN24)*Z4(KLZ+LEN24)
      YZ5=Y4(KLY+LEN24)*Z4(KLZ+LEN24)
      F(1)=F(1)+DIJKL*
     $  (XIPI(KLX)*YZ1+XIPI(KLX+LEN2D)*YZ2+XIPI(KLX+LEN22)*YZ3
     $                +XIPI(KLX+LEN23)*YZ4+XIPI(KLX+LEN24)*YZ5)
      F(2)=F(2)+DIJKL*
     $  (XIPJ(KLX)*YZ1+XIPJ(KLX+LEN2D)*YZ2+XIPJ(KLX+LEN22)*YZ3
     $                +XIPJ(KLX+LEN23)*YZ4+XIPJ(KLX+LEN24)*YZ5)
      F(3)=F(3)+DIJKL*
     $  (XIPK(KLX)*YZ1+XIPK(KLX+LEN2D)*YZ2+XIPK(KLX+LEN22)*YZ3
     $                +XIPK(KLX+LEN23)*YZ4+XIPK(KLX+LEN24)*YZ5)
      F(4)=F(4)+DIJKL*
     $  (YIPI(KLY)*XZ1+YIPI(KLY+LEN2D)*XZ2+YIPI(KLY+LEN22)*XZ3
     $                +YIPI(KLY+LEN23)*XZ4+YIPI(KLY+LEN24)*XZ5)
      F(5)=F(5)+DIJKL*
     $  (YIPJ(KLY)*XZ1+YIPJ(KLY+LEN2D)*XZ2+YIPJ(KLY+LEN22)*XZ3
     $                +YIPJ(KLY+LEN23)*XZ4+YIPJ(KLY+LEN24)*XZ5)
      F(6)=F(6)+DIJKL*
     $  (YIPK(KLY)*XZ1+YIPK(KLY+LEN2D)*XZ2+YIPK(KLY+LEN22)*XZ3
     $                +YIPK(KLY+LEN23)*XZ4+YIPK(KLY+LEN24)*XZ5)
      F(7)=F(7)+DIJKL*
     $  (ZIPI(KLZ)*XY1+ZIPI(KLZ+LEN2D)*XY2+ZIPI(KLZ+LEN22)*XY3
     $                +ZIPI(KLZ+LEN23)*XY4+ZIPI(KLZ+LEN24)*XY5)
      F(8)=F(8)+DIJKL*
     $  (ZIPJ(KLZ)*XY1+ZIPJ(KLZ+LEN2D)*XY2+ZIPJ(KLZ+LEN22)*XY3
     $                +ZIPJ(KLZ+LEN23)*XY4+ZIPJ(KLZ+LEN24)*XY5)
  100 F(9)=F(9)+DIJKL*
     $  (ZIPK(KLZ)*XY1+ZIPK(KLZ+LEN2D)*XY2+ZIPK(KLZ+LEN22)*XY3
     $                +ZIPK(KLZ+LEN23)*XY4+ZIPK(KLZ+LEN24)*XY5)
C
  110 RETURN
C
C     ******************************************************************
C     IFORMS=2 ... DERIVATIVES WRT AC.
C     ******************************************************************
C
C     SELECT CODE BASED ON NUMBER OF ZEROES.
2000  GO TO(210,230,250,270,290),NZERO
C.....  SUM UP FOR ONE ZERO.
  210 INTC=0
      DO 220 IJ=1,NIJ
      IJX=IJXDAT(IJ)
      IJY=IJYDAT(IJ)
      IJZ=IJZDAT(IJ)
      NKL=NKLDAT(IJ)
      DO 220 KL=1,NKL
      INTC=INTC+1
      DIJKL=CIJ(IJ)*CKL(KL)*D1234(INTC)
      KLX=KLXDAT(KL)+IJX
      KLY=KLYDAT(KL)+IJY
      KLZ=KLZDAT(KL)+IJZ
      XY1=X4(KLX)*Y4(KLY)*DIJKL
      XZ1=X4(KLX)*Z4(KLZ)*DIJKL
      YZ1=Y4(KLY)*Z4(KLZ)*DIJKL
      F(1)=F(1)+XIPI(KLX)*YZ1
      F(3)=F(3)+XIPK(KLX)*YZ1
      F(4)=F(4)+YIPI(KLY)*XZ1
      F(6)=F(6)+YIPK(KLY)*XZ1
      F(7)=F(7)+ZIPI(KLZ)*XY1
  220 F(9)=F(9)+ZIPK(KLZ)*XY1
      GO TO 310
C.....  SUM UP FOR TWO ZEROES.
  230 INTC=0
      DO 240 IJ=1,NIJ
      IJX=IJXDAT(IJ)
      IJY=IJYDAT(IJ)
      IJZ=IJZDAT(IJ)
      NKL=NKLDAT(IJ)
      DO 240 KL=1,NKL
      INTC=INTC+1
      DIJKL=CIJ(IJ)*CKL(KL)*D1234(INTC)
      KLX=KLXDAT(KL)+IJX
      KLY=KLYDAT(KL)+IJY
      KLZ=KLZDAT(KL)+IJZ
      XY1=X4(KLX)*Y4(KLY)
      XZ1=X4(KLX)*Z4(KLZ)
      YZ1=Y4(KLY)*Z4(KLZ)
      XY2=X4(KLX+LEN2D)*Y4(KLY+LEN2D)
      XZ2=X4(KLX+LEN2D)*Z4(KLZ+LEN2D)
      YZ2=Y4(KLY+LEN2D)*Z4(KLZ+LEN2D)
      F(1)=F(1)+DIJKL*(XIPI(KLX)*YZ1+XIPI(KLX+LEN2D)*YZ2)
      F(3)=F(3)+DIJKL*(XIPK(KLX)*YZ1+XIPK(KLX+LEN2D)*YZ2)
      F(4)=F(4)+DIJKL*(YIPI(KLY)*XZ1+YIPI(KLY+LEN2D)*XZ2)
      F(6)=F(6)+DIJKL*(YIPK(KLY)*XZ1+YIPK(KLY+LEN2D)*XZ2)
      F(7)=F(7)+DIJKL*(ZIPI(KLZ)*XY1+ZIPI(KLZ+LEN2D)*XY2)
  240 F(9)=F(9)+DIJKL*(ZIPK(KLZ)*XY1+ZIPK(KLZ+LEN2D)*XY2)
      GO TO 310
C.....  SUM UP FOR THREE ZEROES.
  250 LEN22=LEN2D+LEN2D
      INTC=0
      DO 260 IJ=1,NIJ
      IJX=IJXDAT(IJ)
      IJY=IJYDAT(IJ)
      IJZ=IJZDAT(IJ)
      NKL=NKLDAT(IJ)
      DO 260 KL=1,NKL
      INTC=INTC+1
      DIJKL=CIJ(IJ)*CKL(KL)*D1234(INTC)
      KLX=KLXDAT(KL)+IJX
      KLY=KLYDAT(KL)+IJY
      KLZ=KLZDAT(KL)+IJZ
      XY1=X4(KLX)*Y4(KLY)
      XZ1=X4(KLX)*Z4(KLZ)
      YZ1=Y4(KLY)*Z4(KLZ)
      XY2=X4(KLX+LEN2D)*Y4(KLY+LEN2D)
      XZ2=X4(KLX+LEN2D)*Z4(KLZ+LEN2D)
      YZ2=Y4(KLY+LEN2D)*Z4(KLZ+LEN2D)
      XY3=X4(KLX+LEN22)*Y4(KLY+LEN22)
      XZ3=X4(KLX+LEN22)*Z4(KLZ+LEN22)
      YZ3=Y4(KLY+LEN22)*Z4(KLZ+LEN22)
      F(1)=F(1)+DIJKL*
     $  (XIPI(KLX)*YZ1+XIPI(KLX+LEN2D)*YZ2+XIPI(KLX+LEN22)*YZ3)
      F(3)=F(3)+DIJKL*
     $  (XIPK(KLX)*YZ1+XIPK(KLX+LEN2D)*YZ2+XIPK(KLX+LEN22)*YZ3)
      F(4)=F(4)+DIJKL*
     $  (YIPI(KLY)*XZ1+YIPI(KLY+LEN2D)*XZ2+YIPI(KLY+LEN22)*XZ3)
      F(6)=F(6)+DIJKL*
     $  (YIPK(KLY)*XZ1+YIPK(KLY+LEN2D)*XZ2+YIPK(KLY+LEN22)*XZ3)
      F(7)=F(7)+DIJKL*
     $  (ZIPI(KLZ)*XY1+ZIPI(KLZ+LEN2D)*XY2+ZIPI(KLZ+LEN22)*XY3)
  260 F(9)=F(9)+DIJKL*
     $  (ZIPK(KLZ)*XY1+ZIPK(KLZ+LEN2D)*XY2+ZIPK(KLZ+LEN22)*XY3)
      GO TO 310
C.....  SUM UP FOR FOUR ZEROES.
  270 LEN22=LEN2D+LEN2D
      LEN23=LEN2D+LEN22
      INTC=0
      DO 280 IJ=1,NIJ
      IJX=IJXDAT(IJ)
      IJY=IJYDAT(IJ)
      IJZ=IJZDAT(IJ)
      NKL=NKLDAT(IJ)
      DO 280 KL=1,NKL
      INTC=INTC+1
      DIJKL=CIJ(IJ)*CKL(KL)*D1234(INTC)
      KLX=KLXDAT(KL)+IJX
      KLY=KLYDAT(KL)+IJY
      KLZ=KLZDAT(KL)+IJZ
      XY1=X4(KLX)*Y4(KLY)
      XZ1=X4(KLX)*Z4(KLZ)
      YZ1=Y4(KLY)*Z4(KLZ)
      XY2=X4(KLX+LEN2D)*Y4(KLY+LEN2D)
      XZ2=X4(KLX+LEN2D)*Z4(KLZ+LEN2D)
      YZ2=Y4(KLY+LEN2D)*Z4(KLZ+LEN2D)
      XY3=X4(KLX+LEN22)*Y4(KLY+LEN22)
      XZ3=X4(KLX+LEN22)*Z4(KLZ+LEN22)
      YZ3=Y4(KLY+LEN22)*Z4(KLZ+LEN22)
      XY4=X4(KLX+LEN23)*Y4(KLY+LEN23)
      XZ4=X4(KLX+LEN23)*Z4(KLZ+LEN23)
      YZ4=Y4(KLY+LEN23)*Z4(KLZ+LEN23)
      F(1)=F(1)+DIJKL*
     $  (XIPI(KLX)*YZ1+XIPI(KLX+LEN2D)*YZ2+XIPI(KLX+LEN22)*YZ3
     $                +XIPI(KLX+LEN23)*YZ4)
      F(3)=F(3)+DIJKL*
     $  (XIPK(KLX)*YZ1+XIPK(KLX+LEN2D)*YZ2+XIPK(KLX+LEN22)*YZ3
     $                +XIPK(KLX+LEN23)*YZ4)
      F(4)=F(4)+DIJKL*
     $  (YIPI(KLY)*XZ1+YIPI(KLY+LEN2D)*XZ2+YIPI(KLY+LEN22)*XZ3
     $                +YIPI(KLY+LEN23)*XZ4)
      F(6)=F(6)+DIJKL*
     $  (YIPK(KLY)*XZ1+YIPK(KLY+LEN2D)*XZ2+YIPK(KLY+LEN22)*XZ3
     $                +YIPK(KLY+LEN23)*XZ4)
      F(7)=F(7)+DIJKL*
     $  (ZIPI(KLZ)*XY1+ZIPI(KLZ+LEN2D)*XY2+ZIPI(KLZ+LEN22)*XY3
     $                +ZIPI(KLZ+LEN23)*XY4)
  280 F(9)=F(9)+DIJKL*
     $  (ZIPK(KLZ)*XY1+ZIPK(KLZ+LEN2D)*XY2+ZIPK(KLZ+LEN22)*XY3
     $                +ZIPK(KLZ+LEN23)*XY4)
      GO TO 310
C.....  SUM UP FOR FIVE ZEROES.
  290 LEN22=LEN2D+LEN2D
      LEN23=LEN2D+LEN22
      LEN24=LEN2D+LEN23
      INTC=0
      DO 300 IJ=1,NIJ
      IJX=IJXDAT(IJ)
      IJY=IJYDAT(IJ)
      IJZ=IJZDAT(IJ)
      NKL=NKLDAT(IJ)
      DO 300 KL=1,NKL
      INTC=INTC+1
      DIJKL=CIJ(IJ)*CKL(KL)*D1234(INTC)
      KLX=KLXDAT(KL)+IJX
      KLY=KLYDAT(KL)+IJY
      KLZ=KLZDAT(KL)+IJZ
      XY1=X4(KLX)*Y4(KLY)
      XZ1=X4(KLX)*Z4(KLZ)
      YZ1=Y4(KLY)*Z4(KLZ)
      XY2=X4(KLX+LEN2D)*Y4(KLY+LEN2D)
      XZ2=X4(KLX+LEN2D)*Z4(KLZ+LEN2D)
      YZ2=Y4(KLY+LEN2D)*Z4(KLZ+LEN2D)
      XY3=X4(KLX+LEN22)*Y4(KLY+LEN22)
      XZ3=X4(KLX+LEN22)*Z4(KLZ+LEN22)
      YZ3=Y4(KLY+LEN22)*Z4(KLZ+LEN22)
      XY4=X4(KLX+LEN23)*Y4(KLY+LEN23)
      XZ4=X4(KLX+LEN23)*Z4(KLZ+LEN23)
      YZ4=Y4(KLY+LEN23)*Z4(KLZ+LEN23)
      XY5=X4(KLX+LEN24)*Y4(KLY+LEN24)
      XZ5=X4(KLX+LEN24)*Z4(KLZ+LEN24)
      YZ5=Y4(KLY+LEN24)*Z4(KLZ+LEN24)
      F(1)=F(1)+DIJKL*
     $  (XIPI(KLX)*YZ1+XIPI(KLX+LEN2D)*YZ2+XIPI(KLX+LEN22)*YZ3
     $                +XIPI(KLX+LEN23)*YZ4+XIPI(KLX+LEN24)*YZ5)
      F(3)=F(3)+DIJKL*
     $  (XIPK(KLX)*YZ1+XIPK(KLX+LEN2D)*YZ2+XIPK(KLX+LEN22)*YZ3
     $                +XIPK(KLX+LEN23)*YZ4+XIPK(KLX+LEN24)*YZ5)
      F(4)=F(4)+DIJKL*
     $  (YIPI(KLY)*XZ1+YIPI(KLY+LEN2D)*XZ2+YIPI(KLY+LEN22)*XZ3
     $                +YIPI(KLY+LEN23)*XZ4+YIPI(KLY+LEN24)*XZ5)
      F(6)=F(6)+DIJKL*
     $  (YIPK(KLY)*XZ1+YIPK(KLY+LEN2D)*XZ2+YIPK(KLY+LEN22)*XZ3
     $                +YIPK(KLY+LEN23)*XZ4+YIPK(KLY+LEN24)*XZ5)
      F(7)=F(7)+DIJKL*
     $  (ZIPI(KLZ)*XY1+ZIPI(KLZ+LEN2D)*XY2+ZIPI(KLZ+LEN22)*XY3
     $                +ZIPI(KLZ+LEN23)*XY4+ZIPI(KLZ+LEN24)*XY5)
  300 F(9)=F(9)+DIJKL*
     $  (ZIPK(KLZ)*XY1+ZIPK(KLZ+LEN2D)*XY2+ZIPK(KLZ+LEN22)*XY3
     $                +ZIPK(KLZ+LEN23)*XY4+ZIPK(KLZ+LEN24)*XY5)
C
  310 RETURN
C
C     ******************************************************************
C     IFORMS=3 ... DERIVATIVES WRT A.
C     ******************************************************************
C
C     SELECT CODE BASED ON NUMBER OF ZEROES.
3000  GO TO(410,430,450,470,490),NZERO
C.....  SUM UP FOR ONE ZERO.
  410 INTC=0
      DO 420 IJ=1,NIJ
      IJX=IJXDAT(IJ)
      IJY=IJYDAT(IJ)
      IJZ=IJZDAT(IJ)
      NKL=NKLDAT(IJ)
      DO 420 KL=1,NKL
      INTC=INTC+1
      DIJKL=CIJ(IJ)*CKL(KL)*D1234(INTC)
      KLX=KLXDAT(KL)+IJX
      KLY=KLYDAT(KL)+IJY
      KLZ=KLZDAT(KL)+IJZ
      XY1=X4(KLX)*Y4(KLY)*DIJKL
      XZ1=X4(KLX)*Z4(KLZ)*DIJKL
      YZ1=Y4(KLY)*Z4(KLZ)*DIJKL
      F(1)=F(1)+XIPI(KLX)*YZ1
      F(4)=F(4)+YIPI(KLY)*XZ1
  420 F(7)=F(7)+ZIPI(KLZ)*XY1
      GO TO 510
C.....  SUM UP FOR TWO ZEROES.
  430 INTC=0
      DO 440 IJ=1,NIJ
      IJX=IJXDAT(IJ)
      IJY=IJYDAT(IJ)
      IJZ=IJZDAT(IJ)
      NKL=NKLDAT(IJ)
      DO 440 KL=1,NKL
      INTC=INTC+1
      DIJKL=CIJ(IJ)*CKL(KL)*D1234(INTC)
      KLX=KLXDAT(KL)+IJX
      KLY=KLYDAT(KL)+IJY
      KLZ=KLZDAT(KL)+IJZ
      XY1=X4(KLX)*Y4(KLY)
      XZ1=X4(KLX)*Z4(KLZ)
      YZ1=Y4(KLY)*Z4(KLZ)
      XY2=X4(KLX+LEN2D)*Y4(KLY+LEN2D)
      XZ2=X4(KLX+LEN2D)*Z4(KLZ+LEN2D)
      YZ2=Y4(KLY+LEN2D)*Z4(KLZ+LEN2D)
      F(1)=F(1)+DIJKL*(XIPI(KLX)*YZ1+XIPI(KLX+LEN2D)*YZ2)
      F(4)=F(4)+DIJKL*(YIPI(KLY)*XZ1+YIPI(KLY+LEN2D)*XZ2)
  440 F(7)=F(7)+DIJKL*(ZIPI(KLZ)*XY1+ZIPI(KLZ+LEN2D)*XY2)
      GO TO 510
C.....  SUM UP FOR THREE ZEROES.
  450 LEN22=LEN2D+LEN2D
      INTC=0
      DO 460 IJ=1,NIJ
      IJX=IJXDAT(IJ)
      IJY=IJYDAT(IJ)
      IJZ=IJZDAT(IJ)
      NKL=NKLDAT(IJ)
      DO 460 KL=1,NKL
      INTC=INTC+1
      DIJKL=CIJ(IJ)*CKL(KL)*D1234(INTC)
      KLX=KLXDAT(KL)+IJX
      KLY=KLYDAT(KL)+IJY
      KLZ=KLZDAT(KL)+IJZ
      XY1=X4(KLX)*Y4(KLY)
      XZ1=X4(KLX)*Z4(KLZ)
      YZ1=Y4(KLY)*Z4(KLZ)
      XY2=X4(KLX+LEN2D)*Y4(KLY+LEN2D)
      XZ2=X4(KLX+LEN2D)*Z4(KLZ+LEN2D)
      YZ2=Y4(KLY+LEN2D)*Z4(KLZ+LEN2D)
      XY3=X4(KLX+LEN22)*Y4(KLY+LEN22)
      XZ3=X4(KLX+LEN22)*Z4(KLZ+LEN22)
      YZ3=Y4(KLY+LEN22)*Z4(KLZ+LEN22)
      F(1)=F(1)+DIJKL*
     $  (XIPI(KLX)*YZ1+XIPI(KLX+LEN2D)*YZ2+XIPI(KLX+LEN22)*YZ3)
      F(4)=F(4)+DIJKL*
     $  (YIPI(KLY)*XZ1+YIPI(KLY+LEN2D)*XZ2+YIPI(KLY+LEN22)*XZ3)
  460 F(7)=F(7)+DIJKL*
     $  (ZIPI(KLZ)*XY1+ZIPI(KLZ+LEN2D)*XY2+ZIPI(KLZ+LEN22)*XY3)
      GO TO 510
C.....  SUM UP FOR FOUR ZEROES.
  470 LEN22=LEN2D+LEN2D
      LEN23=LEN2D+LEN22
      INTC=0
      DO 480 IJ=1,NIJ
      IJX=IJXDAT(IJ)
      IJY=IJYDAT(IJ)
      IJZ=IJZDAT(IJ)
      NKL=NKLDAT(IJ)
      DO 480 KL=1,NKL
      INTC=INTC+1
      DIJKL=CIJ(IJ)*CKL(KL)*D1234(INTC)
      KLX=KLXDAT(KL)+IJX
      KLY=KLYDAT(KL)+IJY
      KLZ=KLZDAT(KL)+IJZ
      XY1=X4(KLX)*Y4(KLY)
      XZ1=X4(KLX)*Z4(KLZ)
      YZ1=Y4(KLY)*Z4(KLZ)
      XY2=X4(KLX+LEN2D)*Y4(KLY+LEN2D)
      XZ2=X4(KLX+LEN2D)*Z4(KLZ+LEN2D)
      YZ2=Y4(KLY+LEN2D)*Z4(KLZ+LEN2D)
      XY3=X4(KLX+LEN22)*Y4(KLY+LEN22)
      XZ3=X4(KLX+LEN22)*Z4(KLZ+LEN22)
      YZ3=Y4(KLY+LEN22)*Z4(KLZ+LEN22)
      XY4=X4(KLX+LEN23)*Y4(KLY+LEN23)
      XZ4=X4(KLX+LEN23)*Z4(KLZ+LEN23)
      YZ4=Y4(KLY+LEN23)*Z4(KLZ+LEN23)
      F(1)=F(1)+DIJKL*
     $  (XIPI(KLX)*YZ1+XIPI(KLX+LEN2D)*YZ2+XIPI(KLX+LEN22)*YZ3
     $                +XIPI(KLX+LEN23)*YZ4)
      F(4)=F(4)+DIJKL*
     $  (YIPI(KLY)*XZ1+YIPI(KLY+LEN2D)*XZ2+YIPI(KLY+LEN22)*XZ3
     $                +YIPI(KLY+LEN23)*XZ4)
  480 F(7)=F(7)+DIJKL*
     $  (ZIPI(KLZ)*XY1+ZIPI(KLZ+LEN2D)*XY2+ZIPI(KLZ+LEN22)*XY3
     $                +ZIPI(KLZ+LEN23)*XY4)
      GO TO 510
C.....  SUM UP FOR FIVE ZEROES.
  490 LEN22=LEN2D+LEN2D
      LEN23=LEN2D+LEN22
      LEN24=LEN2D+LEN23
      INTC=0
      DO 500 IJ=1,NIJ
      IJX=IJXDAT(IJ)
      IJY=IJYDAT(IJ)
      IJZ=IJZDAT(IJ)
      NKL=NKLDAT(IJ)
      DO 500 KL=1,NKL
      INTC=INTC+1
      DIJKL=CIJ(IJ)*CKL(KL)*D1234(INTC)
      KLX=KLXDAT(KL)+IJX
      KLY=KLYDAT(KL)+IJY
      KLZ=KLZDAT(KL)+IJZ
      XY1=X4(KLX)*Y4(KLY)
      XZ1=X4(KLX)*Z4(KLZ)
      YZ1=Y4(KLY)*Z4(KLZ)
      XY2=X4(KLX+LEN2D)*Y4(KLY+LEN2D)
      XZ2=X4(KLX+LEN2D)*Z4(KLZ+LEN2D)
      YZ2=Y4(KLY+LEN2D)*Z4(KLZ+LEN2D)
      XY3=X4(KLX+LEN22)*Y4(KLY+LEN22)
      XZ3=X4(KLX+LEN22)*Z4(KLZ+LEN22)
      YZ3=Y4(KLY+LEN22)*Z4(KLZ+LEN22)
      XY4=X4(KLX+LEN23)*Y4(KLY+LEN23)
      XZ4=X4(KLX+LEN23)*Z4(KLZ+LEN23)
      YZ4=Y4(KLY+LEN23)*Z4(KLZ+LEN23)
      XY5=X4(KLX+LEN24)*Y4(KLY+LEN24)
      XZ5=X4(KLX+LEN24)*Z4(KLZ+LEN24)
      YZ5=Y4(KLY+LEN24)*Z4(KLZ+LEN24)
      F(1)=F(1)+DIJKL*
     $  (XIPI(KLX)*YZ1+XIPI(KLX+LEN2D)*YZ2+XIPI(KLX+LEN22)*YZ3
     $                +XIPI(KLX+LEN23)*YZ4+XIPI(KLX+LEN24)*YZ5)
      F(4)=F(4)+DIJKL*
     $  (YIPI(KLY)*XZ1+YIPI(KLY+LEN2D)*XZ2+YIPI(KLY+LEN22)*XZ3
     $                +YIPI(KLY+LEN23)*XZ4+YIPI(KLY+LEN24)*XZ5)
  500 F(7)=F(7)+DIJKL*
     $  (ZIPI(KLZ)*XY1+ZIPI(KLZ+LEN2D)*XY2+ZIPI(KLZ+LEN22)*XY3
     $                +ZIPI(KLZ+LEN23)*XY4+ZIPI(KLZ+LEN24)*XY5)
C
  510 RETURN
C
C     ******************************************************************
C     IFORMS=4 ... DERIVATIVES WRT AB.
C     ******************************************************************
C
C     SELECT CODE BASED ON NUMBER OF ZEROES.
4000  GO TO(610,630,650,670,690),NZERO
C.....  SUM UP FOR ONE ZERO.
  610 INTC=0
      DO 620 IJ=1,NIJ
      IJX=IJXDAT(IJ)
      IJY=IJYDAT(IJ)
      IJZ=IJZDAT(IJ)
      NKL=NKLDAT(IJ)
      DO 620 KL=1,NKL
      INTC=INTC+1
      DIJKL=CIJ(IJ)*CKL(KL)*D1234(INTC)
      KLX=KLXDAT(KL)+IJX
      KLY=KLYDAT(KL)+IJY
      KLZ=KLZDAT(KL)+IJZ
      XY1=X4(KLX)*Y4(KLY)*DIJKL
      XZ1=X4(KLX)*Z4(KLZ)*DIJKL
      YZ1=Y4(KLY)*Z4(KLZ)*DIJKL
      F(1)=F(1)+XIPI(KLX)*YZ1
      F(2)=F(2)+XIPJ(KLX)*YZ1
      F(4)=F(4)+YIPI(KLY)*XZ1
      F(5)=F(5)+YIPJ(KLY)*XZ1
      F(7)=F(7)+ZIPI(KLZ)*XY1
  620 F(8)=F(8)+ZIPJ(KLZ)*XY1
      GO TO 710
C.....  SUM UP FOR TWO ZEROES.
  630 INTC=0
      DO 640 IJ=1,NIJ
      IJX=IJXDAT(IJ)
      IJY=IJYDAT(IJ)
      IJZ=IJZDAT(IJ)
      NKL=NKLDAT(IJ)
      DO 640 KL=1,NKL
      INTC=INTC+1
      DIJKL=CIJ(IJ)*CKL(KL)*D1234(INTC)
      KLX=KLXDAT(KL)+IJX
      KLY=KLYDAT(KL)+IJY
      KLZ=KLZDAT(KL)+IJZ
      XY1=X4(KLX)*Y4(KLY)
      XZ1=X4(KLX)*Z4(KLZ)
      YZ1=Y4(KLY)*Z4(KLZ)
      XY2=X4(KLX+LEN2D)*Y4(KLY+LEN2D)
      XZ2=X4(KLX+LEN2D)*Z4(KLZ+LEN2D)
      YZ2=Y4(KLY+LEN2D)*Z4(KLZ+LEN2D)
      F(1)=F(1)+DIJKL*(XIPI(KLX)*YZ1+XIPI(KLX+LEN2D)*YZ2)
      F(2)=F(2)+DIJKL*(XIPJ(KLX)*YZ1+XIPJ(KLX+LEN2D)*YZ2)
      F(4)=F(4)+DIJKL*(YIPI(KLY)*XZ1+YIPI(KLY+LEN2D)*XZ2)
      F(5)=F(5)+DIJKL*(YIPJ(KLY)*XZ1+YIPJ(KLY+LEN2D)*XZ2)
      F(7)=F(7)+DIJKL*(ZIPI(KLZ)*XY1+ZIPI(KLZ+LEN2D)*XY2)
  640 F(8)=F(8)+DIJKL*(ZIPJ(KLZ)*XY1+ZIPJ(KLZ+LEN2D)*XY2)
      GO TO 710
C.....  SUM UP FOR THREE ZEROES.
  650 LEN22=LEN2D+LEN2D
      INTC=0
      DO 660 IJ=1,NIJ
      IJX=IJXDAT(IJ)
      IJY=IJYDAT(IJ)
      IJZ=IJZDAT(IJ)
      NKL=NKLDAT(IJ)
      DO 660 KL=1,NKL
      INTC=INTC+1
      DIJKL=CIJ(IJ)*CKL(KL)*D1234(INTC)
      KLX=KLXDAT(KL)+IJX
      KLY=KLYDAT(KL)+IJY
      KLZ=KLZDAT(KL)+IJZ
      XY1=X4(KLX)*Y4(KLY)
      XZ1=X4(KLX)*Z4(KLZ)
      YZ1=Y4(KLY)*Z4(KLZ)
      XY2=X4(KLX+LEN2D)*Y4(KLY+LEN2D)
      XZ2=X4(KLX+LEN2D)*Z4(KLZ+LEN2D)
      YZ2=Y4(KLY+LEN2D)*Z4(KLZ+LEN2D)
      XY3=X4(KLX+LEN22)*Y4(KLY+LEN22)
      XZ3=X4(KLX+LEN22)*Z4(KLZ+LEN22)
      YZ3=Y4(KLY+LEN22)*Z4(KLZ+LEN22)
      F(1)=F(1)+DIJKL*
     $  (XIPI(KLX)*YZ1+XIPI(KLX+LEN2D)*YZ2+XIPI(KLX+LEN22)*YZ3)
      F(2)=F(2)+DIJKL*
     $  (XIPJ(KLX)*YZ1+XIPJ(KLX+LEN2D)*YZ2+XIPJ(KLX+LEN22)*YZ3)
      F(4)=F(4)+DIJKL*
     $  (YIPI(KLY)*XZ1+YIPI(KLY+LEN2D)*XZ2+YIPI(KLY+LEN22)*XZ3)
      F(5)=F(5)+DIJKL*
     $  (YIPJ(KLY)*XZ1+YIPJ(KLY+LEN2D)*XZ2+YIPJ(KLY+LEN22)*XZ3)
      F(7)=F(7)+DIJKL*
     $  (ZIPI(KLZ)*XY1+ZIPI(KLZ+LEN2D)*XY2+ZIPI(KLZ+LEN22)*XY3)
  660 F(8)=F(8)+DIJKL*
     $  (ZIPJ(KLZ)*XY1+ZIPJ(KLZ+LEN2D)*XY2+ZIPJ(KLZ+LEN22)*XY3)
      GO TO 710
C.....  SUM UP FOR FOUR ZEROES.
  670 LEN22=LEN2D+LEN2D
      LEN23=LEN2D+LEN22
      INTC=0
      DO 680 IJ=1,NIJ
      IJX=IJXDAT(IJ)
      IJY=IJYDAT(IJ)
      IJZ=IJZDAT(IJ)
      NKL=NKLDAT(IJ)
      DO 680 KL=1,NKL
      INTC=INTC+1
      DIJKL=CIJ(IJ)*CKL(KL)*D1234(INTC)
      KLX=KLXDAT(KL)+IJX
      KLY=KLYDAT(KL)+IJY
      KLZ=KLZDAT(KL)+IJZ
      XY1=X4(KLX)*Y4(KLY)
      XZ1=X4(KLX)*Z4(KLZ)
      YZ1=Y4(KLY)*Z4(KLZ)
      XY2=X4(KLX+LEN2D)*Y4(KLY+LEN2D)
      XZ2=X4(KLX+LEN2D)*Z4(KLZ+LEN2D)
      YZ2=Y4(KLY+LEN2D)*Z4(KLZ+LEN2D)
      XY3=X4(KLX+LEN22)*Y4(KLY+LEN22)
      XZ3=X4(KLX+LEN22)*Z4(KLZ+LEN22)
      YZ3=Y4(KLY+LEN22)*Z4(KLZ+LEN22)
      XY4=X4(KLX+LEN23)*Y4(KLY+LEN23)
      XZ4=X4(KLX+LEN23)*Z4(KLZ+LEN23)
      YZ4=Y4(KLY+LEN23)*Z4(KLZ+LEN23)
      F(1)=F(1)+DIJKL*
     $  (XIPI(KLX)*YZ1+XIPI(KLX+LEN2D)*YZ2+XIPI(KLX+LEN22)*YZ3
     $                +XIPI(KLX+LEN23)*YZ4)
      F(2)=F(2)+DIJKL*
     $  (XIPJ(KLX)*YZ1+XIPJ(KLX+LEN2D)*YZ2+XIPJ(KLX+LEN22)*YZ3
     $                +XIPJ(KLX+LEN23)*YZ4)
      F(4)=F(4)+DIJKL*
     $  (YIPI(KLY)*XZ1+YIPI(KLY+LEN2D)*XZ2+YIPI(KLY+LEN22)*XZ3
     $                +YIPI(KLY+LEN23)*XZ4)
      F(5)=F(5)+DIJKL*
     $  (YIPJ(KLY)*XZ1+YIPJ(KLY+LEN2D)*XZ2+YIPJ(KLY+LEN22)*XZ3
     $                +YIPJ(KLY+LEN23)*XZ4)
      F(7)=F(7)+DIJKL*
     $  (ZIPI(KLZ)*XY1+ZIPI(KLZ+LEN2D)*XY2+ZIPI(KLZ+LEN22)*XY3
     $                +ZIPI(KLZ+LEN23)*XY4)
  680 F(8)=F(8)+DIJKL*
     $  (ZIPJ(KLZ)*XY1+ZIPJ(KLZ+LEN2D)*XY2+ZIPJ(KLZ+LEN22)*XY3
     $                +ZIPJ(KLZ+LEN23)*XY4)
      GO TO 710
C.....  SUM UP FOR FIVE ZEROES.
  690 LEN22=LEN2D+LEN2D
      LEN23=LEN2D+LEN22
      LEN24=LEN2D+LEN23
      INTC=0
      DO 700 IJ=1,NIJ
      IJX=IJXDAT(IJ)
      IJY=IJYDAT(IJ)
      IJZ=IJZDAT(IJ)
      NKL=NKLDAT(IJ)
      DO 700 KL=1,NKL
      INTC=INTC+1
      DIJKL=CIJ(IJ)*CKL(KL)*D1234(INTC)
      KLX=KLXDAT(KL)+IJX
      KLY=KLYDAT(KL)+IJY
      KLZ=KLZDAT(KL)+IJZ
      XY1=X4(KLX)*Y4(KLY)
      XZ1=X4(KLX)*Z4(KLZ)
      YZ1=Y4(KLY)*Z4(KLZ)
      XY2=X4(KLX+LEN2D)*Y4(KLY+LEN2D)
      XZ2=X4(KLX+LEN2D)*Z4(KLZ+LEN2D)
      YZ2=Y4(KLY+LEN2D)*Z4(KLZ+LEN2D)
      XY3=X4(KLX+LEN22)*Y4(KLY+LEN22)
      XZ3=X4(KLX+LEN22)*Z4(KLZ+LEN22)
      YZ3=Y4(KLY+LEN22)*Z4(KLZ+LEN22)
      XY4=X4(KLX+LEN23)*Y4(KLY+LEN23)
      XZ4=X4(KLX+LEN23)*Z4(KLZ+LEN23)
      YZ4=Y4(KLY+LEN23)*Z4(KLZ+LEN23)
      XY5=X4(KLX+LEN24)*Y4(KLY+LEN24)
      XZ5=X4(KLX+LEN24)*Z4(KLZ+LEN24)
      YZ5=Y4(KLY+LEN24)*Z4(KLZ+LEN24)
      F(1)=F(1)+DIJKL*
     $  (XIPI(KLX)*YZ1+XIPI(KLX+LEN2D)*YZ2+XIPI(KLX+LEN22)*YZ3
     $                +XIPI(KLX+LEN23)*YZ4+XIPI(KLX+LEN24)*YZ5)
      F(2)=F(2)+DIJKL*
     $  (XIPJ(KLX)*YZ1+XIPJ(KLX+LEN2D)*YZ2+XIPJ(KLX+LEN22)*YZ3
     $                +XIPJ(KLX+LEN23)*YZ4+XIPJ(KLX+LEN24)*YZ5)
      F(4)=F(4)+DIJKL*
     $  (YIPI(KLY)*XZ1+YIPI(KLY+LEN2D)*XZ2+YIPI(KLY+LEN22)*XZ3
     $                +YIPI(KLY+LEN23)*XZ4+YIPI(KLY+LEN24)*XZ5)
      F(5)=F(5)+DIJKL*
     $  (YIPJ(KLY)*XZ1+YIPJ(KLY+LEN2D)*XZ2+YIPJ(KLY+LEN22)*XZ3
     $                +YIPJ(KLY+LEN23)*XZ4+YIPJ(KLY+LEN24)*XZ5)
      F(7)=F(7)+DIJKL*
     $  (ZIPI(KLZ)*XY1+ZIPI(KLZ+LEN2D)*XY2+ZIPI(KLZ+LEN22)*XY3
     $                +ZIPI(KLZ+LEN23)*XY4+ZIPI(KLZ+LEN24)*XY5)
  700 F(8)=F(8)+DIJKL*
     $  (ZIPJ(KLZ)*XY1+ZIPJ(KLZ+LEN2D)*XY2+ZIPJ(KLZ+LEN22)*XY3
     $                +ZIPJ(KLZ+LEN23)*XY4+ZIPJ(KLZ+LEN24)*XY5)
C
  710 RETURN
      END
