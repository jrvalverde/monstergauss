c
c     Program zmat
c
c     Read standard Gaussian/Monstergauss Z matrices and convert
c     them to Cartesian coordinates.
c
      Program Zmat rix
c
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA)
C     PARAMETER (NS=#NS)
C     PARAMETER (NO=#NO)
C##
      PARAMETER (NA= 36)
      PARAMETER (NS=120)
      PARAMETER (NO=125)
C###
      PARAMETER (NA3=3*NA, NZ=NA3-6)
C
      CHARACTER TITLE*72,IELEM*4,NAMES*8
C
      COMMON /A/ IOP(99)
      COMMON /A/ NATOMS,ICHARG,MULTIP,IAN(NA),NAE,NBE,NE,NBASIS,C(NA,3)
      COMMON /A/ ANTOAU,FCONST(2),FCCONV,ICDUM(401)
C
      COMMON/ZMAT/IZ(NA,4),BL(NA),ALPHA(NA),BETA(NA),
     1 IPAR(15,3),NIPAR(3),NPAR,NSTEP,DX(3),NUM,NUMB,
     2 LBL(NA),LALPHA(NA),LBETA(NA),IZMASS(NA),ZMASS(NA)
      COMMON/ZMATC/TITLE,IELEM(NA),NAMES(NZ)
C?IBM/CDC/VAX/UNX
      COMMON/C706C/IGOPT(NZ),CGOPT(NZ),IBOPT(NS,5),RESTRT(NA3,2)
C??
C?GLD/GBR
C     COMMON/C202B/IGOPT(NZ),CGOPT(NZ),IBOPT(NS,5),RESTRT(NA3,2)
C??
      COMMON/IO/IN,IOUT,IPUNCH,IODUM(14),NFILE(100,2)
C
C
      in = 5
      iout = 6
      ipunch = 7
      do 10 i=1,99
   10 iop(i) = 0
c
  100 read (5,'(a)',end=900) title
      write (6,110) title
  110 format ('1',a)
      read (5,*,end=900) icharg, multip
      write (6,120) icharg, multip
  120 format (/' Charge =',i3,3x,'Multiplicity =',i3//)
      call vgeom
      if (iop(1) .eq. 0) go to 100
  900 stop
      end
C     GL0202A      04 MAY 89                                         MRP
C?IBM/GLD/GBR/VAX/UNX
      SUBROUTINE VGEOM
C??
C?CDC
C     PROGRAM VGEOM
C??
C=GEOMETRY INPUT
C Z MATRIX GEOMETRY INPUT.
C ************************
C
C1INTRODUCTION
C     LINK 0202
C*
C     --------------
C     U OF T VERSION
C     JULY 1988
C     --------------
C*
C     DETERMINATION AND OPTIMIZATION OF THE GEOMETRY OF ANY MOLECULE
C     WHICH MAY BE SPECIFIED BY A Z MATRIX, AND
C     DIRECT INPUT OF ATOMIC COORDINATES.
C*
C1Z-MATRIX
C     *****************************************************************
C     EXPLANATION OF REQUIRED INPUT FOR Z MATRIX GEOMETRY
C     *****************************************************************
C     SINGLE CALCULATION
C     *****************************************************************
C*
C     TITLE  (FREE FIELD)
C     THE FIRST 40 LETTERS OF THE TITLE ARE USED TO IDENTIFY PUNCHED
C     OUTPUT DECKS (68 LETTERS ARE USED FOR Z MATRICES).
C     CHARGE AND MULTIPLICITY  (2I2)
C     CONVENTION FOR MULTIPLICITY ... 1=SINGLET  2=DOUBLET  AND SO ON
C     Z MATRIX ELEMENTS
C     NUMBER OF ATOMS ... NATOMS ... CARDS OF THE ABOVE FORMAT
C     THE LIST IS TERMINATED BY A BLANK CARD
C*
C     USERS NOT FAMILIAR WITH THE Z MATRIX GEOMETRY INPUT ARE
C     ENCOURAGED TO READ THE FREE FORMAT DESCRIPTION FOR MORE DETAILS.
C*
C     DETAILS OF Z MATRIX INPUT (STANDARD FORMAT)
C     I4, I4, F12.6, I4, F12.4, I4, F12.4, I4
C     A   B   C      D   E      F   G      H
C     WHERE:
C     A: ATOMIC NUMBER OF ATOM
C     B: NUMBER OF ATOM IT IS ATTACHED TO
C     C: DISTANCE (IN ANGSTROMS) TO ATOM IN B
C     IF H=0 (PLANE AND DIHEDRAL ANGLE)
C       D AND E: E IS THE ANGLE THIS ATOM - ATOM B - ATOM D
C       F: LOOKING ALONG BOND FROM B TO D, F IS ATOM THAT DIHEDRAL ANGLE
C         IS MEASURED FROM (IN COUNTERCLOCKWISE DIRECTION)
C       G: DIHEDRAL ANGLE OF THIS ATOM WITH RESPECT TO F (IN DEGREES)
C     IF H=+1 OR -1 (TWO EULER ANGLES)
C       D AND E: E IS THE ANGLE THIS ATOM - ATOM B - ATOM D
C       F AND G: G IS THE ANGLE THIS ATOM - ATOM B - ATOM F
C       H: SPECIFIES WHETHER THIS ATOM IS ABOVE OR BELOW PLANE B-D-F -
C         TAKE ATOMS IN ORDER B-D-F, A RIGHT HAND SCREW HAS THUMB IN +1
C         DIRECTION
C*
C     IF THE ATOM NUMBER D (OR F) IS NEGATIVE, THE ANGLE E (OR G) WILL
C     BE REPLACED BY THE EXACT TETRAHEDRAL ANGLE, AND D (OR F)
C     REPLACED BY ITS ABSOLUTE VALUE.
C*
C     SOME INPUT EXAMPLES WILL HELP TO CLARIFY MATTERS
C     ASSUME CARD COLUMNS ARE
C     123456789012345678901234567890123456789012345678901234567890123456
C*
C     WATER MOLECULE
C*
C     H2O
C      0 1
C        8
C        1   1 0.96
C        1   1 0.96          2 105.
C     BLANK CARD
C*
C     THE TITLE IS 'H2O'
C     THE CHARGE IS ZERO AND THE MULTIPLICITY 1
C     AFTER THE TITLE AND CHARGE AND MULTIPLICITY CARDS THE FIRST
C     Z MATRIX CARD NEEDS ONLY THE ATOMIC NUMBER
C        8
C     TO DEFINE THE POSITION OF ATOM 1
C     THE SECOND
C        1   1 0.96
C     SPECIFIES THAT AN ATOM ... ATOM NUMBER 2 ... OF ATOMIC NUMBER 1
C     IS BONDED TO ATOM NUMBER 1 WITH A CONNECTING BOND LENGTH OF 0.96
C     ANGSTROMS
C     THE NEXT ... AND LAST ... Z MATRIX CARD
C        1   1 0.96          2 105.
C     SPECIFIES THAT ANOTHER ... ATOM NUMBER 3 ... HYDROGEN IS BONDED
C     TO ATOM 1 WITH A BONDLENGTH OF 0.96 ANGSTROMS
C     AND FORMS AN ANGLE OF 105 DEGREES WITH ATOM NUMBER 2
C*
C     CONSIDER NOW THE METHANOL MOLECULE IN A STAGGERED CONFORMATION
C     AS A SECOND AND MORE DIFFICULT EXAMPLE
C*
C     CH3OH
C      0 1
C        6
C        8   1 1.43
C        1   2 0.96          1 105.
C        1   1 1.09          2 109.5         3 180.          0
C        1   1 1.09          2 109.5         4 109.5        +1
C        1   1 1.09          2 109.5         4 109.5        -1
C     BLANK CARD
C*
C     THE FIRST THREE Z MATRIX CARDS ARE SIMILIAR TO THOSE OF THE H2O
C     EXAMPLE AND NEED NO FURTHER EXPLANATION
C     THE FOURTH CARD
C        1   1 1.09          2 109.5         3 180.          0
C     SPECIFIES THAT A HYDROGEN IS BONDED TO THE FIRST ATOM ... THE
C     CARBON ... WITH A BOND LENGTH OF 1.09 ANGSTROMS AND THAT IT FORMS
C     AN ANGLE WITH ATOM NUMBER 2 ... THE OXYGEN ... OF 109.5 DEGREES
C     ALSO ... AS SIGNIFIED BY A VALUE OF ZERO FOR THE H PARAMETER ...
C     IT FORMS A DIHEDRAL ANGLE WITH ATOM 3 OF 180 DEGREES INDICATING A
C     TRANS CONFORMATION
C     THE FIFTH AND SIXTH CARDS
C        1   1 1.09          2 109.5         4 109.5        +1
C        1   1 1.09          2 109.5         4 109.5        -1
C     ARE IDENTICAL EXCEPT FOR THE SIGN OF THE H PARAMETER
C     THESE HYDROGENS ARE BONDED TO ATOM 1 ... THE CARBON ... AND BOTH
C     MAKE AN ANGLE OF 109.5 DEGREES WITH ATOM 2 ... THE OXYGEN
C     IN ADDITION ... AS SIGNIFIED BY VALUES OF + AND - 1 FOR THE H
C     PARAMETER ... THEY MAKE 109.5 DEGREE ANGLES WITH ATOM 4 ... THE
C     OTHER METHYL HYDROGEN
C     A +1 VALUE FOR H SIGNIFIES THAT ATOM NUMBER 5 LIES ABOVE THE
C     PLANE FORMED BY ATOMS 1 2 AND 4
C     WHILE
C     A -1 ASSIGNS ATOM 6 TO LIE BELOW THIS PLANE
C*
C     A NEGATIVE ATOMIC NUMBER SIGNIFIES THE POSITION OF FLOATING
C     GAUSSIAN FUNCTIONS ('BOND' FUNCTIONS, THAT IS THEY ARE NOT
C     LOCATED ON AN ATOMIC CENTER LIKE THE USUAL MONSTERGAUSS ORBITALS).
C*
C     THE GEOMETRY BUILDING ROUTINE, BUILDZ, PLACES THE FIRST ATOM AT
C     THE ORIGIN AND THE SECOND ALONG THE Z AXIS. NORMALLY THE
C     THIRD ATOM DEFINES THE XZ PLANE (IE. IT MAY NOT LIE ON THE Z
C     AXIS). THE SOLE EXCEPTION IS FOR 3 ATOM MOLECULES, WHICH MAY BE
C     LINEAR.
C     ALL THE REMAINING ATOMS FOLLOW A RIGHT HANDED COORDINATE
C     SYSTEM.
C*
C     IN ORDER TO AID IN THE CONSTRUCTION OF DIFFICULT STRUCTURES
C     THE USE OF DUMMY ATOMS IS ENCOURAGED.
C     A 0 IN THE ATOMIC NUMBER FIELD SIGNIFIES THAT THE ATOM IS ONLY A
C     DUMMY ATOM. ALTHOUGH NEITHER DUMMY ATOMS NOR FLOATING ATOMS ARE
C     ACTUALLY USED IN THE CALCULATION, ONLY FLOATING ATOMS MAY HAVE
C     BASIS FUNCTIONS ASSOCIATED WITH THEM. BOTH ATOM TYPES ARE
C     RETAINED IN THE GEOMETRY SO THAT THE INPUT ATOM NUMBERS ARE USED
C     THROUGHOUT THE PROGRAM, AND TO FACILITATE THE TRANSFORMATION OF
C     THE FORCES TO INTERNAL COORDINATES. THEY ARE IDENTIFIED IN THE
C     OUTPUT AS 'X' AND 'BQ' RESPECTIVELY.
C     THERE MAY BE TROUBLE WITH THE FORCE OPTIMIZATION OF THE GEOMETRY
C     IF 2 'ATOMS' HAVE THE SAME INTERNAL COORDINATES - THIS WOULD
C     RESULT IF A DUMMY ATOM OR FLOATING FUNCTION WAS PLACED ON TOP
C     OF AN EXISTING ATOM, DUMMY ATOM OR FLOATING FUNCTION.
C     THE LAST ATOM IN THE Z MATRIX CANNOT BE A DUMMY ATOM.
C*
C     ONE FURTHER EXAMPLE ... WITHOUT MUCH EXPLANATION ... TO ILLUSTRATE
C     THIS FEATURE
C     THIS EXAMPLE WILL ALSO SERVE TO ILLUSTRATE THE PROCEDURE FOR THE
C     Z MATRIX OPTIMIZATION OF MOLECULAR GEOMETRY
C*
C     ETHYL CATION  H-BRIDGED STRUCTURE
C      1 1
C        6
C        6   1 1.5
C        0   1 1.0           2 170.
C        0   2 1.0           1 170.          3 0.            0
C        0   1 1.0           3 90.           2 180.          0
C        0   2 1.0           4 90.           1 180.          0
C        1   1 1.08          3 60.           5 90.          +1
C        1   1 1.08          3 60.           5 90.          -1
C        1   2 1.08          4 60.           6 90.          +1
C        1   2 1.08          4 60.           6 90.          -1
C        0   1 0.75          3 170.          2 0.            0
C        1  11 1.2           1 90.           3 180.          0
C     BLANK CARD
C*
C=GEOMETRY INPUT
C2FREE-FORMAT
C     ******************************************************************
C     FREE FORMAT Z MATRIX INPUT.
C     ******************************************************************
C*
C     THE TITLE AND CHARGE/MULTIPLICITY CARDS ARE READ AS DESCRIBED
C     ABOVE. EACH Z MATRIX CARD HAS THE SAME STRUCTURE AS DESCRIBED
C     ABOVE FOR THE FIXED FORMAT INPUT:
C
C     ELEMENT, N1, BL, N2, ALPHA, N3, BETA, N4
C
C     ELEMENT MAY BE THE ONE OR TWO CHARACTER CHEMICAL SYMBOL (E.G. C,
C     CL), THE ONE OR TWO CHARACTER CHEMICAL SYMBOL FOLLOWED
C     IMMEDIATELY BY AN IDENTIFYING INTEGER (E.G. C1, CL11), OR SIMPLY
C     THE ATOMIC NUMBER (E.G. 6, 17). DUMMY ATOMS ARE IDENTIFIED BY THE
C     SYMBOL 'X', FLOATING ATOMS BY 'BQ' (FLOATING ATOMS ARE GIVEN THE
C     ATOMIC NUMBER -1). A MAXIMUM OF 4 ALPHANUMERIC DIGITS IS
C     PERMITTED. IF A NUCLEUS IS TO REFERENCED BY LATER ATOMS, IT IS
C     NECESSARY THAT THE ALPHANUMERIC STRINGS BE UNIQUE - ONE WAY TO
C     ENSURE THIS IS TO APPEND THE ATOM NUMBER TO EACH CHEMICAL SYMBOL.
C     FOR COMPATIBILITY REASONS, THE CODE 'D*' MAY BE USED FOR
C     A DUMMY ATOM, AND THE CODE 'F*' MAY BE USED FOR A FLOATING ATOM,
C     ALTHOUGH MONSTERGAUSS WILL REFER TO SUCH ATOMS INTERNALLY AND
C     ON SOME OUTPUT AS 'X' AND 'BQ' RESPECTIVELY, SO THE USE OF
C     THE LATTER SYMBOLS IS STRONGLY RECOMMENDED.
C
C     N1 SPECIFIES THE (PREVIOUSLY DEFINED) NUCLEUS TO WHICH THE
C     CURRENT ATOM (N) IS CONSIDERED TO BE ATTACHED. N1 MAY BE EITHER
C     AN ALPHANUMERIC STRING MATCHING THE ELEMENT FIELD OF A PREVIOUS
C     Z MATRIX CARD, OR SIMPLY THE NUMBER OF THE ATOM.
C
C     BL IS THE BOND LENGTH IN ANGSTROMS FROM N TO N1, EXPRESSED AS
C     EITHER A STRING OF UP TO 8 ALPHANUMERIC CHARACTERS (CALLED A
C     VARIABLE), OR A FLOATING POINT NUMBER CONTAINING A DECIMAL POINT.
C
C     N2 SPECIFIES THE (PREVIOUSLY DEFINED) NUCLEUS FOR WHICH THE BOND
C     ANGLE N-N1-N2 WILL BE GIVEN. N2 MAY BE EITHER AN ALPHANUMERIC
C     STRING MATCHING THE ELEMENT FIELD OF A PREVIOUS Z MATRIX CARD, OR
C     SIMPLY THE NUMBER OF THE ATOM.
C
C     ALPHA IS THE N-N1-N2 BOND ANGLE IN DEGREES, EXPRESSED AS EITHER
C     A STRING OF UP TO 8 ALPHANUMERIC CHARACTERS (CALLED A VARIABLE),
C     OR A FLOATING POINT NUMBER CONTAINING A DECIMAL POINT.
C*
C     THE INTERPRETATION OF THE REMAINING THREE FIELDS DEPENDS ON THE
C     VALUE OF N4, WHICH MUST BE AN INTEGER (NOT A VARIABLE).
C*
C     N4 IS 0 OR OMITTED:
C
C     N3 SPECIFIES THE (PREVIOUSLY DEFINED) NUCLEUS FOR WHICH THE
C     DIHEDRAL ANGLE N-N1-N2-N3 WILL BE GIVEN. N3 MAY BE EITHER AN
C     ALPHANUMERIC STRING MATCHING THE ELEMENT FIELD OF A PREVIOUS
C     Z MATRIX CARD, OR SIMPLY THE NUMBER OF THE ATOM.
C
C     BETA IS THE N-N1-N2-N3 DIHEDRAL ANGLE IN DEGREES, EXPRESSED AS
C     EITHER A STRING OF UP TO 8 ALPHANUMERIC CHARACTERS (CALLED A
C     VARIABLE), OR A FLOATING POINT NUMBER CONTAINING A DECIMAL POINT.
C     THE CONVENTION FOR THE SIGN OF BETA IS TO LOOK ALONG THE N1-N2
C     BOND FROM THE N1 END, WITH A POSITIVE DIHEDRAL ANGLE BEING A
C     COUNTERCLOCKWISE ROTATION OF N AWAY FROM N3.
C*
C     N4 IS +1 OR -1:
C
C     N3 SPECIFIES THE (PREVIOUSLY DEFINED) NUCLEUS FOR WHICH THE BOND
C     ANGLE N-N1-N3 WILL BE GIVEN. N3 MAY BE EITHER AN ALPHANUMERIC
C     STRING MATCHING THE ELEMENT FIELD OF A PREVIOUS Z MATRIX CARD, OR
C     SIMPLY THE NUMBER OF THE ATOM.
C
C     BETA IS THE N-N1-N3 BOND ANGLE IN DEGREES, EXPRESSED AS EITHER A
C     STRING OF UP TO 8 ALPHANUMERIC CHARACTERS (CALLED A VARIABLE), OR
C     A FLOATING POINT NUMBER CONTAINING A DECIMAL POINT. IN THIS CASE,
C     THERE ARE TWO POSSIBILITIES FOR N4, +1 AND -1, WHICH SERVE TO
C     PLACE THE NEW ATOM ABOVE OR BELOW THE N1-N2-N3 PLANE. THE
C     CONVENTION IS TO WRAP THE FINGERS OF THE RIGHT HAND AROUND THE
C     ATOMS IN THE ORDER N1 TO N2 TO N3 - THE THUMB DEFINES THE +1
C     SIDE OF THE PLANE.
C*
C     IF NO VARIABLES HAVE BEEN USED IN THE BL, ALPHA OR BETA FIELDS,
C     THE Z MATRIX IS CONVERTED TO THE STANDARD FORM ABOVE. ALL FURTHER
C     LINKS WILL TREAT THIS EXACTLY AS A FIXED FORMAT INPUT RUN.
C
C     THE VALUES OF THE VARIABLES ARE GIVEN AFTER THE BLANK CARD IN TWO
C     SECTIONS ('OPTIMIZED VARIABLES' AND 'CONSTANTS'), IN THE FORM:
C     VARIABLE = VALUE
C     WHERE VARIABLE IS AN UP TO 8 CHARACTER STRING USED IN THE BL,
C     ALPHA OR BETA FIELDS, AND VALUE IS A FLOATING POINT NUMBER.
C     ALTERNATIVELY, VALUE MAY BE THE STRING 'TETRA' TO INDICATE THAT
C     THE TETRAHEDRAL ANGLE IS TO BE SUBSTITUTED. THE LIST OF VARIABLES
C     TO BE OPTIMIZED IS TERMINATED BY A BLANK CARD, THEN THE LIST OF
C     VARIABLES TO BE HELD CONSTANT IS GIVEN, ALSO TERMINATED BY A
C     BLANK CARD. IF THERE ARE NO 'CONSTANTS', I.E. ALL THE VARIABLES
C     ARE TO BE OPTIMIZED, THEN THE BLANK CARD FOLLOWING THE LIST
C     OF CONSTANTS IS ALSO OMITTED (THIS MEANS THAT ALL THE VARIABLES
C     WERE SPECIFIED IN THE 'OPTIMIZE' SECTION).
C     FOR NON-OPTIMIZATION RUNS, THE VARIABLES MAY STILL BE SPLIT
C     INTO 'OPTIMIZE' AND 'CONSTANT' SECTIONS, OR ALL THE VARIABLES
C     MUST BE SPECIFIED IN THE 'OPTIMIZE' SECTION (EVEN THOUGH THERE
C     IS NO OPTIMIZATION TO BE PERFORMED).
C*
C     THE WATER AND METHANOL EXAMPLES MAY THUS BE WRITTEN:
C*
C     H2O
C      0 1
C     O1
C     H2  O1  ROH
C     H3  O1  ROH  H2  ALPHA
C     (BLANK)
C     ROH = 0.96
C     ALPHA = 105.0
C     (BLANK)
C*
C     CH3OH
C      0 1
C     C1
C     O2 C1 RCO
C     H3 O2 ROH C1 COH
C     H4 C1 RCH O2 OCH H3 180.0 0
C     H  C1 RCH O2 OCH H4 HCH   1
C     H  C1 RCH O2 OCH H4 HCH  -1
C     (BLANK)
C     RCO = 1.43
C     ROH = 0.96
C     RCH = 1.09
C     COH = 105.0
C     OCH = TETRA
C     HCH = TETRA
C     (BLANK)
C*
C     CH3OH
C      0 1
C     C1
C     O2 C1 RCO
C     H3 O2 ROH C1 COH
C     H4 C1 RCH O2 OCH H3 TAUH4 0
C     H  C1 RCH O2 OCH H4 HCH   1
C     H  C1 RCH O2 OCH H4 HCH  -1
C     (BLANK)
C     RCO = 1.43
C     ROH = 0.96
C     RCH = 1.09
C     COH = 105.0
C     OCH = TETRA
C     HCH = TETRA
C     (BLANK)
C     TAUH4 = 180.0
C     (BLANK)
C*
C     ADDITIONAL NOTES:
C
C     1) VARIABLES USED IN ALPHA AND BETA FIELDS MAY BE PRECEEDED BY A
C     NEGATIVE SIGN TO INDICATE THAT THE NEGATIVE OF THE VALUE IS TO BE
C     USED. FOR EXAMPLE -TAU, WITH TAU=60.0, WOULD USE -60.0 FOR THAT
C     Z MATRIX PARAMETER.
C
C     2) THE FREE FORMAT ENTRIES ARE NORMALLY SEPARATED BY ONE OR MORE
C     BLANKS, AND MAY CONTAIN NO IMBEDDED BLANKS. A COMMA MAY ALSO BE
C     USED TO SEPARATE THE Z MATRIX FIELDS, BUT IT MUST IMMEDIATELY
C     FOLLOW THE PARAMETER WITH NO INTERVENING BLANKS. FOR EXAMPLE 'C1,'
C     IS CORRECT, BUT 'C1 ,' IS NOT. LEADING BLANKS ARE ALWAYS IGNORED.
C     THE VARIABLE NAMES SHOULD BEGIN WITH A LETTER TO AVOID POSSIBLE
C     DIFFICULTIES.
C
C     3) FOR THE FIRST ATOM, ONLY THE ELEMENT FIELD IS NEEDED. FOR THE
C     SECOND ATOM, THE ELEMENT, N1 AND BL FIELDS ARE REQUIRED. FOR THE
C     THIRD ATOM, THE ELEMENT, N1, BL, N2 AND ALPHA FIELDS ARE REQUIRED.
C     FOR THE REMAINING ATOMS, ALL FIELDS ARE REQUIRED, ALTHOUGH N4 MAY
C     BE OMITTED IF A 0 VALUE IS DESIRED.
C
C     4) ALTHOUGH IT IS NOT STRICTLY NECESSARY, THE INTERPRETATION OF
C     THE MOLECULAR ORBITAL SYMMETRIES IS SIMPLIFIED GREATLY IF
C     THE ORIGIN IS CHOSEN AS THE CENTER OF INVERSION (IF THE
C     MOLECULE POSSESSES ONE), THE Z (OR X OR Y) AXIS IS CHOSEN
C     AS THE PRINCIPAL AXIS OF ROTATION (IF THE MOLECULE POSSESSES
C     ONE), AND/OR ONE OF THE CARTESIAN PLANES (XY, XZ OR YZ) IS
C     USED AS THE MOLECULAR PLANE (IF THE MOLECULE POSSESSES ONE).
C     THUS THE WATER EXAMPLE (ABOVE) WOULD BE BETTER BUILT AS:
C
C     H2O
C      0 1
C     O1
C     X2  O1  1.0
C     H2  O1  ROH  X2  ALPHA
C     H3  O1  ROH  X2  ALPHA  H3  180.0
C     (BLANK)
C     ROH = 0.96
C     ALPHA = 127.5
C     (BLANK)
C
C     WHERE THE Z AXIS IS NOW ONE OF THE C2 AXES (OTHERWISE THE
C     C2 AXIS WOULD HAVE POINTED OFF IN THE XZ PLANE).
C*
C=GEOMETRY INPUT
C1ANGSTROMS
C1BOHR
C     ******************************************************************
C     DIRECT COORDINATE INPUT.
C     ******************************************************************
C
C     TITLE (FREE FIELD).
C     CHARGE AND MULTIPLICITY (2I2) ... SEE CONVENTION ABOVE.
C     IAN,X,Y,Z (I4,3F20.10).
C     IAN IS THE ATOMIC NUMBER. X, Y AND Z ARE THE COORDINATES FOR THIS
C     ATOM. FLOATING ATOMS (SEE ABOVE) ARE PERMITTED, AND THE END OF
C     COORDINATE INPUT IS INDICATED BY AN ATOMIC NUMBER OF 0.
C
C     ******************************************************************
C*
C=GEOMETRY INPUT
C1OPTIONS
C     ******************************************************************
C     OPTIONS ... IOP( )
C     ******************************************************************
C     IOP(13) ... INITIAL ENTRY OR CONTINUATION
C     0  FIRST ENTRY (SINGLE CALCULATION, GEOMETRY OPT OR SURFACE SCAN)
C     1  CONTINUATION OF Z MATRIX GEOMETRY OPTIMIZATION RUN
C     2  CONTINUATION OF POTENTIAL SURFACE SCAN
C     3  FIRST ENTRY AFTER CALL TO STANDARD GEOMETRY.
C
C     IOP(14) ... RESTART OF A Z MATRIX OPTIMIZATION.
C     0  NORMAL RUN
C     1  RESTART - IOP(18) MAY ALSO BE USED TO RECOVER THE OPTIMUM
C     GEOMETRY FOR THE LAST PARAMETER SET THAT WAS COMPLETED.
C
C     IOP(15) ... SHALL WE PUNCH RESTART CARDS
C     0  NO (THIS IS USED FOR THE STANDARD ROUTE).
C     1  PUNCH THE FINAL Z MATRIX ONLY.
C     2  YES.
C
C     IOP(16) ... MAXIMUM NUMBER OF POINTS FOR THE OPTIMIZATION OF ONE
C                 SET OF PARAMETERS
C     N  ALLOW 2*N+6 POINTS TO BRACKET THE MINIMUM (IF N>6, N IS SET
C        TO 100000)
C
C     IOP(17) ... READ INPUT GEOMETRY FORMAT FROM A CARD.
C     0  NO - USE THE STANDARD FORMAT.
C     1  YES - READ A FORMAT STATEMENT FROM ONE CARD, INCLUDING THE
C     LEFT AND RIGHT PARENTHESES. FOR EXAMPLE, THE GAUSSIAN 70/76
C     Z MATRIX FORMAT CARD WOULD BE:
C     (I3,I4,F7.4,I4,F11.4,I4,F11.4,I4)
C     THIS FORMAT CARD IS INSERTED AFTER THE CHARGE/MULTIPLICITY CARD.
C     THIS OPTION IS NOT APPLICABLE TO FREE FORMAT OR STANDARD GEOMETRY
C     RUNS.
C
C     IOP(18) ... RESTART THE GEOMETRY FROM THE DISK FILE.
C     0  NO.
C     1  YES - THE GEOMETRY FOR THE ORIGINAL STARTING POINT IS READ AS
C     USUAL, THEN UPDATED FROM THE RESTART FILE (FILE 1) OF UNIT IMAT.
C     FOR Z MATRIX OPTIMIZATIONS, THE OPTIMUM GEOMETRY FROM THE LAST
C     PARAMETER SET COMPLETED IS RESTORED; FOR OTHER OPTIMIZATION
C     METHODS, THE LATEST GEOMETRY IS RESTORED.
C
C     IOP(19) ... TYPE OF SURFACE SCAN TO BE PERFORMED.
C     0  GEOMETRY SURFACE SCAN.
C     1  FIELD SCAN.
C
C     IOP(20) ... NOT USED.
C
C     IOP(21) ... PRINT CONTROL.
C     0  NORMAL PRINTING.
C     1  ONLY PRINT INITIAL AND FINAL POINTS OF EACH PARAMETER
C     OPTIMIZATION. THIS IOP IS ALSO USED FROM GBOPT (LINK 0711) FOR
C     PRINT CONTROL IN BUILDZ.
C
C     IOP(22) ... CHOICE OF ATOMIC MASSES.
C     0  USE MASS OF MOST ABUNDANT ISOTOPE FOR EACH ATOM.
C     1  USE ABUNDANCE-AVERAGED ATOMIC WEIGHTS FOR EACH ATOM.
C     2  SET MASS OF MOST ABUNDANT ISOTOPE FOR EACH ATOM, THEN READ
C        REPLACEMENT VALUES.
C
C     IOP(23) ... DUMP ATOMIC MASS TABLES (ROUTINE FILMAS).
C     0  NO.
C     1  YES.
C
C     IOP(24) ... PERMIT ELECTRIC FIELD CALCS ON CHARGED SYSTEMS.
C     0  NO.
C     1  YES - IN THIS CASE, BOTH THE TOTAL ENERGY AND DIPOLE MOMENT
C        THAT ARE COMPUTED ARE NOT INVARIANT TO THE POSITION OF THE
C        MOLECULE IN 3D SPACE, BUT SOME DERIVED PROPERTIES (E.G.
C        THE POLARIZABILITY) ARE INVARIANT EVEN FOR CHARGED SYSTEMS.
C
C     IOP(25) TO IOP(60) ... NOT USED
C     ******************************************************************
C*
C     NOTE THAT THE TITLE AND MULTIPLICITY WERE ACTUALLY READ IN LNK1.
C     THE MAXIMUM NUMBER OF ATOMS IS #NA.
C==
C
C/
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA)
C     PARAMETER (NS=#NS)
C     PARAMETER (NO=#NO)
C##
      PARAMETER (NA= 36)
      PARAMETER (NS=120)
      PARAMETER (NO=125)
C###
      PARAMETER (NA3=3*NA, NZ=NA3-6)
      PARAMETER (ZERO=0.0D0, ONE=1.0D0, TWO=2.0D0)
C
      CHARACTER TITLE*72,IELEM*4,NAMES*8
C
      COMMON /A/ IOP(99)
      COMMON /A/ NATOMS,ICHARG,MULTIP,IAN(NA),NAE,NBE,NE,NBASIS,C(NA,3)
      COMMON /A/ ANTOAU,FCONST(2),FCCONV,ICDUM(401)
C
      COMMON/ZMAT/IZ(NA,4),BL(NA),ALPHA(NA),BETA(NA),
     1 IPAR(15,3),NIPAR(3),NPAR,NSTEP,DX(3),NUM,NUMB,
     2 LBL(NA),LALPHA(NA),LBETA(NA),IZMASS(NA),ZMASS(NA)
      COMMON/ZMATC/TITLE,IELEM(NA),NAMES(NZ)
C?IBM/CDC/VAX/UNX
      COMMON/C706C/IGOPT(NZ),CGOPT(NZ),IBOPT(NS,5),RESTRT(NA3,2)
C??
C?GLD/GBR
C     COMMON/C202B/IGOPT(NZ),CGOPT(NZ),IBOPT(NS,5),RESTRT(NA3,2)
C??
      COMMON/SSCAN/NUMSS(4),NSSTEP(4),NUMSET(4),NSSPAR(3,4),
     1 ISSPAR(15,3,4),SSDX(3,4)
      COMMON/GEN/EDUM(2),ENERGY,ENERGP,ENERGM,ENERG0,DCONV,SPIN(2),
     1 FXAU,FYAU,FZAU,FE,EMOL,ESOL,DPOLE(4),VCM
      COMMON/IO/IN,IOUT,IPUNCH,IODUM(14),NFILE(100,2)
C
      CHARACTER*4 ISTAR,IBLANK,IZ2
      CHARACTER*72 IFMT,IFMT1,IFMT2
C
      DIMENSION IZZ(3),Z(3)
      DIMENSION FILLB(NO,2)
C
      EQUIVALENCE (IGOPT(1),GOPT), (NUMSS(1),ANUMSS),
     1 (RESTRT(1,1),FILLB(1,1))
C
C     DTOR2 CONVERTS DEG**-2 TO RADIANS**-2
      DATA THRESH/1.0D-7/
      DATA TORAD/1.74532925199433D-2/
      DATA DTOR2/3282.80635D0/
      DATA ISTAR/'****'/, IBLANK/'    '/, IZ2/'*Z  '/
      DATA THREE/3.0D0/, EIGHT/8.0D0/
      DATA MAXPAR/15/
      DATA IFMT1/'(2I4,F12.6,2(I4,F12.4),I4,T73,A2,I6)'/
      DATA IFMT2/'(I4,3F20.10)'/
C
 1320 FORMAT(/'0TOO MANY ATOMS (MAXIMUM IS',I4,').')
 1330 FORMAT('0LAST ATOM IS A DUMMY ATOM - REMOVE IT')
 1390 FORMAT(A72)
 1410 FORMAT('0REPLACEMENT GEOMETRY INPUT FORMAT: ',A72/)
 1490 FORMAT ('0*** INVALID COMBINATION: IOP(5) =',I3,' AND IOP(13) =',
     1 I3)
C*
C     COPY FORMAT INTO ARRAY IFMT.
      IF(IOP(5).GE.2)GO TO 600
      IFMT = IFMT1
      IF(IOP(5).EQ.0 .AND. IOP(13).EQ.0)GO TO 25
      IF(IOP(13).NE.0.OR.IOP(17).NE.1)GO TO 8
C     READ USER FORMAT.
      READ(IN,1390)IFMT
      WRITE(IOUT,1410)IFMT
      GO TO 8
C*
C     DIRECT COORDINATE INPUT.
C*
  600 IFMT = IFMT2
      IF (IOP(13) .NE. 0) GO TO 640
      IF(IOP(17).NE.1)GO TO 620
C     READ USER FORMAT.
      READ(IN,1390)IFMT
      WRITE(IOUT,1410)IFMT
  620 J=NA+1
      DO 630 I=1,J
      READ(IN,IFMT)IANZ,Z
      IF(IANZ.EQ.0)GO TO 30
      IAN(I)=IANZ
      C(I,1)=Z(1)
      C(I,2)=Z(2)
  630 C(I,3)=Z(3)
C     TOO MANY ATOMS.
      WRITE(IOUT,1320)NA
      IOP(1)=-2
      RETURN
C     COMBINATION OF OPTIONS 5 AND 13 IS INVALID.
  640 WRITE (IOUT,1490)
      IOP(1) = -2
      RETURN
C*
C     FOR THE INITIAL ENTRY INTO VGEOM, IOP(13) WILL BE 0 OR 3.
C     IS THIS A RESTART ... IF SO IOP(14) WILL BE NON-ZERO.
C
    8 continue
C
C     INITIAL ENTRY:
C     READ IN
C     Z MATRIX ELEMENTS.
C     BLANK CARD.
C
   10 READ(IN,IFMT)IAN(1)
      IZ(1,1)=0
      IZ(1,2)=0
      IZ(1,3)=0
      IZ(1,4)=0
      BL(1)=ZERO
      ALPHA(1)=ZERO
      BETA(1)=ZERO
      I=1
C
   20 I=I+1
      READ(IN,IFMT)IANZ,(IZZ(J),Z(J),J=1,3),K
      IF(IZZ(1).EQ.0)GO TO 30
      IAN(I)=IANZ
      IZ(I,1)=IZZ(1)
      IZ(I,2)=IZZ(2)
      IZ(I,3)=IZZ(3)
      IZ(I,4)=K
      BL(I)=Z(1)
      ALPHA(I)=Z(2)
      BETA(I)=Z(3)
      IF(I.LE.NA)GO TO 20
      WRITE(IOUT,1320)NA
      IOP(1)=-2
      RETURN
C
C     FREE FORMAT INPUT.
C
   25 CALL FREEZ
      IF(IOP(1).NE.0)RETURN
      GO TO 31
   30 NATOMS=I-1
   31 IF(IAN(NATOMS).NE.0)GO TO 35
      WRITE(IOUT,1330)
      IOP(1)=-2
      RETURN
C
C     SET OPTIMIZATION COUNTER NSTEP
C
   35 NSTEP=0
C
C     SET ATOMIC MASSES.
C
      CALL FILMAS (IOP, IN, IOUT, IAN, NATOMS, IZMASS, ZMASS)
      IF (IOP(1) .NE. 0) RETURN
C
C     FORM COORDINATE ARRAY C.
C
  820 CALL BUILDZ
C
C     COUNT NUMBER OF ENERGY EVALUATIONS DURING OPTIMIZATION.
C
  830 NUMB=1
      NUM=0
      RETURN
      END
C/    GL0202B      14 JUL 88                                         MRP
      SUBROUTINE FREEZ
C*
C     FREE FORMAT Z MATRIX INPUT ROUTINE.
C
C     AUTHOR: MIKE PETERSON, U OF T CHEMISTRY DEPARTMENT, TORONTO.
C     VERSION: JULY 1988.
C
C     THE LABELS, IELEM AND NAMES ARRAYS IN COMMON /ZMAT/ ARE USED
C     AS FOLLOWS:
C     LABELS(I,J): I REFERS TO AN ATOM, J TO THE PARAMETER TYPE (1=BL,
C     2=ALPHA AND 3=BETA). THE VALUE OF LABELS(I,J) IS 100*K+L+M, WHERE
C     K IS THE VARIABLE NUMBER TO BE SUBSTITUTED IN THIS Z MATRIX
C     POSITION (0 IF NO VARIABLE WAS USED), L IS A FLAG THAT IS 0
C     IF THE VARIABLE IS TO OPTIMIZED AND 2 IF THE VARIABLE IS TO
C     BE HELD CONSTANT (BUT L IS 0 IF K IS 0),  AND M IS A FLAG FOR THE
C     TYPE OF VALUE USED FOR THE ATOM NUMBER PRECEEDING THE VALUE
C     (0 MEANS A STRING WAS USED, 1 MEANS THE ACTUAL ATOM NUMBER WAS
C     GIVEN IN THE N1/N2/N3 FIELD FOR J=1/2/3 RESPECTIVELY). IF THE
C     NEGATIVE OF PARAMETER K IS TO BE SUBSTITUTED, THE SUM 100*K+L+M
C     IS NEGATED.
C
C     AND ARRAYS IN COMMON /ZMATC/:
C     TITLE: A CHARACTER VARIABLE CONTAINING THE TITLE OF THIS RUN.
C     IELEM(I) CONTAINS THE ATOMIC SYMBOL STRING FOR ATOM I, OR
C     BLANKS IF AN INTEGER VALUE WAS USED.
C     NAMES(I) CONTAINS THE VARIABLE NAMES REFERRED TO BY THE LABELS
C     ARRAY.
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA)
C##
      PARAMETER (NA= 36)
C###
      PARAMETER (NA3=3*NA, NZ=NA3-6)
      PARAMETER (ZERO=0.0D0, TWO=2.0D0)
C
      COMMON /A/ IOP(99),NATOMS,ICHARG,MULTIP,IAN(NA),IC1(4),CD1(NA,3),
     1 CD2(4),IC2(401)
      COMMON/ZMAT/IZ(NA,4),ZPARAM(NA,3),IPAR(15,3),NIPAR(3),NPAR,
     1 NSTEP,DX(3),NUM,NUMB,LABELS(NA,3),IZMASS(NA),ZMASS(NA)
      COMMON/ZMATC/TITLE,IELEM(NA),NAMES(NZ)
      COMMON/IO/IN,IOUT,IODUM(215)
C
C     USE OF LOCAL VARIABLES :
C     LINE: INPUT LINE (DIMENSION 72).
C     ICH: ARRAY TO GET ONE VARIABLE NAME (72).
C     IFOUND: COUNTER FOR VARIABLES DEFINED (NZ).
C
      CHARACTER*1 LINE(72), ICH(72), IAZ(27), IDEL(2), IDELEQ(2),
     1 ITETRA(5), ISEP, IBL, IPLUS, MINUS
      CHARACTER TITLE*72, IELEM*4, NAMES*8, IERRS(8)*20
C
      DIMENSION ICODE(56), IFOUND(NZ)
C
      DATA IAZ/'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',
     1  'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q',
     2  'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '*'/
C
C     ICODE CONTAINS THE CHEMICAL SYMBOLS, CODED AS 100*I1+I2 WHERE
C     I1 AND I2 REPRESENT THE LETTERS OF THE SYMBOL (1 IS A, 2 IS B,
C     ETC). I2 IS 0 FOR ONE LETTER SYMBOLS, AND A * IS LETTER 27.
C
      DATA ICODE/800,805,1209,205,200,300,1400,1500,600,1405,1401,1307,
     1 112,1909,1600,1900,312,118,1100,301,1903,2009,2200,318,1314,605,
     2 315,1409,321,2614,701,705,119,1905,218,1118,1802,1918,2500,2618,
     3 1402,1315,2003,1821,1808,1604,107,304,914,1914,1902,2005,900,
     4 2405,2400,217/
C
      DATA IERRS/'ATOM LABEL          ',
     1           'ATTACHMENT ATOM     ',
     2           'BOND LENGTH         ',
     3           'BOND ANGLE ATOM     ',
     4           'BOND ANGLE          ',
     5           'DIHEDRAL ANGLE      ',
     6           'DIHEDRAL ANGLE ATOM ',
     7           'ANGLE CODE          '/
      DATA IBL/' '/, IPLUS/'+'/, MINUS/'-'/
      DATA IDEL/' ', ','/,IDELEQ/'=', '='/
      DATA ITETRA/'T', 'E', 'T', 'R', 'A'/
      DATA TORAD/1.74532925199433D-2/
C
 1000 FORMAT(72A1)
 1010 FORMAT(1X,72A1)
 1020 FORMAT('0FREE FORMAT Z MATRIX:'/)
 1030 FORMAT('0ERROR IN ',A20,'FIELD OF ABOVE Z MATRIX CARD -',
     1 ' TOO MANY OR UNRECOGNIZABLE CHARACTERS')
 1040 FORMAT('0TOO MANY ATOMS (MAXIMUM IS',I4,').')
 1050 FORMAT('0CHARACTER STRING ',4A1,' IN THE ',A20,'FIELD DOES NOT ',
     1 'MATCH A PREVIOUSLY DEFINED ATOM LABEL')
 1060 FORMAT('0VARIABLES (OPTIMIZED ON GOPT RUNS):')
 1070 FORMAT('0VARIABLE ',8A1,' NOT USED IN Z MATRIX OR SPECIFIED TWICE'
     1 )
 1080 FORMAT('1')
 1090 FORMAT('0ILLEGAL VARIABLES CARD: ',72A1/' NAME NOT RECOGNIZED OR',
     1 ' NO LEGAL VALUE GIVEN')
 1100 FORMAT('0LIST OF VARIABLES NOT TERMINATED BY A BLANK CARD,',
     1 ' LAST LINE READ WAS:'/1X,72A1)
 1110 FORMAT('0*** ERROR: FIRST Z MATRIX CARD IS BLANK')
 1120 FORMAT('0END OF VARIABLES LIST FOUND BEFORE ALL VARIABLES DEFINED'
     1 /' LIST OF UNDEFINED VARIABLES:')
 1130 FORMAT ('0NO VARIABLES USED - SWITCHING TO STANDARD Z MATRIX ',
     1 'FORMAT FOR OUTPUT')
 1140 FORMAT ('0EXTRA CHARACTERS FOUND ON THE ABOVE Z MATRIX CARD',
     1 ' FOLLOWING THE ',A20,'FIELD')
 1150 FORMAT (1X,A8)
 1160 FORMAT('0CONSTANTS (NOT OPTIMIZED ON GOPT RUNS):')
C*
C     CLEAR EVERYTHING FIRST.
C
      NATOMS=0
      NVAR=0
      DO 20 I=1,NA
      IELEM(I) = IBL
      DO 10 J=1,4
   10 IZ(I,J)=0
      DO 20 J=1,3
      LABELS(I,J)=0
   20 ZPARAM(I,J)=ZERO
      DO 30 I=1,NZ
      IFOUND(I)=0
   30 NAMES(I) = IBL
      TETRA=TWO*DATAN(DSQRT(TWO))/TORAD
      WRITE (IOUT,1020)
C*
C     GET NEXT CARD, THEN THE ELEMENT FIELD.
C*
   50 READ(IN,1000)LINE
      WRITE (IOUT,1010) LINE
      ITYPE=3
      IERR=2
      ICOL=1
      IFIELD=1
      CALL FREEFM(LINE,ICOL,72,ITYPE,IDEL,2,ICH,5,NCHAR,INTEGR,REALNO,
     1 LAST,ISEP,IERR)
      IF(IERR.EQ.-2)RETURN
      IF(IERR.EQ.1)GO TO 900
      IF(IERR.EQ.2)GO TO 300
      NATOMS=NATOMS+1
      IF(NATOMS.GT.NA)GO TO 920
      IF(ITYPE.EQ.3)GO TO 100
C     STRING FOUND - SAVE IT IN IELEM.
      IF(NCHAR.EQ.0.OR.NCHAR.GT.4)GO TO 900
      DO 70 I=1,NCHAR
   70 IELEM(NATOMS)(I:I)=ICH(I)
C     GET THE ATOMIC NUMBER - CODE THE CHARACTERS USING IAZ.
      CALL UPPER (ICH(1))
      CALL UPPER (ICH(2))
      I1=0
      I2=0
      DO 80 I=1,27
      IF(ICH(1).EQ.IAZ(I))I1=I
   80 IF(ICH(2).EQ.IAZ(I))I2=I
      IF(I1.EQ.0)GO TO 900
      I1=100*I1+I2
C     LOOK UP THE CODE - ALLOW 'D*' AND 'F*' FOR 'X' AND 'BQ' RESP.
      DO 90 INTEGR=1,56
      IF(I1.EQ.ICODE(INTEGR))GO TO 95
   90 CONTINUE
      IF (I1 .EQ. 427) THEN
         INTEGR = 55
         GO TO 95
      END IF
      IF (I1 .EQ. 627) THEN
         INTEGR = 56
         GO TO 95
      END IF
      GO TO 900
C
   95 IF(INTEGR.EQ.55)INTEGR=0
      IF(INTEGR.EQ.56)INTEGR=-1
  100 IAN(NATOMS)=INTEGR
      IF(NATOMS.EQ.1)GO TO 250
C*
C     LOOP OVER THE BL, ALPHA AND BETA FIELDS.
C*
      DO 230 L=1,3
C     GET AN ATOM NUMBER.
      IFIELD=IFIELD+1
      ICOL=LAST+1
      IF(ICOL.GT.72)GO TO 900
      ITYPE=3
      IERR=2
      CALL FREEFM(LINE,ICOL,72,ITYPE,IDEL,2,ICH,5,NCHAR,INTEGR,REALNO,
     1 LAST,ISEP,IERR)
      IF(IERR.EQ.-2)RETURN
      IF(IERR.NE.0)GO TO 900
      IF(ITYPE.EQ.3)GO TO 130
C     STRING FOUND - MATCH IT AGAINST IELEM.
      IF(NCHAR.EQ.0.OR.NCHAR.GT.4)GO TO 900
      K=NATOMS-1
      MATCH=0
      DO 120 I=1,K
      DO 110 J=1,4
      IF(IELEM(I)(J:J).NE.ICH(J))GO TO 120
  110 CONTINUE
      MATCH=MATCH+1
      INTEGR=I
  120 CONTINUE
      IF(MATCH.NE.1)GO TO 930
  130 IZ(NATOMS,L)=INTEGR
      LABELS(NATOMS,L)=ITYPE-2
C     GET A VALUE.
      IFIELD=IFIELD+1
      ICOL=LAST+1
      IF(ICOL.GT.72)GO TO 900
      ITYPE=4
      IERR=2
      CALL FREEFM(LINE,ICOL,72,ITYPE,IDEL,2,ICH,10,NCHAR,INTEGR,
     1 REALNO,LAST,ISEP,IERR)
      IF(IERR.EQ.-2)RETURN
      IF(IERR.EQ.1.OR.IERR.EQ.2)GO TO 900
      IF(ITYPE.EQ.4)GO TO 210
C     STRING FOUND - LOOK FOR A SIGN CHARACTER.
      IF(NCHAR.EQ.0)GO TO 900
      ISIGN=1
      IF(ICH(1).EQ.IPLUS)GO TO 140
      IF(ICH(1).NE.MINUS)GO TO 160
      ISIGN=-1
  140 IF(NCHAR.EQ.1)GO TO 900
      DO 150 I=2,NCHAR
  150 ICH(I-1)=ICH(I)
      ICH(NCHAR)=IBL
      NCHAR=NCHAR-1
C     LOOK UP THE STRING IN NAMES.
  160 IF(NCHAR.EQ.0.OR.NCHAR.GT.8)GO TO 900
      IF(NVAR.EQ.0)GO TO 190
      DO 180 I=1,NVAR
      DO 170 J=1,8
      IF(NAMES(I)(J:J).NE.ICH(J))GO TO 180
  170 CONTINUE
C     FOUND THE NAME - SET LABELS APPROPRIATELY.
      LABELS(NATOMS,L)=ISIGN*(100*I+LABELS(NATOMS,L))
      GO TO 220
  180 CONTINUE
C     NEW VARIABLE.
  190 NVAR=NVAR+1
      DO 200 I=1,NCHAR
  200 NAMES(NVAR)(I:I)=ICH(I)
      LABELS(NATOMS,L)=ISIGN*(100*NVAR+LABELS(NATOMS,L))
      GO TO 220
C     VALUE ACTUALLY FOUND.
  210 ZPARAM(NATOMS,L)=REALNO
  220 IF(NATOMS.EQ.2)GO TO 250
      IF(NATOMS.EQ.3.AND.L.EQ.2)GO TO 250
  230 CONTINUE
C*
C     GET N4, AN INTEGER.
C*
      IFIELD=8
      ICOL=LAST+1
      IF(ICOL.GT.72.OR.IERR.EQ.3)GO TO 50
      IERR=0
      CALL FREEFM(LINE,ICOL,72,3,IDEL,1,ICH,5,NCHAR,INTEGR,REALNO,
     1 LAST,ISEP,IERR)
      IF(IERR.EQ.-2)RETURN
      IF(IERR.EQ.1)GO TO 900
      IF(IERR.EQ.2)GO TO 50
      IZ(NATOMS,4)=INTEGR
C*
C     ENSURE THE REMAINDER OF THE LINE IS BLANK.
C*
  250 ICOL = LAST + 1
      IF (ICOL .GT. 72) GO TO 50
      IERR = 0
      CALL FREEFM (LINE,ICOL,72,1,IDEL,1,ICH,5,NCHAR,INTEGR,REALNO,
     1 LAST,ISEP,IERR)
      IF (IERR .EQ. -2) RETURN
      IF (IERR .EQ. 2) GO TO 50
C
      WRITE (IOUT,1140) IERRS(IFIELD)
      IOP(1) = -2
      RETURN
C*
C     VARIABLES SECTION.
C*
  300 IF(NATOMS.EQ.0)GO TO 970
C     IF NO VARIABLES USED, SWITCH TO STANDARD FORMAT.
      IF(NVAR.GT.0)GO TO 310
      WRITE (IOUT,1130)
      WRITE (IOUT,1080)
      IOP(5)=1
      RETURN
C
C     GET VARIABLES TO BE OPTIMIZED.
C
  310 WRITE(IOUT,1060)
      NLEFT = NVAR
      NGOT = 0
      IVTYPE = 0
      GO TO 330
C
C     GET CONSTANTS.
C
  320 WRITE (IOUT,1160)
      NLEFT = NVAR - NGOT
      IVTYPE = 2
C
  330 DO 490 N=1,NLEFT
      READ(IN,1000)LINE
      WRITE(IOUT,1010)LINE
C
C     GET VARIABLE NAME, DELIMITED BY AN = SIGN.
C
      CALL FREEFM(LINE,1,72,2,IDELEQ,2,ICH,72,NCHAR,INTEGR,REALNO,
     1 LAST,ISEP,IERR)
      IF(IERR.EQ.-2)RETURN
      IF (IERR .EQ. 2) THEN
         IF (IVTYPE .EQ. 0) THEN
            GO TO 320
         ELSE
            GO TO 980
         END IF
      END IF
      IF(IERR.NE.0.OR.NCHAR.EQ.0)GO TO 950
C     STRIP OFF ANY TRAILING BLANKS.
  340 IF(ICH(NCHAR).NE.IBL)GO TO 350
      NCHAR=NCHAR-1
      GO TO 340
  350 IF(NCHAR.GT.8)GO TO 950
C     FIND NAME IN NAMES.
      DO 380 I=1,NVAR
      IF(IFOUND(I).NE.0)GO TO 380
      DO 370 J=1,8
      IF(NAMES(I)(J:J).NE.ICH(J))GO TO 380
  370 CONTINUE
      GO TO 390
  380 CONTINUE
      GO TO 940
  390 IFOUND(I)=1
      NGOT = NGOT + 1
C     GET A VALUE OR TETRA.
      ITYPE=4
      IERR=2
      ICOL=LAST+1
      IF(ICOL.GT.72)GO TO 950
      CALL FREEFM(LINE,ICOL,72,ITYPE,IDEL,1,ICH,6,NCHAR,INTEGR,REALNO,
     1 LAST,ISEP,IERR)
      IF(IERR.EQ.-2)RETURN
      IF(IERR.EQ.1.OR.IERR.EQ.2)GO TO 950
      IF(ITYPE.EQ.4)GO TO 460
C     STRING FOUND - BETTER BE TETRA.
      IF(NCHAR.NE.5)GO TO 950
      DO 440 K=1,5
      CALL UPPER (ICH(K))
      IF(ICH(K).NE.ITETRA(K))GO TO 950
  440 CONTINUE
      REALNO=TETRA
C
C     SET THE OPTIMIZE/CONSTANT FLAG, AND INSERT THE VALUE IN THE Z
C     MATRIX.
C
  460 DO 480 L=1,3
      DO 480 K=1,NATOMS
      KL=LABELS(K,L)
      KLABS=IABS(KL)/100
      IF(KLABS.NE.I)GO TO 480
      IF (KL .GT. 0) THEN
         LABELS(K,L) = KL + IVTYPE
         ZPARAM(K,L) = REALNO
      ELSE
         LABELS(K,L) = KL - IVTYPE
         ZPARAM(K,L) = -REALNO
      END IF
  480 CONTINUE
  490 CONTINUE
C     GET A BLANK CARD.
      READ(IN,1000)LINE
      CALL FREEFM(LINE,1,72,1,IDEL,1,ICH,2,NCHAR,INTEGR,REALNO,LAST,
     1 ISEP,IERR)
      IF(IERR.NE.2)GO TO 960
      WRITE(IOUT,1080)
      RETURN
C*
C     ERROR SECTION.
C*
C     ILLEGAL FIELD.
  900 WRITE (IOUT,1030) IERRS(IFIELD)
  910 IOP(1)=-2
      RETURN
C     TOO MANY ATOMS.
  920 WRITE(IOUT,1040)NA
      GO TO 910
C     MATCH NOT FOUND IN IELEM, OR FOUND TOO OFTEN.
  930 WRITE (IOUT,1050) (ICH(I),I=1,4), IERRS(IFIELD)
      GO TO 910
C     VARIABLE SPECIFIED TWICE.
  940 WRITE(IOUT,1070)(ICH(I),I=1,8)
      GO TO 910
C     ILLEGAL VARIABLES CARD.
  950 WRITE(IOUT,1090)LINE
      GO TO 910
C     NO TERMINATING BLANK CARD.
  960 WRITE(IOUT,1100)LINE
      GO TO 910
C     NO ATOMS.
  970 WRITE(IOUT,1110)
      GO TO 910
C     BLANK CARD FOUND BEFORE ALL VARIABLES DEFINED.
  980 WRITE(IOUT,1120)
      DO 990 I=1,NVAR
  990 IF(IFOUND(I).EQ.0)WRITE(IOUT,1150) NAMES(I)
      GO TO 910
      END
      SUBROUTINE BUILDZ
C*
C     --------------
C     U OF T VERSION
C     APRIL 1987
C     --------------
C*
C     SUBROUTINE TO BUILD A MOLECULE FROM ITS Z MATRIX
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA)
C##
      PARAMETER (NA= 36)
C###
      PARAMETER (ZERO=0.0D0, ONE=1.0D0, TWO=2.0D0)
C
      COMMON /A/ IOP(99)
      COMMON /A/ NATOMS,ICHARG,MULTIP,IAN(NA),NAE,NBE,NE,NBASIS,CZ(NA,3)
      COMMON /A/ ANTOAU,CDUM(3),ICDUM(401)
      COMMON/ZMAT/IZ(NA,4),BL(NA),ALPH(NA),BET(NA),IZDUM(52),
     1 ZDUM(3),LBL(NA),LALPHA(NA),LBETA(NA),IZMASS(NA),ZMASS(NA)
      COMMON/IO/IN,IOUT,IODUM(215)
C
      DIMENSION ALPHA(NA),BETA(NA)
      DIMENSION U1(3),U2(3),U3(3),U4(3),VP(3),V3(3)
C
      DATA A180/180.0D0/
      DATA PI/3.14159265358979D0/
      DATA TENM5/1.0D-5/,TENM6/1.0D-6/
      DATA TORAD/1.74532925199433D-2/
C
 1000 FORMAT(//1X,132('-')/
     1 20X,'COORDINATES IN ANGSTROMS',31X,'COORDINATES IN BOHR',
     2 20X,'ATOMIC ISOTOPE/MASS'/
     3 '   I   AN',8X,'X',13X,'Y',13X,'Z',24X,'X',13X,'Y',13X,'Z',
     4 15X,'MASS#    MASS (AMU)'/
     5 1X,132('-'))
 1010 FORMAT(1X,I3,I5,F13.7,2F14.7,11X,3F14.7,12X,'AVE',F15.8)
 1020 FORMAT ('0',99('-')/
     1 45X,'Z MATRIX'/'0  I   AN   Z1      BL',18X,
     2 'Z2     ALPHA',16X,'Z3      BETA',16X,'Z4'/1X,99('-'))
 1030 FORMAT('0ATOM 3 CANNOT LIE ON THE Z AXIS')
 1040 FORMAT('0ILLEGAL BOND LENGTH ON Z MATRIX CARD',I4)
 1050 FORMAT (1X,132('-'))
 1060 FORMAT(1X,I3,2I5,F12.7,'   (',I3,')   ',I5,F12.5,'   (',I3,
     1  ')   ',I5,F12.5,'   (',I3,')   ',I5)
 1070 FORMAT (1X,99('-'))
 1080 FORMAT('0Z MATRIX CARD',I4,' REFERS TO UNDEFINED ATOM NUMBER',I5)
 1090 FORMAT('0Z MATRIX CARD',I4,' USES AN ILLEGAL Z4 CODE')
 1100 FORMAT('0RUN TERMINATED DUE TO Z MATRIX ERROR(S)')
 1110 FORMAT('0ON Z MATRIX CARD',I4,' TORSION ANGLE NOT DEFINED SINCE ',
     1 'THE VALENCE ANGLE Z1-Z2-Z3 AT ATOM',I4,' (Z2) IS 180 DEGREES')
 1120 FORMAT('0ON Z MATRIX CARD',I4,' Z1, Z2 AND Z3 ARE NOT ALL ',
     1 'DIFFERENT')
 1130 FORMAT('0ON Z MATRIX CARD',I4,' FOR EULER ANGLES AT ATOM',I4,
     1 ' (Z1) THE ATOMS Z2-Z1-Z3 ARE COLINEAR')
 1140 FORMAT('0ON Z MATRIX CARD',I4,' THE EULER ANGLE TO ATOM',I4,
     1 ' IS LESS THAN 0.0 OR GREATER THAN 180.0')
 1150 FORMAT (' YOU MIGHT CONSIDER DEFINING THE GEOMETRY DIFFERENTLY ',
     1 'IF THERE IS NO OBVIOUS Z MATRIX ERROR.')
 1160 FORMAT('0ERROR ON Z MATRIX CARD 2 - Z1 MUST BE 1')
 1170 FORMAT ('0ERROR ON Z MATRIX CARD',I4,' - NO GEOMETRY CAN ',
     1 'EXIST FOR THE GIVEN EULER ANGLES')
 1180 FORMAT(1X,I3,I5,F13.7,2F14.7,11X,3F14.7,12X,I3,F15.8)
C*
C     NO PRINTING IF IOP(21)=1.
      IPRINT=IOP(21)-1
C     IER IS SET TO 1 IF AN ERROR IS FOUND IN THE Z MATRIX
      IER=0
      IF(IOP(5).GT.1)GO TO 260
C
C     CHECK FOR TETRAHEDRAL ANGLE SUBSTITUTION.
C
      TETRA=TWO*DATAN(DSQRT(TWO))/TORAD
      DO 1 I=1,NATOMS
      IF(IZ(I,2).LT.0)ALPH(I)=TETRA
    1 IF(IZ(I,3).LT.0)BET(I)=TETRA
C
C     PRINT Z MATRIX
C
      IF(IPRINT.EQ.0)GO TO 6
      WRITE (IOUT,1020)
      I=1
      WRITE (IOUT,1060) I,IAN(1)
C
      IF(NATOMS.LE.1) GO TO 5
      I=2
      I1=1
      WRITE (IOUT,1060) I,IAN(2),IZ(2,1),BL(2),I1
C
      IF(NATOMS.LE.2) GO TO 5
      I=3
      I1=I1+1
      I2=NATOMS
      WRITE (IOUT,1060) I,IAN(3),IZ(3,1),BL(3),I1,IZ(3,2),ALPH(3),I2
C
      IF(NATOMS.LE.3) GO TO 5
      I3=2*NATOMS-3
      DO 4 I=4,NATOMS
      I1=I1+1
      I2=I2+1
      I3=I3+1
    4 WRITE (IOUT,1060) I,IAN(I),IZ(I,1),BL(I),I1,IZ(I,2),ALPH(I),I2,
     1 IZ(I,3),BET(I),I3,IZ(I,4)
C
    5 WRITE (IOUT,1070)
C
C     ZERO COORDINATE ARRAY CZ.
C
    6 DO 10 J=1,3
      DO 10 I=1,NATOMS
   10 CZ(I,J)=ZERO
      IF(NATOMS.EQ.1)GO TO 260
C
C     CONVERT ANGLES FROM DEGREES TO RADIANS.
C
      DO 20 I=1,NATOMS
C     REMOVE TETRAHEDRAL ANGLE SUBSTITUTION INDICATORS.
      IZ(I,2)=IABS(IZ(I,2))
      IZ(I,3)=IABS(IZ(I,3))
      ALPHA(I)=ALPH(I)*TORAD
      BETA(I)=BET(I)*TORAD
      IF(I.EQ.1.OR.BL(I).GE.TENM6)GO TO 20
      WRITE(IOUT,1040)I
      IER=1
   20 CONTINUE
C
      CZ(2,3)=BL(2)
      ITEMP=IZ(2,1)
      IF(ITEMP.EQ.1)GO TO 25
      WRITE(IOUT,1160)
      IER=1
C
   25 IF(NATOMS.EQ.2)GO TO 260
      CALL SINCOS(ALPHA(3),DSAJ,DCAJ)
      CZ(3,1)=BL(3)*DSAJ
      J=3
      ITEMP=IZ(3,1)
      JTEMP=IZ(3,2)
      IF(ITEMP.EQ.1)GO TO 30
      IF(ITEMP.EQ.2)GO TO 50
      WRITE(IOUT,1080)J,ITEMP
      IER=1
C
   30 CZ(3,3)=BL(3)*DCAJ
      IF(JTEMP.EQ.2)GO TO 60
      WRITE(IOUT,1080)J,JTEMP
      IER=1
      GO TO 60
C
   50 CZ(3,3)=CZ(2,3)-BL(3)*DCAJ
      IF(JTEMP.EQ.1)GO TO 60
      WRITE(IOUT,1080)J,JTEMP
      IER=1
C
   60 IF(NATOMS.EQ.3)GO TO 260
      IF(DABS(CZ(3,1)).GE.TENM5)GO TO 100
      WRITE(IOUT,1030)
      IER=1
C
  100 DO 250 J=4,NATOMS
      ITEMP=IZ(J,1)
      IF(ITEMP.GT.0.AND.ITEMP.LT.J)GO TO 102
      WRITE(IOUT,1080)J,ITEMP
      IER=1
C
  102 JTEMP=IZ(J,2)
      IF(JTEMP.GT.0.AND.JTEMP.LT.J)GO TO 104
      WRITE(IOUT,1080)J,JTEMP
      IER=1
C
  104 KTEMP=IZ(J,3)
      IF(KTEMP.GT.0.AND.KTEMP.LT.J)GO TO 106
      WRITE(IOUT,1080)J,KTEMP
      IER=1
C
  106 IF(ITEMP.NE.JTEMP.AND.ITEMP.NE.KTEMP.AND.JTEMP.NE.KTEMP)GO TO 110
      WRITE(IOUT,1120)J
      IER=1
C
C     GET ALL REQUIRED SINES AND COSINES.
C
  110 CALL SINCOS(ALPHA(J),DSAJ,DCAJ)
      CALL SINCOS(BETA(J),DSBJ,DCBJ)
      IF(IZ(J,4).NE.0)GO TO 135
C
C     BOND ANGLE AND DIHEDRAL ANGLE.
C
      CALL VEC(U1,CZ,JTEMP,KTEMP)
      CALL VEC(U2,CZ,ITEMP,JTEMP)
      CALL VPROD(VP,U1,U2)
      ZETA=U1(1)*U2(1)+U1(2)*U2(2)+U1(3)*U2(3)
      T=ONE-ZETA*ZETA
      IF(T.GT.TENM5)GO TO 115
      WRITE(IOUT,1110)J,JTEMP
      IER=1
      GO TO 250
C
  115 R=DSQRT(T)
C
      DO 120 I=1,3
  120 U3(I)=VP(I)/R
C
      CALL VPROD(U4,U3,U2)
      DO 130 I=1,3
      VJ=BL(J)*(-U2(I)*DCAJ+U4(I)*DSAJ*DCBJ+U3(I)*DSAJ*DSBJ)
  130 CZ(J,I)=VJ+CZ(ITEMP,I)
      GO TO 250
C
  135 IF(IABS(IZ(J,4)).NE.1)GO TO 210
C
C     TWO EULER (BOND) ANGLES.
C
      CALL VEC(U1,CZ,ITEMP,KTEMP)
      CALL VEC(U2,CZ,JTEMP,ITEMP)
      ZETA=-(U1(1)*U2(1)+U1(2)*U2(2)+U1(3)*U2(3))
      T=ONE-ZETA*ZETA
      IF(T.GT.TENM5)GO TO 142
      WRITE(IOUT,1130)J,ITEMP
      IER=1
      GO TO 250
C
C     CHECK THAT BOTH EULER ANGLES ARE BETWEEN 0 AND 180 DEGREES.
C
  142 IF(ALPH(J).GE.ZERO.AND.ALPH(J).LE.A180)GO TO 144
      WRITE(IOUT,1140)J,JTEMP
      IER=1
      GO TO 250
C
  144 IF(BET(J).GE.ZERO.AND.BET(J).LE.A180)GO TO 146
      WRITE(IOUT,1140)J,KTEMP
      IER=1
      GO TO 250
C
  146 A=(-DCBJ+ZETA*DCAJ)/T
      B=(DCAJ-ZETA*DCBJ)/T
      T=DSQRT(T)
      R=ZERO
      GAMMA=PI/TWO
C
      IF(ZETA)150,170,160
  150 R=PI
  160 GAMMA=DATAN(T/ZETA)+R
  170 D=ZERO
      IF(DABS(GAMMA+ALPHA(J)+BETA(J)-TWO*PI)-TENM6)190,180,180
C
  180 VJ = ONE + A*DCBJ - B*DCAJ
      IF (VJ .GE. ZERO) GO TO 185
      WRITE (IOUT,1170) J
      IER = 1
      GO TO 250
C
  185 D = DFLOAT(IZ(J,4)) * DSQRT(VJ) / T
  190 CALL VPROD(V3,U1,U2)
C
      DO 200 I=1,3
      VJ=(A*U1(I)+B*U2(I)+D*V3(I))*BL(J)
  200 CZ(J,I)=VJ+CZ(ITEMP,I)
      GO TO 250
C
  210 WRITE(IOUT,1090)J
      IER=1
C
  250 CONTINUE
C
C     PRINT COORDINATES AND CONVERT TO ATOMIC UNITS.
C
  260 IF(IPRINT.NE.0)WRITE (IOUT,1000)
      DO 320 I=1,NATOMS
      DO 310 J=1,3
      T=CZ(I,J)
      IF(IOP(5).LE.2)GO TO 300
      V3(J)=T/ANTOAU
      GO TO 310
  300 V3(J)=T
      CZ(I,J)=T*ANTOAU
  310 CONTINUE
      IF (IPRINT .NE. 0) THEN
         IF (IZMASS(I).EQ.0 .AND. IAN(I).GT.0) THEN
            WRITE (IOUT,1010) I, IAN(I), V3, (CZ(I,J),J=1,3), ZMASS(I)
         ELSE
            WRITE (IOUT,1180) I, IAN(I), V3, (CZ(I,J),J=1,3), IZMASS(I),
     1       ZMASS(I)
         END IF
      END IF
  320 CONTINUE
C
      IF (IPRINT .NE. 0) WRITE (IOUT,1050)
      IF(IER.EQ.0)RETURN
      WRITE(IOUT,1100)
      IF (((IOP(10).EQ.2.OR.IOP(10).EQ.3) .AND. IOP(13).EQ.1) .OR.
     1 (IOP(10).EQ.4.AND.IOP(13).EQ.2)) WRITE (IOUT,1150)
      IOP(1)=-2
      RETURN
      END
      SUBROUTINE SINCOS(A,ASIN,ACOS)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      PARAMETER (ZERO=0.0D0, ONE=1.0D0)
C
      DATA TENM6/1.D-6/
C
      ASIN=DSIN(A)
      ACOS=DCOS(A)
C     CHECK FOR SIN OR COS CLOSE TO ZERO.
      IF(DABS(ASIN).GT.TENM6)GO TO 10
C     ANGLE IS 0 OR 180 DEGREES.
      ASIN=ZERO
      ACOS=DSIGN(ONE,ACOS)
      RETURN
   10 IF(DABS(ACOS).GT.TENM6)RETURN
C     ANGLE IS 90 OR 270 DEGREES.
      ASIN=DSIGN(ONE,ASIN)
      ACOS=ZERO
      RETURN
      END
      SUBROUTINE VEC(U,C,J,K)
C*
C     --------------
C     U OF T VERSION
C     JANUARY 1987
C     --------------
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA)
C##
      PARAMETER (NA= 36)
C###
      PARAMETER (ZERO=0.0D0)
C
      DIMENSION C(NA,3),U(3)
C
      R2=ZERO
      DO 10 I=1,3
      T=C(J,I)-C(K,I)
      U(I)=T
   10 R2=R2+T*T
      IF(R2.EQ.ZERO)RETURN
      R2=DSQRT(R2)
      DO 20 I=1,3
   20 U(I)=U(I)/R2
      RETURN
      END
      SUBROUTINE VPROD(VP,X,Y)
C*
C     --------------
C     QCPE VERSION
C     DECEMBER 1971
C     --------------
C*
C     VP=X CROSS Y
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C*
      DIMENSION VP(3),X(3),Y(3)
C*
      VP(1)=X(2)*Y(3)-X(3)*Y(2)
      VP(2)=X(3)*Y(1)-X(1)*Y(3)
      VP(3)=X(1)*Y(2)-X(2)*Y(1)
      RETURN
      END
      SUBROUTINE FILMAS (IOP, IN, IOUT, IAN, NATOMS, IZMASS, ZMASS)
C
C     ASSIGN MASSES TO ATOMS (ADAPTED FROM GAUSSIAN 82).
C     ISOTOPIC MASSES FOR RB-XE, AND ATOMIC WEIGHTS ADDED.
C
C     ARGUMENT DESCRIPTIONS:
C     IOP    ... OPTIONS ARRAY.
C     IN     ... INPUT UNIT.
C     IOUT   ... OUTPUT UNIT.
C     IAN    ... VECTOR OF ATOMIC NUMBERS.
C     NATOMS ... NUMBER OF ATOMS.
C     IZMASS ... RETURNS ISOTOPIC MASS NUMBER (OR 0 IF ABUNDANCE
C                AVERAGED MASS WAS USED). DUMMY/FLOATING ATOMS ALWAYS
C                HAVE MASS NUMBERS OF ZERO.
C     ZMASS  ... RETURNS ATOMIC MASSES IN AMU. DUMMY/FLOATING ATOMS
C                ALWAYS HAVE MASSES OF ZERO.
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      PARAMETER (ZERO=0.0D0)
C
      CHARACTER*1 LINE(72), ICH(3), IDEL(2)
      CHARACTER*2 IEL(54), IC2
C
      DIMENSION IOP(99), IAN(NATOMS), IZMASS(NATOMS), ZMASS(NATOMS),
     1 AMASS(4,54), MN(4,54), AMASS1(4,1:2), AMASS2(4,3:10),
     2 AMASS3(4,11:18), AMASS4(4,19:36), AMASS5(4,37:54),
     3 AVMASS(54)
C
      EQUIVALENCE (AMASS(1,1),AMASS1(1,1)), (AMASS(1,3),AMASS2(1,3)),
     1 (AMASS(1,11),AMASS3(1,11)), (AMASS(1,19),AMASS4(1,19)),
     2 (AMASS(1,37),AMASS5(1,37))
C
      DATA IDEL/' ', ' '/
C
      DATA IEL/' H', 'HE', 'LI', 'BE', ' B', ' C', ' N', ' O',
     1 ' F', 'NE', 'NA', 'MG', 'AL', 'SI', ' P', ' S', 'CL',
     2 'AR', ' K', 'CA', 'SC', 'TI', ' V', 'CR', 'MN', 'FE',
     3 'CO', 'NI', 'CU', 'ZN', 'GA', 'GE', 'AS', 'SE', 'BR',
     4 'KR', 'RB', 'SR', ' Y', 'ZR', 'NB', 'MO', 'TC', 'RU',
     5 'RH', 'PD', 'AG', 'CD', 'IN', 'SN', 'SB', 'TE', ' I',
     6 'XE'/
C
C     MASSES ARE STORED IN AMASS: AMASS(I,J) IS THE MASS FOR THE JTH
C     MOST ABUNDANT ISOTOPE FOR ATOMIC NUMBER I.  THE CORRESPONDING MASS
C     NUMBERS (# OF PROTONS + # OF NEUTRONS) ARE STORED IN THE ARRAY MN.
C     THE MASSES ARE FROM A. H. WAPSTRA AND K. BOS, ATOMIC AND
C     NUCLEAR DATA TABLES, 1977, 19, 185.  THE ISOTOPIC ABUNDANCES FROM
C     THE 1981-82 CRC TABLES WERE USED FOR ELEMENTS H-KR, AND THE
C     1982-83 CRC TABLES WERE USED FOR ELEMENTS RB-XE.
C     FOR TECHNETIUM, THE ISOTOPES WERE ORDERED BASED ON THEIR
C     LIFE-TIMES SINCE THE NATURAL ABUNDANCES ARE ZERO (SEE REFERENCE
C     FROM ATOMIC WEIGHTS BELOW).
C
      DATA AMASS1/
C       H-1             H-2             H-3
     1   1.007825037D0,  2.014101787D0,  3.016049286D0,  0.0D0,
C       HE-4            HE-3
     2   4.00260325D0,   3.016029297D0,  0.0D0,          0.0D0/
C
      DATA AMASS2/
C       LI-7            LI-6
     1   7.0160045D0,    6.0151232D0,    0.0D0,          0.0D0,
C       BE-9
     2   9.0121825D0,    0.0D0,          0.0D0,          0.0D0,
C        B-11            B-10
     3  11.0093053D0,   10.0129380D0,    0.0D0,          0.0D0,
C        C-12            C-13
     4  12.000000000D0, 13.003354839D0,  0.0D0,          0.0D0,
C        N-14            N-15
     5  14.003074008D0, 15.000108978D0,  0.0D0,          0.0D0,
C        O-16            O-18            O-17
     6  15.99491464D0,  17.99915939D0,  16.9991306D0,    0.0D0,
C        F-19
     7  18.99840325D0,   0.0D0,          0.0D0,          0.0D0,
C       NE-20           NE-22           NE-21
     8  19.9924391D0,   21.9913837D0,   20.9938453D0,    0.0D0/
C
      DATA AMASS3/
C       NA-23
     1  22.9897697D0,    0.0D0,          0.0D0,          0.0D0,
C       MG-24           MG-26           MG-25
     2  23.9850450D0,   25.9825954D0,   24.9858392D0,    0.0D0,
C       AL-27
     3  26.9815413D0,    0.0D0,          0.0D0,          0.0D0,
C       SI-28           SI-29           SI-30
     4  27.9769284D0,   28.9764964D0,   29.9737717D0,    0.0D0,
C        P-31
     5  30.9737634D0,    0.0D0,          0.0D0,          0.0D0,
C        S-32            S-34            S-33            S-36
     6  31.9720718D0,   33.96786774D0,  32.9714591D0,   35.9670790D0,
C       CL-35           CL-37
     7  34.968852729D0, 36.965902624D0,  0.0D0,          0.0D0,
C       AR-40           AR-36           AR-38
     8  39.9623831D0,   35.967545605D0, 37.9627322D0,    0.0D0/
C
      DATA AMASS4/
C        K-39            K-41            K-40
     1  38.9637079D0,   40.9618254D0,   39.9639988D0,    0.0D0,
C       CA-40           CA-44           CA-42           CA-48
     2  39.9625907D0,   43.9554848D0,   41.9586218D0,   47.952532D0,
C       SC-45
     3  44.9559136D0,    0.0D0,          0.0D0,          0.0D0,
C       TI-48           TI-46           TI-47           TI-49
     4  47.9479467D0,   45.9526327D0,   46.9517649D0,   48.9478705D0,
C        V-51            V-50
     5  50.9439625D0,   49.9471613D0,    0.0D0,          0.0D0,
C       CR-52           CR-53           CR-50           CR-54
     6  51.9405097D0,   52.9406510D0,   49.9460463D0,   53.9388822D0,
C       MN-55
     7  54.9380463D0,    0.0D0,          0.0D0,          0.0D0,
C       FE-56           FE-54           FE-57           FE-58
     8  55.9349393D0,   53.9396121D0,   56.9353957D0,   57.9332778D0,
C       CO-59
     9  58.9331978D0,    0.0D0,          0.0D0,          0.0D0,
C       NI-58           NI-60           NI-62           NI-61
     A  57.9353471D0,   59.9307890D0,   61.9283464D0,   60.9310586D0,
C       CU-63           CU-65
     B  62.9295992D0,   64.9277924D0,    0.0D0,          0.0D0,
C       ZN-64           ZN-66           ZN-68           ZN-67
     C  63.9291454D0,   65.9260352D0,   67.9248458D0,   66.9271289D0,
C       GA-69           GA-71
     D  68.9255809D0,   70.9247006D0,    0.0D0,          0.0D0,
C       GE-74           GE-72           GE-70           GE-73
     E  73.9211788D0,   71.9220800D0,   69.9242498D0,   72.9234639D0,
C       AS-75
     F  74.9215955D0,    0.0D0,          0.0D0,          0.0D0,
C       SE-80           SE-78           SE-82           SE-76
     G  79.9165205D0,   77.9173040D0,   81.916709D0,    75.9192066D0,
C       BR-79           BR-81
     H  78.9183361D0,   80.916290D0,     0.0D0,          0.0D0,
C       KR-84           KR-86           KR-82           KR-83
     I  83.9115064D0,   85.910614D0,    81.913483D0,    82.914134D0/
C
      DATA AMASS5/
C       RB-85           RB-87
     1  84.9117996D0,   86.9091836D0,    0.0D0,          0.0D0,
C       SR-88           SR-86           SR-87           SR-84
     2  87.9056249D0,   85.9092732D0,   86.9088902D0,   83.913428D0,
C        Y-89
     3  88.9058560D0,    0.0D0,          0.0D0,          0.0D0,
C       ZR-90           ZR-94           ZR-92           ZR-91
     4  89.9047080D0,   93.9063191D0,   91.9050392D0,   90.9056442D0,
C       NB-93
     5  92.9063780D0,    0.0D0,          0.0D0,          0.0D0,
C       MO-98           MO-96           MO-95           MO-92
     6  97.9054050D0,   95.9046755D0,   94.9058379D0,   91.906809D0,
C       TC-98           TC-97           TC-99
     7  97.9072D0,      96.9064D0,      98.9063D0,       0.0D0,
C       RU-102          RU-104          RU-101          RU-99
     8 101.9043475D0,  103.905422D0,   100.9055808D0,   98.9059371D0,
C       RH-103
     9 102.905503D0,     0.0D0,          0.0D0,          0.0D0,
C       PD-106          PD-108          PD-105          PD-110
     A 105.903475D0,   107.903894D0,   104.905075D0,   109.905169D0,
C       AG-107          AG-109
     B 106.905095D0,   108.904754D0,     0.0D0,          0.0D0,
C       CD-114          CD-112          CD-111          CD-110
     C 113.9033607D0,  111.9027614D0,  110.904182D0,   109.903007D0,
C       IN-115          IN-113
     D 114.903875D0,   112.904056D0,     0.0D0,          0.0D0,
C       SN-120          SN-118          SN-116          SN-119
     E 119.9021990D0,  117.9016066D0,  115.9017435D0,  118.9033102D0,
C       SB-121          SB-123
     F 120.9038237D0,  122.904222D0,     0.0D0,          0.0D0,
C       TE-130          TE-128          TE-126          TE-125
     G 129.906229D0,   127.904464D0,   125.903310D0,   124.904435D0,
C        I-127
     H 126.904477D0,     0.0D0,          0.0D0,          0.0D0,
C       XE-132          XE-129          XE-131          XE-134
     I 131.904148D0,   128.9047801D0,  130.905076D0,   133.905395D0/
C
      DATA MN/ 1,  2,  3,  0,     4,  3,  0,  0,     7,  6,  0,  0,
     1         9,  0,  0,  0,    11, 10,  0,  0,    12, 13,  0,  0,
     2        14, 15,  0,  0,    16, 18, 17,  0,    19,  0,  0,  0,
     3        20, 22, 21,  0,    23,  0,  0,  0,    24, 26, 25,  0,
     4        27,  0,  0,  0,    28, 29, 30,  0,    31,  0,  0,  0,
     5        32, 34, 33, 36,    35, 37,  0,  0,    40, 36, 38,  0,
     6        39, 41, 40,  0,    40, 44, 42, 48,    45,  0,  0,  0,
     7        48, 46, 47, 49,    51, 50,  0,  0,    52, 53, 50, 54,
     8        55,  0,  0,  0,    56, 54, 57, 58,    59,  0,  0,  0,
     9        58, 60, 62, 61,    63, 65,  0,  0,    64, 66, 68, 67,
     A        69, 71,  0,  0,    74, 72, 70, 73,    75,  0,  0,  0,
     B        80, 78, 82, 76,    79, 81,  0,  0,    84, 86, 82, 83,
     C        85, 87,  0,  0,    88, 86, 87, 84,    89,  0,  0,  0,
     D        90, 94, 92, 91,    93,  0,  0,  0,    98, 96, 95, 92,
     E        98, 97, 99,  0,   102,104,101, 99,   103,  0,  0,  0,
     F       106,108,105,110,   107,109,  0,  0,   114,112,111,110,
     G       115,113,  0,  0,   120,118,116,119,   121,123,  0,  0,
     H       130,128,126,125,   127,  0,  0,  0,   132,129,131,134/
C
C     ARRAY AVMASS CONTAINS THE 1985 ABUNDANCE-AVERAGED ATOMIC WEIGHTS,
C     FROM: PURE AND APPLIED CHEMISTRY, 58, 1677-1692 (1986).
C     NOTE THAT THE VALUE FOR TECHNETIUM IS THE AVERAGE OF THE THREE
C     KNOWN RADIO-ISOTOPES FROM THE ABOVE PAPER.
C
      DATA AVMASS/
     1   1.00794D0,      4.002602D0,     6.941D0,        9.012182D0,
     2  10.811D0,       12.011D0,       14.00674D0,     15.9994D0,
     3  18.9984032D0,   20.1797D0,      22.989768D0,    24.3050D0,
     4  26.981539D0,    28.0855D0,      30.973762D0,    32.066D0,
     5  35.4527D0,      39.948D0,       39.0983D0,      40.078D0,
     6  44.955910D0,    47.88D0,        50.9415D0,      51.9961D0,
     7  54.93805D0,     55.847D0,       58.93320D0,     58.69D0,
     8  63.546D0,       65.39D0,        69.723D0,       72.61D0,
     9  74.92159D0,     78.96D0,        79.904D0,       83.80D0,
     A  85.4678D0,      87.62D0,        88.90585D0,     91.224D0,
     B  92.90638D0,     95.94D0,        97.9066D0,     101.07D0,
     C 102.90550D0,    106.42D0,       107.8682D0,     112.411D0,
     D 114.82D0,       118.710D0,      121.75D0,       127.60D0,
     E 126.90447D0,    131.29D0/
C
 1000 FORMAT ('0DUMP OF ATOMIC MASS TABLES'/
     1 '1ATOM',5X,'AVERAGE',8X,'ISOTOPIC MASSES',83('-')/)
 1010 FORMAT (2X,A2,F15.8,4(6X,A2,'-',I3,F14.8))
 1020 FORMAT ('1')
 1030 FORMAT (/'0REPLACEMENT ISOTOPIC MASS DATA:'/)
 1040 FORMAT (72A1)
 1050 FORMAT (' SELECT MASS NUMBER',I4,' FOR ATOM NUMBER',I3)
 1060 FORMAT (' USE MASS NUMBER',I4,' FOR ALL ',A2,' ATOMS')
 1070 FORMAT ('0*** ATOM NUMBER',I8,' IS NOT VALID.'/
     1 ' INPUT LINE: ',72A1/)
 1080 FORMAT ('0*** ATOM NUMBER',I8,' IS A DUMMY/FLOATING ATOM -',
     1 ' NO REPLACEMENT MASS IS PERMITTED.'/)
 1090 FORMAT ('0*** MASS NUMBER',I8,' NOT FOUND FOR ATOM NUMBER',I8,
     1 ' (ATOMIC NUMBER',I4,').')
 1100 FORMAT ('0*** ATOMIC SYMBOL ',A2,' IS NOT VALID:'/
     1 ' INPUT LINE: ',72A1/)
 1110 FORMAT ('0*** MASS NUMBER',I8,' NOT FOUND FOR ATOMIC SYMBOL ',A2)
 1120 FORMAT ('0*** MASS NUMBER ',I8,' IS NOT VALID:'/
     1 ' INPUT LINE: ',72A1/)
 1130 FORMAT (5X,'VALID MASS NUMBERS ARE:',4I4)
 1140 FORMAT (1X)
C
C
C     SET ATOMIC MASS NUMBERS AND MASSES.
C
      IF (IOP(22) .EQ. 1) GO TO 800
C
C     SELECT MOST ABUNDANT ISOTOPE.
C
      DO 100 I=1,NATOMS
      IANI = IAN(I)
      IF (IANI.GT.0 .AND. IANI.LE.54) THEN
         IZMASS(I) = MN(1,IANI)
         ZMASS(I) = AMASS(1,IANI)
      ELSE
         IZMASS(I) = 0
         ZMASS(I) = ZERO
      END IF
  100 CONTINUE
C
C     ARE CHANGES TO BE READ.
C
      IF (IOP(22) .NE. 2) GO TO 900
      WRITE (IOUT,1030)
C
C     READ AN INPUT LINE.
C
  200 READ (IN,1040,END=990) LINE
C
C     SCAN FOR THE ATOMIC SYMBOL/NUMBER, AND THE REPLACEMENT ISOTOPE.
C
      ITYPE = 3
      IERR = 1
      ICOL = 1
      CALL FREEFM (LINE, ICOL, 72, ITYPE, IDEL, 2, ICH, 3, NCHAR,
     1 INTEGR, REALNO, LAST, ISEP, IERR)
      IF (IERR .EQ. -2) GO TO 200
      IF (IERR .EQ. 2) THEN
         WRITE (IOUT,1140)
         GO TO 900
      END IF
C
      IF (ITYPE .EQ. 1) THEN
C
C     FOUND AN ATOM SYMBOL - EXTRACT IT AND LOOK UP THE ATOMIC NUMBER.
C
         IF (NCHAR.LT.1 .OR. NCHAR.GT.2) GO TO 980
         IF (NCHAR .EQ. 1) THEN
            IC2 = ' ' // ICH(1)
         ELSE
            IC2 = ICH(1) // ICH(2)
         END IF
         DO 210 I=1,54
         IF (IC2 .EQ. IEL(I)) THEN
            IATOM = -I
            GO TO 220
         END IF
  210    CONTINUE
         WRITE (IOUT,1100) IC2, LINE
         IOP(1) = -2
         GO TO 200
      ELSE
C
C     GOT AN ATOM NUMBER.
C
         IATOM = INTEGR
         IF (IATOM.LE.0 .OR. IATOM.GT.NATOMS) THEN
            WRITE (IOUT,1070) IATOM, LINE
            IOP(1) = -2
            GO TO 200
         END IF
      END IF
C
  220 ITYPE = 3
      IERR = 0
      ICOL = LAST + 1
      IF (ICOL .GT. 72) GO TO 980
      CALL FREEFM (LINE, ICOL, 72, ITYPE, IDEL, 2, ICH, 3, NCHAR,
     1 INTEGR, REALNO, LAST, ISEP, IERR)
      IF (IERR .EQ. -2) GO TO 200
      IF (IERR .EQ. 2) GO TO 980
      IMASS = INTEGR
      IF (IMASS .LE. 0) THEN
         WRITE (IOUT,1120) IMASS, LINE
         IOP(1) = -2
         GO TO 200
      END IF
      IF (IATOM .LT. 0) GO TO 300
C
C     USE MASS NUMBER IMASS FOR ATOM NUMBER IATOM.
C
      WRITE (IOUT,1050) IMASS, IATOM
      IANI = IAN(IATOM)
      IF (IANI .LE. 0) THEN
         WRITE (IOUT,1080) IATOM
         IOP(1) = -2
         GO TO 200
      END IF
C
      DO 250 J=1,4
      IF (MN(J,IANI) .EQ. IMASS) GO TO 260
  250 CONTINUE
C
      WRITE (IOUT,1090) IMASS, IATOM, IANI
  270 DO 280 J=1,4
  280 IF (MN(J,IANI) .NE. 0) JMAX = J
      WRITE (IOUT,1130) (MN(J,IANI),J=1,JMAX)
      WRITE (IOUT,1140)
      IOP(1) = -2
      GO TO 200
C
  260 IZMASS(IATOM) = IMASS
      ZMASS(IATOM) = AMASS(J,IANI)
      GO TO 200
C
C     USE MASS NUMBER IMASS FOR ALL ATOMS WITH ATOMIC NUMBER IATOM.
C
  300 IATOM = -IATOM
      WRITE (IOUT,1060) IMASS, IEL(IATOM)
C
      DO 310 J=1,4
      IF (MN(J,IATOM) .EQ. IMASS) GO TO 320
  310 CONTINUE
C
      WRITE (IOUT,1110) IMASS, IEL(IATOM)
      IANI = IATOM
      GO TO 270
C
  320 DO 330 I=1,NATOMS
      IANI = IAN(I)
      IF (IANI .EQ. IATOM) THEN
         IZMASS(I) = IMASS
         ZMASS(I) = AMASS(J,IATOM)
      END IF
  330 CONTINUE
      GO TO 200
C
C     SELECT ABUNDANCE-AVERAGED ATOMIC WEIGHTS.
C
  800 DO 810 I=1,NATOMS
      IZMASS(I) = 0
      IANI = IAN(I)
      IF (IANI.GT.0 .AND. IANI.LE.54) THEN
         ZMASS(I) = AVMASS(IANI)
      ELSE
         ZMASS(I) = ZERO
      END IF
  810 CONTINUE
C
C     DUMP CONTENTS OF MASS TABLES.
C
  900 IF (IOP(23) .NE. 1) RETURN
C
      WRITE (IOUT,1000)
      DO 920 I=1,54
      DO 910 J=1,4
  910 IF (MN(J,I) .NE. 0) JMAX = J
  920 WRITE (IOUT,1010) IEL(I), AVMASS(I),
     1 (IEL(I),MN(J,I),AMASS(J,I),J=1,JMAX)
      WRITE (IOUT,1020)
      RETURN
C
C     ERROR SECTION.
C
  980 WRITE (IOUT,981) LINE
  981 FORMAT ('0*** INVALID INPUT FOUND WHILE READING',
     1 ' REPLACEMENT ATOMIC MASS NUMBERS:'/' INPUT LINE: ',72A1/
     2 ' POSSIBILITIES: MISSING MASS NUMBER, INVALID ATOMIC',
     3 ' SYMBOL OR NUMBER.'/)
      IOP(1) = -2
      GO TO 200
C
  990 WRITE (IOUT,991) IN
  991 FORMAT ('0*** END-OF-FILE ON UNIT',I3,' WHILE READING',
     1 ' REPLACEMENT ATOMIC MASS NUMBERS')
      IOP(1) = -2
      RETURN
      END
      SUBROUTINE FREEFM(LINE,ICOL,ILAST,ITYPE,IDEL,NDEL,
     1 IA,NIA,NCHAR,INTEGR,REALNO,LAST,ISEP,IERR)
C*
C     SUBROUTINE TO SIMULATE FREE-FORMAT INPUT OF ALPHABETICS,
C     ALPHANUMERICS, INTEGERS AND REALS.
C
C     AUTHOR: MIKE PETERSON, U OF T CHEMISTRY DEPARTMENT, TORONTO.
C*
C     ARGUMENTS:
C
C     LINE: INPUT ARRAY OF ALPHABETIC CHARACTERS TO BE DECODED, STORED
C           1 CHARACTER PER ARRAY ELEMENT (IE A1 FORMAT).
C     ICOL: START DECODING AT POSITION ICOL.
C     ILAST: STOP DECODING AFTER INTERPRETING POSITION ILAST, IF NO
C            DELIMITER FOUND FIRST. ILAST SHOULD NOT BE LESS THAN ICOL.
C            ILAST IS ALSO THE LENGTH OF LINE (MAXIMUM 130 CHARACTERS).
C     ITYPE: TYPE OF CONVERSION TO BE DONE:
C            1 TO GET A FIELD OF ALPHABETIC CHARACTERS WHERE ANY
C              CHARACTER IS VALID.
C            2 TO GET A FIELD OF ALPHANUMERIC CHARACTERS WHERE ONLY
C              A TO Z, 0 TO 9, * AND THE BLANK ARE ALLOWED, WHICH MAY
C              BE PRECEEDED BY A + OR - SIGN.
C            3 TO GET ONE INTEGER VALUE, CONTAINING 8 DIGITS OR LESS,
C              EXCLUDING LEADING ZEROES AND THE SIGN.
C            4 TO GET ONE FLOATING POINT VALUE.
C            ITYPE RETURNS THE CODE FOR THE ACTUAL TYPE OF VALUE
C            RETURNED, WHICH WILL BE THE SAME AS THE INPUT VALUE,
C            UNLESS THE INPUT VALUE OF IERR IS 1 OR 2 AND THE INPUT
C            MODE IS ACTUALLY CHANGED TO ALPHABETIC OR ALPHANUMERIC.
C            IN THE LATTER CASES, ITYPE WILL BE 1 OR 2 RESPECTIVELY.
C     IDEL: ARRAY OF VALID DELIMITER CHARACTERS, ONE LEFT-JUSTIFIED
C           CHARACTER PER ELEMENT.
C     NDEL: NUMBER OF DELIMITER CHARACTERS IN IDEL (MINIMUM 1).
C     IA: ARRAY TO RETURN AN ALPHABETIC STRING, ONE CHARACTER PER
C         ELEMENT. THIS ARRAY IS BLANKED OUT TO START.
C     NIA: NUMBER OF ELEMENTS IN IA. A MAXIMUM OF NIA CHARATERS WILL BE
C         RETURNED FOR ITYPE = 1 OR 2, BUT LINE IS SEARCHED UNTIL
C         EITHER A DELIMITER IS FOUND, OR POSITION ILAST IS REACHED.
C     NCHAR: RETURNS THE ACTUAL NUMBER OF CHARACTERS IN THE STRING (0
C            IF NO CHARACTERS FOUND).
C     INTEGR: RETURNS THE VALUE OF THE INTEGER FOUND FOR ITYPE=3.
C     REALNO: RETURNS THE VALUE OF THE REAL NUMBER FOUND FOR ITYPE=4.
C     LAST: RETURNS THE LAST POSITION ACTUALLY INTERPRETED. LAST WILL
C           EQUAL ILAST IF NO NON-BLANK CHARACTERS ARE FOUND BEFORE
C           POSITION ILAST, ELSE IS THE POSITION OF THE FIRST DELIMITER.
C     ISEP: RETURNS THE SEPARATOR CHARACTER FOUND, IF THE VALUE
C           RETURNED FOR IERR IS 0 OR 1.
C     IERR: ON INPUT INDICATES THE ERROR PROCESSING OPTIONS:
C           0 TERMINATE ON ANY ERROR.
C           1 SWITCH FROM INTEGER/REAL TO ALPHABETIC INPUT IF A
C             NON-NUMERIC CHARACTER IS FOUND.
C           2 SWITCH FROM INTEGER/REAL TO ALPHANUMERIC INPUT IF A
C             NON-NUMERIC CHARACTER IS FOUND.
C           ON RETURN INDICATES A RETURN CODE:
C           0 NORMAL RETURN.
C           1 NO NON-BLANK CHARACTER FOUND BEFORE A DELIMITER (WARNING
C             ONLY).
C           2 NO NON-BLANK CHARACTER FOUND BEFORE POSITION ILAST
C             (WARNING ONLY).
C           3 DATA ITEM FOUND BUT NO SEPARATOR ENCOUNTERED BEFORE
C             POSITION ILAST (WARNING ONLY).
C          -2 AN ERROR OCCURED, A MESSAGE WAS PRINTED, LINE HAS BEEN
C             DESTROYED, AND IOP(1) SET TO -2.
C           NOTE: OF COURSE, TO SWITCH SUCCESSFULLY TO EITHER
C           ALPHABETIC OR ALPHANUMERIC INPUT, IA AND NIA MUST BE
C           DEFINED PROPERLY IN THE CALLING PROGRAM.
C*
C     GENERAL RULES:
C
C     1. LEADING BLANKS ARE ALWAYS IGNORED, AND THE FIRST OCCURANCE OF
C     ANY OF THE DELIMITER CHARACTERS AFTER A NON-BLANK CHARACTER
C     INDICATES THE END OF A DATA ITEM. PROVIDING THE BLANK IS NOT ONE
C     OF THE DELIMITERS, IMBEDDED BLANKS WILL ALSO BE IGNORED FOR
C     INTEGER/REAL INPUT, BUT NOT FOR ALPHABETIC/ALPHANUMERIC INPUT.
C
C     2. IF THE FIRST NON-BLANK CHARACTER IS A DELIMITER, OR THE ENTIRE
C     FIELD FROM ICOL TO ILAST IS BLANK, A ZERO VALUE IS RETURNED FOR
C     INTEGER/REAL INPUT, OR A NULL STRING WITH NCHAR=0 FOR ALPHABETIC
C     OR ALPHANUMERIC INPUT.
C
C     3. REAL VALUES MUST CONTAIN A DECIMAL POINT UNLESS THE ENTIRE
C     FIELD IS BLANK, AND MAY CONTAIN A D OR E EXPONENT.
C
C     4. ONLY ONE OF IA, INTEGR OR REALNO WILL ACTUALLY BE RETURNED,
C     DEPENDING ON ITYPE AND IERR.
C*
C     ICOL, ILAST, IDEL, NDEL AND NIA ARE NOT CHANGED BY THIS
C     ROUTINE. LINE IS ALTERED ONLY IF AN ERROR IS DETECTED (IERR=-2).
C     ITYPE MAY BE CHANGED ONLY IF THE INPUT VALUE OF IERR IS 1 OR 2.
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA)
C##
      PARAMETER (NA= 36)
C###
      COMMON /A/ IOP(99),IC1(NA),IC2(7),C(NA,3),CD2(4),IC3(401)
C
      COMMON/IO/IN,IOUT,IODUM(215)
C*
      CHARACTER*1 LINE(ILAST), IDEL(NDEL), IA(NIA), ISEP,
     1 IBL, IDASH, IPLUS, IPOINT, ICH,
     2 IAZ(64), NUM(10)
C
      EQUIVALENCE (NUM(1),IAZ(53))
C*
      DATA IBL/' '/, IDASH/'-'/, IPLUS/'+'/, IPOINT/'.'/
      DATA IAZ/'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',
     1 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q',
     2 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',
     3 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h',
     4 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q',
     5 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',
     6 '1', '2', '3', '4', '5', '6', '7', '8', '9',
     7 '0', '*', ' '/
      DATA ZERO/0.0D0/,TEN/10.0D0/
C*
 1000 FORMAT ('0ILLEGAL CHARACTER ',A1,' FOUND AT POSITION',I3,
     1 ' OF INPUT LINE:'/'0',130A1)
 1010 FORMAT ('0REAL NUMBER DOES NOT CONTAIN A DECIMAL POINT FOR INPUT',
     1 ' LINE:'/'0',130A1)
 1020 FORMAT (1X,130A1)
 1030 FORMAT ('0INTEGER CONTAINS TOO MANY DIGITS AT POSITION',I3,
     1 ' OF INPUT LINE:'/'0',130A1)
 1040 FORMAT ('0TOO MANY DIGITS IN THE D/E EXPONENT AT POSITION',I3,
     1 ' OF INPUT LINE:'/'0',130A1)
 1050 FORMAT ('0INCOMPLETE NUMBER AT POSITION',I3,' OF INPUT LINE:'/
     1 '0',130A1)
C*
C     IF ALPHABETIC INPUT, BLANK OUT IA.
      IF (ITYPE.GE.3) GO TO 20
    1 DO 10 I=1,NIA
   10 IA(I)=IBL
      NCHAR=0
C     IGNORE LEADING BLANKS.
   20 LAST=ICOL-1
   30 IF (LAST.GE.ILAST) GO TO 50
      LAST=LAST+1
      ICH=LINE(LAST)
      IF (ICH.EQ.IBL) GO TO 30
C     CHECK FOR DELIMITERS.
      DO 40 I=1,NDEL
      IF (ICH.EQ.IDEL(I)) GO TO 45
   40 CONTINUE
      GO TO 100
C     FOUND NO CHARACTER BEFORE A DELIMITER.
   45 IERR=1
      ISEP=ICH
      GO TO 55
C     FOUND NO CHARACTERS BEFORE END-OF-FIELD.
   50 IERR=2
   55 GO TO (70,70,60,80),ITYPE
C     INTEGER.
   60 INTEGR=0
   70 RETURN
C     REAL.
   80 REALNO=ZERO
      RETURN
C     BRANCH TO CORRECT TYPE.
  100 GO TO (140,110,300,400),ITYPE
C*
C     ALPHABETIC/ALPHANUMERIC INPUT.
C*
C     CHECK THIS CHARACTER IF ONLY ALPHANUMERICS ARE ALLOWED.
  110 DO 130 I=1,64
      IF (ICH.EQ.IAZ(I)) GO TO 140
  130 CONTINUE
      IF (NCHAR.EQ.0.AND.(ICH.EQ.IPLUS.OR.ICH.EQ.IDASH)) GO TO 140
      GO TO 900
  140 IF (NCHAR.GE.NIA) GO TO 150
      NCHAR=NCHAR+1
      IA(NCHAR)=ICH
C     CONTINUE SEARCH UNTIL A DELIMITER OR END-OF-FIELD FOUND.
  150 IF (LAST.GE.ILAST) GO TO 180
      LAST=LAST+1
      ICH=LINE(LAST)
      DO 160 I=1,NDEL
      IF (ICH.EQ.IDEL(I)) GO TO 170
  160 CONTINUE
      IF (ITYPE.EQ.1) GO TO 140
      GO TO 110
C     DELIMITER FOUND.
  170 IERR=0
      ISEP=ICH
      RETURN
C     END-OF-FIELD FOUND.
  180 IERR=3
      RETURN
C*
C     INTEGER.
C*
  300 ISIGN=1
      NDIGIT=-1
      INTEGR=0
      IF (ICH.NE.IDASH) GO TO 310
C     NEGATIVE NUMBER.
      ISIGN=-1
      GO TO 350
C     TRY FOR A PLUS SIGN.
  310 IF (ICH.EQ.IPLUS) GO TO 350
C     ENSURE THIS CHARACTER IS A LEGAL DIGIT.
  320 DO 330 I=1,10
      II=I
      IF (ICH.EQ.NUM(I)) GO TO 340
  330 CONTINUE
      GO TO 900
  340 IF (NDIGIT.LT.0) NDIGIT=0
      NDIGIT=NDIGIT+1
      IF (NDIGIT.GT.8) GO TO 970
      IF (II.EQ.10) II=0
      INTEGR=10*INTEGR+II
C     IGNORE LEADING ZEROES.
      IF (INTEGR.EQ.0) NDIGIT=0
C     GET NEXT NON-BLANK CHARACTER.
  350 IF (LAST.GE.ILAST) GO TO 380
      LAST=LAST+1
      ICH=LINE(LAST)
C     CHECK FOR A DELIMITER.
      DO 360 I=1,NDEL
      IF (ICH.EQ.IDEL(I)) GO TO 370
  360 CONTINUE
      IF (ICH.EQ.IBL) GO TO 350
      GO TO 320
C     DELIMITER FOUND.
  370 ISEP=ICH
      IERR=0
      GO TO 390
C     END-OF-FIELD.
  380 IERR=3
C     END OF INPUT.
  390 IF (NDIGIT.LT.0) GO TO 990
      IF (INTEGR.GT.0.AND.ISIGN.LT.0) INTEGR=-INTEGR
      RETURN
C*
C     REAL NUMBER.
C*
  400 ISIGN=1
      REALNO=ZERO
C     INDICATE NO EXPONENT FOUND.
      IEXP=-1
C     INDICATE NO DECIMAL POINT FOUND.
      IFPT=-1
      IF (ICH.NE.IDASH) GO TO 410
C     NEGATIVE NUMBER.
      ISIGN=-1
      GO TO 500
C     TRY FOR A PLUS SIGN.
  410 IF (ICH.EQ.IPLUS) GO TO 500
C     ENSURE THIS CHARACTER IS A LEGAL DIGIT, DECIMAL POINT, D/E OR
C     EXPONENT SIGN.
  420 DO 430 I=1,10
      II=I
      IF (ICH.EQ.NUM(I)) GO TO 460
  430 CONTINUE
C     TRY FOR A DECIMAL POINT - IFPT COUNTS THE NUMBER OF DIGITS
C     AFTER THE DECIMAL POINT.
      IF (IFPT.GE.0.OR.ICH.NE.IPOINT) GO TO 440
      IFPT=0
      GO TO 500
C     TRY FOR AN EXPONENT.
  440 IF (IEXP.GE.0) GO TO 450
      IF (ICH.NE.IAZ(4) .AND. ICH.NE.IAZ(5) .AND.
     1 ICH.NE.IAZ(30) .AND. ICH.NE.IAZ(31)) GO TO 900
C     ONLY ACCEPT AN EXPONENT IF A DECIMAL POINT HAS BEEN FOUND.
      IF (IFPT.LT.0.AND.(IERR.EQ.1.OR.IERR.EQ.2)) GO TO 960
      IF (IFPT.LT.0) GO TO 930
      IEXP=0
      IEXSGN=0
      NDIGIT=0
      GO TO 500
C     TRY FOR AN EXPONENT SIGN, IF WE HAVEN'T ALREADY GOT ONE.
  450 IF (IEXSGN.NE.0) GO TO 900
      IEXSGN=1
      IF (ICH.EQ.IPLUS) GO TO 500
      IF (ICH.NE.IDASH) GO TO 900
      IEXSGN=-1
      GO TO 500
C     GOT A DIGIT - IS IT FROM THE MANTISSA OR THE EXPONENT.
  460 IF (II.EQ.10) II=0
      IF (IEXP.GE.0) GO TO 470
C     MANTISSA - INCLUDE IN SUM.
      REALNO=TEN*REALNO+DFLOAT(II)
C     IF AFTER THE DECIMAL POINT, ADD ONE TO DIGIT COUNT.
      IF (IFPT.GE.0) IFPT=IFPT+1
      GO TO 500
C     EXPONENT DIGIT.
  470 NDIGIT=NDIGIT+1
      IF (NDIGIT.GT.2) GO TO 980
      IEXP=10*IEXP+II
C     GET NEXT NON-BLANK CHARACTER.
  500 IF (LAST.GE.ILAST) GO TO 530
      LAST=LAST+1
      ICH=LINE(LAST)
C     CHECK FOR DELIMITER.
      DO 510 I=1,NDEL
      IF (ICH.EQ.IDEL(I)) GO TO 520
  510 CONTINUE
      IF (ICH.EQ.IBL) GO TO 500
      GO TO 420
C     DELIMITER FOUND.
  520 ISEP=ICH
      IERR=0
      GO TO 540
C     END-OF-FIELD FOUND.
  530 IERR=3
C     END OF INPUT - CORRECT THE MANTISSA FOR NUMBERS AFTER THE DECIMAL.
  540 IF (IFPT.LT.0) GO TO 930
      IF (REALNO.GT.ZERO.AND.ISIGN.LT.0) REALNO=-REALNO
      IF (IFPT.GT.0) REALNO=REALNO/TEN**IFPT
      IF (IEXP.LT.0) RETURN
      IF (NDIGIT.EQ.0) GO TO 990
      IF (IEXP.EQ.0) RETURN
      IF (IEXSGN.LT.0) GO TO 550
C     POSITIVE EXPONENT.
      REALNO=REALNO*TEN**IEXP
      RETURN
C     NEGATIVE EXPONENT.
  550 REALNO=REALNO/TEN**IEXP
      RETURN
C*
C     ERROR SECTION.
C*
C     ILLEGAL CHARACTER AT POSITION LAST.
  900 IF (ITYPE.GE.3.AND.(IERR.EQ.1.OR.IERR.EQ.2)) GO TO 960
      WRITE(IOUT,1000)ICH,LAST,LINE
      DO 910 I=1,ILAST
  910 LINE(I)=IBL
      LINE(LAST)=IDASH
  920 WRITE(IOUT,1020)LINE
      IERR=-2
      IOP(1)=-2
      RETURN
C     NO DECIMAL POINT, POSITIONS ICOL TO LAST.
  930 WRITE(IOUT,1010)LINE
  935 DO 940 I=1,ILAST
  940 LINE(I)=IBL
      DO 950 I=ICOL,LAST
  950 LINE(I)=IDASH
      GO TO 920
C     TRY AGAIN WITH ALPHABETIC/ALPHANUMERIC INPUT.
  960 ITYPE=IERR
      GO TO 1
C     TOO MANY INTEGER DIGITS.
  970 WRITE(IOUT,1030)LAST,LINE
      GO TO 935
C     TOO MANY EXPONENT DIGITS.
  980 WRITE(IOUT,1040)LAST,LINE
      GO TO 935
C     INCOMPLETE NUMBER.
  990 WRITE(IOUT,1050)LAST,LINE
      GO TO 935
      END
      SUBROUTINE UPPER (Z)
C
C     CONVERT CHARACTER STRING Z TO UPPER CASE.
C
      CHARACTER Z*(*), IAZ*1
C
      DIMENSION IAZ(52)
C
      DATA IAZ/'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',
     1 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q',
     2 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',
     3 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h',
     4 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q',
     5 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'/
C
C
C     GET LENGTH OF CHARACTER STRING Z.
C
      L = LEN(Z)
C
      DO 200 J=1,L
      DO 100 I=1,26
      IF (Z(J:J) .EQ. IAZ(I+26)) THEN
         Z(J:J) = IAZ(I)
         GO TO 200
      END IF
  100 CONTINUE
  200 CONTINUE
      RETURN
      END
