C/    GL0311       10 JUL 87                                         MRP
C?GLD/GBR/IBM/VAX/UNX
      SUBROUTINE SECINT
C??
C?CDC
C     PROGRAM SECINT
C??
C     LINK 0311
C
C     --------------
C     U OF T VERSION
C     JULY 1987
C     --------------
C
C     ROUTINE TO SELECT THE APPROPRIATE 2-ELECTRON INTEGRALS
C     FROM UNIT ITWOEL AND WRITE THEM OUT TO UNIT IFORMT.
C     SELECT INTEGRALS FOR A+B THAT DO NOT INVOLVE EXCHANGE
C     BETWEEN THE MOLECULES (IOP(4)=6).
C
C     ORIGINAL VERSION: K. MOROKUMA, APRIL 1973.
C     MODIFIED: R. CAMMI, U. OF PARMA, DECEMBER 1985.
C     RE-WRITTEN: M. PETERSON, U. OF TORONTO CHEMISTRY DEPARTMENT,
C     JULY 1987.
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA, NB=#NB)
C##
      PARAMETER (NA= 36, NB=200)
C###
      PARAMETER (ZERO=0.0D0)
C
      INTEGER P, Q, R, SINDX
C
      LOGICAL USEOFF
C
      CHARACTER*1 TITLE
C
      COMMON /A/ IOP(99)
      COMMON /A/ NATOMS,ICHARG,MULTIP,IAN(NA),NAE,NBE,NE,NBASIS,C(NA,3)
      COMMON /A/ DUMC(4),IDUMC(401)
C
      COMMON /C0311/ IXP(4),JXP(4),KXP(4),LXP(4),XXP(4),
     1 IBMAP(NB),IAMAP(NA),IANSAV(NA),I44D1(3,5),NBASAV(3),
     2 I44D2(2,5),ZEN(12,2),
     3 IX(3072),IY(3072),A(NB,NB)
C
      COMMON/BSINFO/NVO(NA),IAOFF(NA)
      COMMON/PACKED/I,J,K,L,JA
      COMMON/IO/IN,IOUT,IPUNCH,IMAT,ITWOEL,IODUM1(5),IFORMT,IODUM2(6),
     1 NFILE(100,2)
C
      DIMENSION IV(2)
C
      EQUIVALENCE (P,I), (Q,J), (R,MINDX,K), (SINDX,L)
      EQUIVALENCE (AIBMAP,IBMAP(1)), (VALINT,IV(1))
C
C?IBM/GLD/GBR/VAX/UNX
      DATA NWORDS/3/, MAXBUF/3070/
C??
C?CDC
C     DATA NWORDS/2/, MAXBUF/3071/, USEOFF/.FALSE./
C??
 1000 FORMAT(1X,4I4,1PD14.6,3(I8,3I4,D14.6))
 1010 FORMAT('1TWO ELECTRON INTEGRALS AFTER SELECTION BY FRAGMENTS',
     1 ' (NOTE: LABELS USE THE PACKED INDICES)'/'0   I   J   K   L',4X,
     2 'INTEGRAL',3(9X,'I   J   K   L',4X,'INTEGRAL')/)
 1020 FORMAT(//1X,I10,' TWO ELECTRON INTEGRALS COPIED TO UNIT',I3,
     1 ' AFTER SELECTION IN SECINT')
 1030 FORMAT ('1',A1,' MATRIX AFTER SELECTION BY FRAGMENTS IN SECINT')
 1040 FORMAT ('1',A1,' MATRIX BEFORE SELECTION BY FRAGMENTS IN SECINT')
C
C     EXIT IF THIS LINK NOT REQUIRED.
C
      IF (IOP(10) .EQ. 0) RETURN
      IF (IOP(4) .NE. 6) RETURN
C
C     RECOVER MAP BETWEEN BASIS FUNCTIONS AND FRAGMENTS.
C
      CALL TREAD (44, AIBMAP, NFILE(44,1), 1, NFILE(44,1), 1, 0)
C?IBM/GLD/GBR/VAX/UNX
      USEOFF = NBASAV(3) .GT. 127
C??
C     BLOCK OUT THE "EXCHANGE" ELEMENTS IN S AND H.
C
C     OVERLAP MATRIX.
C
      TITLE = 'S'
      CALL TREAD (8, A, NB, NB, NBASIS, NBASIS, 1)
      IF (IOP(32).EQ.1 .OR. IOP(32).EQ.2) THEN
         WRITE (IOUT,1040) TITLE
         CALL GBSOUT (A, A, NB, NB, NBASIS, 0)
      END IF
C
      DO 400 I=1,NBASIS
      IFRAG = IBMAP(I)
      DO 400 J=1,I
      IF (IFRAG .NE. IBMAP(J)) THEN
         A(I,J) = ZERO
         A(J,I) = ZERO
      END IF
  400 CONTINUE
C
C     PRINT MATRIX IF NECESSARY, AND WRITE BACK TO DISK.
C
      IF (IOP(32).EQ.1 .OR. IOP(32).EQ.2) THEN
         WRITE (IOUT,1030) TITLE
         CALL GBSOUT (A, A, NB, NB, NBASIS, 0)
      END IF
      CALL TWRITE (8, A, NB, NB, NBASIS, NBASIS, 1)
C
C     CORE HAMILTONIAN MATRIX.
C
      TITLE = 'H'
      CALL TREAD (13, A, NB, NB, NBASIS, NBASIS, 1)
      IF (IOP(32).EQ.1 .OR. IOP(32).EQ.2) THEN
         WRITE (IOUT,1040) TITLE
         CALL GBSOUT (A, A, NB, NB, NBASIS, 0)
      END IF
C
      DO 410 I=1,NBASIS
      IFRAG = IBMAP(I)
      DO 410 J=1,I
      IF (IFRAG .NE. IBMAP(J)) THEN
         A(I,J) = ZERO
         A(J,I) = ZERO
      END IF
  410 CONTINUE
C
C     PRINT MATRIX IF NECESSARY, AND WRITE BACK TO DISK.
C
      IF (IOP(32).EQ.2 .OR. IOP(32).EQ.3) THEN
         WRITE (IOUT,1030) TITLE
         CALL GBSOUT (A, A, NB, NB, NBASIS, 0)
      END IF
      CALL TWRITE (13, A, NB, NB, NBASIS, NBASIS, 1)
C
C     PREPARE FOR 2-ELECTRON INTEGRAL SELECTION.
C
      REWIND ITWOEL
      REWIND IFORMT
      IQ = 1
      ICOUNT = 1
      IF (IOP(33) .EQ. 1) WRITE (IOUT,1010)
      NTINTS = 0
C
C     THE FILLED BUFFER LOOKS AS FOLLOWS FOR 32 BIT MACHINES:
C     LABEL-INTEGRAL-INTEGRAL-LABEL-INTEGRAL-INTEGRAL-LABEL-----------
C     THE LABEL BEING A PACKED WORD CONTAINING THE NUMBERS OF THE FOUR
C     ATOMIC ORBITALS ASSOCIATED WITH THE INTEGRAL - THE SIGN
C     SERVES TO CLASSIFY THE INTEGRAL TYPE (1 OR 2) - SEE SHLOUT.
C
   20 CALL NWIORD (ITWOEL, IX, 3072, .TRUE., 'SECINT',
     1 IOP(1), *9000)
C
C     THIS IS THE LOOP OVER THE BUFFER OF INTEGRALS AND LABELS
C     TREATING EACH LABEL-INTEGRAL COMBINATION SEPARATELY
C     THE ROUTINE USES A LABEL OF 0 TO SIGNIFY THAT A NEW SET OF ATOM
C     OFFSETS IS TO BE APPLIED.
C     FOR 32 BIT MACHINES, EACH LABEL/INTEGRAL OCCUPIES 3 WORDS.
C     FOR 60 BIT MACHINES, EACH LABEL/INTEGRAL OCCUPIES 2 WORDS.
C
      DO 280 M=1,MAXBUF,NWORDS
      JA=IX(M)
C
C     UNPACK THE LABELS PREVIOUSLY STORED AS ONE WORD.
C     THE FOLLOWING CODING FINDS ALL THE UNIQUE PERMUTATIONS OF THE
C     INTEGRAL LABELS AND CORRESPONDINGLY ADDS THE VARIOUS
C     CONTRIBUTIONS OF THE INTEGRAL TO THE F MATRIX.
C     CAUTION ** ONLY A SINGLE PERMUTATION OF THE INTEGRAL LABELS MAY
C     APPEAR IN THE INPUT - OTHERWISE ALL THE PERMUTATIONS ON THAT
C     INTEGRAL WILL BE ADDED TO THE F MATRIX MORE THAN ONCE.
C     I, J, K AND L ARE THE VARIOUS LABELS.
C     SEE PROGRAM SHLOUT (LINK 0306) FOR MORE DETAILS.
C
      IF(JA)30,200,40
C
C     TYPE 2 INTEGRALS ARE CLASSIFIED BY SINDX.
C
   30 JA=-JA
C?IBM/GLD/GBR/VAX/CDC
C     CALL UNPACK
C??
C?UNX
      CALL UNPACK (JA, I, J, K, L)
C??
      IF (USEOFF) GO TO 35
C     DO NOT USE OFFSETS.
      GO TO (101,101,101,131,141,151,161,210),SINDX
C     USE OFFSETS.
   35 GO TO (100,100,120,130,140,150,160,170),SINDX
C
C     ( AB I CD ) - TYPE 1 INTEGRAL.
C
C?IBM/GLD/GBR/VAX/CDC
C  40 CALL UNPACK
C??
C?UNX
   40 CALL UNPACK (JA, I, J, K, L)
C??
      IF (USEOFF) THEN
         I=I+IOFF
         J=J+JOFF
         K=K+KOFF
         L=L+LOFF
      END IF
      IF (IBMAP(I).NE.IBMAP(J) .OR. IBMAP(K).NE.IBMAP(L)) GO TO 280
      GO TO 210
C
C     ( AB I AC ) OR ( AB I BC ) OR ( AC I BC )
C
  100 P=P+IOFF
      Q=Q+JOFF
      R=R+LOFF
  101 IF (IBMAP(P).NE.IBMAP(Q) .OR. IBMAP(P).NE.IBMAP(R)) GO TO 280
      GO TO 210
C
C     ( AC I BC )
C
  120 P=P+IOFF
      Q=Q+JOFF
      R=R+KOFF
      GO TO 101
C
C     ( AB I AB ) OR ( AB I BB ) OR ( AA I AB )
C
  130 P=P+IOFF
      Q=Q+JOFF
  131 IF (IBMAP(P) .NE. IBMAP(Q)) GO TO 280
      GO TO 210
C
C     ( AA I BC )
C
  140 P=P+IOFF
      Q=Q+KOFF
      R=R+LOFF
  141 IF (IBMAP(Q) .NE. IBMAP(R)) GO TO 280
      GO TO 210
C
C     ( AB I CC )
C
  150 P=P+IOFF
      Q=Q+JOFF
      R=R+KOFF
  151 IF (IBMAP(P) .NE. IBMAP(Q)) GO TO 280
      GO TO 210
C
C     SINDX=6 ... 3 SUBCASES.
C
  160 P=P+IOFF
      Q=Q+LOFF
  161 IF (MINDX .NE. 2) GO TO 131
C
C     ( AA I BB )
C
      GO TO 210
C
C     ( AA I AA )
C
  170 P=P+IOFF
      GO TO 210
C
C     GET NEW ATOM OFFSET VALUES.
C
  200 JA=IX(M+1)
      IF (JA .EQ. 0) GO TO 290
C?IBM/GLD/GBR/VAX/CDC
C     CALL UNPACK
C??
C?UNX
      CALL UNPACK (JA, I, J, K, L)
C??
      IOFF=IAOFF(I)
      JOFF=IAOFF(J)
      KOFF=IAOFF(K)
      LOFF=IAOFF(L)
C
C     KEEP THIS INTEGRAL OR NEW ATOM OFFSET VALUES.
C
  210 IY(ICOUNT) = IX(M)
      IY(ICOUNT+1) = IX(M+1)
C?GLD/GBR/IBM/VAX/UNX
      IY(ICOUNT+2) = IX(M+2)
C??
      ICOUNT = ICOUNT + NWORDS
C
C     CHECK FOR A FILLED BUFFER.
C
      IF (ICOUNT .LT. 3073) GO TO 220
      CALL NWIOWR (IFORMT, IY, 3072, .TRUE., 'SECINT',
     1 IOP(1), *9000)
      ICOUNT = 1
C
C     PRINT IF NECESSARY, IGNORING NEW ATOM OFFSET VALUES.
C
  220 IF (IX(M) .EQ. 0) GO TO 280
      NTINTS = NTINTS + 1
      IF (IOP(33) .NE. 1) GO TO 280
      IV(1) = IX(M+1)
C?GLD/GBR/IBM/VAX/UNX
      IV(2) = IX(M+2)
C??
      IXP(IQ) = I
      JXP(IQ) = J
      KXP(IQ) = K
      LXP(IQ) = L
      XXP(IQ) = VALINT
      IQ = IQ + 1
      IF (IQ .LE. 4) GO TO 280
      WRITE (IOUT,1000) (IXP(IIP),JXP(IIP),KXP(IIP),LXP(IIP),XXP(IIP),
     1 IIP=1,4)
      IQ = 1
  280 CONTINUE
      GO TO 20
C
C     WRITE OUT FINAL BUFFER OF INTEGRALS TO UNIT IFORMT.
C
  290 REWIND ITWOEL
C
C     PRINT REMAINING INTEGRALS IF NECESSARY.
C
      IQ = IQ - 1
      IF (IOP(33).EQ.1 .AND. IQ.GT.0)
     1 WRITE (IOUT,1000) (IXP(IIP),JXP(IIP),KXP(IIP),LXP(IIP),XXP(IIP),
     2 IIP=1,IQ)
C
C     PLACE SEMI-FILLED BUFFER ON DISK OR TAPE, AND WAIT FOR I/O TO
C     COMPLETE.
C
      IY(ICOUNT) = 0
      IY(ICOUNT+1) = 0
C?IBM/GLD/GBR/VAX/UNX
      IY(ICOUNT+2) = 0
C??
      CALL NWIOWR (IFORMT, IY, 3072, .TRUE., 'SECINT',
     1 IOP(1), *9000)
C?GLD/IBM/CDC/VAX/UNX OMIT FOR GBR VERSION DUE TO RUN-TIME LIBRARY BUG.
      ENDFILE IFORMT
C??
      REWIND IFORMT
      IF (IOP(23) .EQ. 1) RETURN
      WRITE (IOUT,1020) NTINTS,IFORMT
      RETURN
C
C     ERROR EXIT - I/O ERROR READING/WRITING 2 ELECTRON INTEGRALS.
C
 9000 RETURN
      END
