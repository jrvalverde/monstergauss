C     GL0201A      14 JUL 88                                         MRP
C?IBM/GLD/GBR/VAX/UNX
      SUBROUTINE STDGEO
C??
C?CDC
C     PROGRAM STDGEO
C??
C=GEOMETRY INPUT
C CHAPTER 4: GEOMETRY INPUT.
C **********
C
C STANDARD GEOMETRY SETUP.
C ************************
C
C1INTRODUCTION
C     LINK 0201
C*
C     THIS PROGRAM ACCEPTS A CONDENSED FORM OF THE MOLECULAR CONNECTION
C     TABLE, WHICH INDICATES ALL THE BONDS AND THEIR TYPES, AND
C     CONSTRUCTS THE Z MATRIX FOR USE BY PROGRAM VGEOM. STANDARD BOND
C     LENGTHS AND ANGLES ARE ASSIGNED BASED ON THE LOCAL ATOM
C     ENVIRONMENTS, THEN ANY CHANGES REQUESTED BY THE USER ARE PROCESSED
C*
C     AUTHOR: MIKE PETERSON, U OF T CHEMISTRY DEPT, TORONTO, CANADA.
C*
C1STANDARD-GEOMETRY
C     ******************************************************************
C     INPUT REQUIRED TO BUILD A STANDARD GEOMETRICAL MODEL.
C     ******************************************************************
C*
C     NXPLCT (I4) ... THIS IS THE NUMBER OF ATOMS THAT HAVE BEEN
C     ASSIGNED EXPLICIT NUMBERS BY THE USER. ATOMS CONNECTED TO MORE
C     THAN ONE ATOM MUST BE GIVEN EXPLICIT NUMBERS, BUT MOST 'TERMINAL'
C     ATOMS NEED NOT BE ASSIGNED A NUMBER. THE EXPLICIT ATOMS WILL
C     APPEAR IN THE Z MATRIX IN NUMERICAL ORDER, AND THE REMAINDER ARE
C     NUMBERED IN THE ORDER THEY ARE ENCOUNTERED IN THE CONNECTION
C     TABLE (CT). THIS ENSURES THAT NO EXPLICIT ATOM EVER CHANGES ITS
C     POSITION (NUMBER) IN THE LIST OF ATOMS. THE FIRST ATOM IS ALWAYS
C     ATOM 1, SO NXPLCT MUST BE AT LEAST 1.
C     THE PROGRAM WILL HANDLE UP TO 30 ATOMS IN TOTAL.
C
C     SETTING NXPLCT TO A NEGATIVE NUMBER CAUSES A DUMP OF THE CONTENTS
C     OF THE STANDARD BOND LENGTH TABLES - ABOUT 30 PAGES OF OUTPUT.
C     A -1 DUMPS JUST THE BOND LENGTH TABLES, WHILE -2 DUMPS EXTRA
C     TABLES USED IN THE DERIVATION OF THE BOND LENGTH TABLES.
C     IT ALSO CAUSES AN ERROR TO BE SIGNALED (BY IOP(1)=-2) SO THE
C     "CALCULATION" THAT REQUESTED A DUMP IS TERMINATED IMMEDIATELY.
C     THUS THE INPUT NEED ONLY BE THE *MOL CARD WITH THE GEOM=SG OPTION,
C     2 BLANK CARDS (FOR TITLE AND THE CHARGE/MULTIPLICITY), THEN A -1
C     OR -2 FOR NXPLCT.
C*
C     THE NEXT NXPLCT CARDS CONTAIN THE ATOM CONNECTION INFORMATION.
C     EACH CARD HAS THE GENERAL FORM
C
C     SF TA TR TW TX TY TZ $N
C
C     WHILE THE SF FIELD MAY START IN COLUMN 1 OF THE CARD, ALL OTHER
C     FIELDS MUST BE PRECEEDED AND FOLLOWED BY AT LEAST ONE BLANK.
C
C     IN THE FIRST FIELD, S IS THE CHEMICAL SYMBOL FOR THIS ATOM (1 OR
C     2 LETTERS). F IS THE FORMAL CHARGE: + FOR POSITIVE, - FOR
C     NEGATIVE OR BLANK FOR ZERO.
C
C     THE $N FIELD IS DISCUSSED BELOW IN DETAIL.
C
C     THE REMAINING FIELDS ON THE CARD DEFINE THE CONNECTIONS TO THIS
C     ATOM. T IN EACH CASE IS THE TYPE OF BOND: - OR BLANK FOR SINGLE
C     BONDS, . FOR AROMATIC OR DELOCALIZED BONDS, = FOR DOUBLE BONDS
C     AND : FOR TRIPLE BONDS, BASED ON SIMPLE ELECTRON DOT DIAGRAMS.
C     A, R, W, X, Y AND Z MAY BE EITHER AN EXPLICIT ATOM NUMBER (FROM 1
C     UP TO NXPLCT), OR A CHEMICAL SYMBOL (1 OR 2 LETTERS). IN THE
C     LATTER CASE, AN ATOM NUMBER IS ASSIGNED, WORKING FROM 'A' TO 'Z',
C     STARTING WITH THE FIRST AVAILABLE Z MATRIX POSITION. ATOMS
C     DEFINED THIS WAY MUST BE TERMINAL ATOMS - THEY ARE BONDED ONLY TO
C     ATOM S.
C
C     A IS THE 'ATTACHMENT ATOM' - THE ATOM USED TO DEFINE THIS ATOM.
C     A MUST REFER TO AN ATOM *ALREADY DEFINED*, IE, THAT HAS AN
C     EXPLICIT ATOM NUMBER LOWER THAN THAT OF THE CURRENT ATOM (S).
C     THE ONLY EXCEPTION IS THE FIRST ATOM, WHERE A ALWAYS REFERS TO
C     ATOM NUMBER 2 (WHETHER ATOM 2 IS EXPLICITLY OR IMPLICITLY
C     DEFINED).
C
C     R IS THE 'REFERENCE ATOM' - THIS ATOM IS USED IN TWO WAYS:
C
C     (1) TO ORIENT ATOM S WITH RESPECT TO THE ATTACHMENT ATOM OF ATOM
C     A - THE ATTACHMENT ATOM OF THE CURRENT ATOM IS USED TO DEFINE
C     THE LOCAL VALENCE ANGLES, AND THE ATTACHMENT ATOM OF ATOM A
C     (DENOTED A(A)) DEFINES THE DIHEDRAL ANGLE R-S-A-A(A). THE DEFAULT
C     DIHEDRAL ANGLE IS 0 DEGREES (IE ECLIPSED), BUT THE ENTIRE GROUP
C     CAN BE ROTATED - SEE BELOW. THE ONLY EXCEPTIONS TO USING A(A) AS
C     THE FOURTH ATOM IN THE DIHEDRAL ANGLE ARE:
C     (I) IF S IS EITHER ATOM 1 OR 2, THEN THE REFERENCE ATOM R(A) IS
C     USED IN PLACE OF A(A) WHICH WOULD LEAVE THE GEOMETRY UNDEFINED,
C     SINCE A(A) IS SIMPLY ATOM S.
C     (II) AN EXPLICIT ATOM NUMBER TO BE USED IN PLACE OF A(A) WAS
C     SPECIFIED BY A FIELD $N ON THE CONNECTION CARD FOR ATOM A, WHERE
C     N IS THE ATOM NUMBER TO USE AS A(A). THIS SPECIAL FIELD IS
C     NEEDED WHENEVER THE ANGLE S-A-A(A) IS LINEAR.
C
C     (2) THE ATOM R IS THEN USED TO DEFINE THE DIHEDRAL ANGLES OF
C     ATOMS OTHER THAN A AND R (IE W, X, Y AND Z) CONNECTED TO S, WHICH
C     ARE ALWAYS DEFINED BY THE DIHEDRAL ANGLES W-S-A-R, X-S-A-R,
C     Y-S-A-R AND Z-S-A-R, REGARDLESS OF WHETHER A REPLACEMENT WAS
C     GIVEN FOR ATOM A BY THE $N OPTION ABOVE. THUS ROTATION OF ATOM R
C     CAUSES A RIGID ROTATION OF ALL ATOMS ATTACHED TO S.
C*
C     ******************************************************************
C     CONTROL CARDS TO REQUEST CHANGES IN THE STANDARD MODEL.
C     ******************************************************************
C*
C     THERE ARE TWO TYPES OF OPTION CARDS THAT MAY APPEAR AFTER THE
C     LAST CT CARD. THEY BOTH HAVE THE GENERAL FORM: CODE, I, J, A (IN
C     A4,2I4,F12.6 FORMAT) WHERE CODE IS 'ROTB', 'SETZ' OR '    '.
C     ROTB AND SETZ CARDS MAY BE USED AS OFTEN AS REQUIRED, IN ANY
C     ORDER. LEAVING THE CODE BLANK SIGNALS THE END OF THESE USER-
C     REQUESTED CHANGES (OR THAT NONE ARE REQUIRED).
C*
C     ROTB ... I AND J ARE ATOM NUMBERS WHICH WERE EXPLICITLY DEFINED.
C     THE I-J BOND IS ROTATED FROM ITS CURRENT POSITION BY A DEGREES
C     (COUNTERCLOCKWISE). THIS RESULTS IN RIGID ROTATION OF THE ENTIRE
C     GROUP ABOUT THE I-J BOND. NOTE: THE I-J BOND MUST HAVE BEEN USED
C     IN DEFINING THE GEOMETRY - IE I WAS GIVEN AS THE ATTACHMENT ATOM
C     FOR J (OR VICE VERSA) FOR THIS OPTION TO WORK.
C*
C     SETZ ... I IS THE *PARAMETER NUMBER* OF AN ELEMENT
C     IN THE Z MATRIX, WHICH IS SET TO A (SEE PROGRAM VGEOM FOR DETAILS
C     ON THE NUMBERING SCHEME USED FOR THE Z MATRIX ELEMENTS). THIS
C     OPTION MUST BE USED TO FILL IN INFORMATION ABOUT ATOMS NOT
C     INCLUDED IN THE STANDARD TABLES. THE FIELD J IS IGNORED.
C*
C     ******************************************************************
C     SPECIAL FEATURES AND NOTES.
C     ******************************************************************
C*
C     1  THE LOCAL GEOMETRY IS DETERMINED FROM THE 'NUMBER OF NEIGHBOUR
C     EQUIVALENTS' (NONE), THE SUM OF THE NUMBER OF NEIGHBOURING ATOMS
C     PLUS THE NUMBER OF LONE PAIRS. SINGLE ELECTRONS, WHICH ARISE IN
C     RADICALS AND AROMATIC/DELOCALIZED SYSTEMS, ARE IGNORED. ANY LONE
C     ELECTRON PAIRS ON A CENTER, FOUND BY SUBTRACTING THE TOTAL
C     NUMBER OF ELECTRONS IN THE BONDS FROM THE NUMBER OF VALENCE
C     ELECTRONS (ADJUSTED FOR THE FORMAL CHARGE) ARE PLACED AT THE END
C     OF THE CONNECTION TABLE - FOR EXPLICIT CONTROL OVER THE ORDERING
C     OF THE ATOMS AT A CENTER, THE DESIGNATION 'E*' IS USED TO INDICATE
C     THAT AN ELECTRON PAIR IS TO OCCUPY THIS POSITION ('E*' IS USED AS
C     R, W, X, Y OR Z). IT WILL APPEAR AS A DUMMY ATOM IN THE Z MATRIX
C     (WITH A BOND LENGTH OF 1.0 ANGSTROMS), BUT HAS ATOMIC NUMBER 56
C     INSIDE THE STDGEO PROGRAM.
C
C     2  THE CONFIGURATION AT A CENTER IS DETERMINED BY THE ORDER
C     THE NEIGHBOURS APPEAR IN THE CT. ATOM A DEFINES THE 'PRINCIPLE
C     AXIS', AND R DEFINES A REFERENCE POINT NOT LYING ON THE LINE S-A
C     (EXCEPT FOR TRI-ATOMICS, WHICH MAY BE LINEAR). FOR LINEAR VALENCE
C     ANGLES, THIS REQUIRES AN EXPLICIT DUMMY ATOM (SYMBOL 'X') DEFINED
C     AS R AND THE USE OF THE $N OPTION. THE DEFAULT CHARACTERISTICS OF
C     'X' ARE A BOND LENGTH OF 1.0 ANGSTROMS AND A BOND ANGLE (R-S-A)
C     OF 90 DEGREES. 'X' ATOMS HAVE ATOMIC NUMBER 55 INSIDE THE STDGEO
C     PROGRAM, BUT ARE REPLACED BY DUMMY ATOMS IN THE Z MATRIX.
C     WITH R AND A ESTABLISHED, THE REMAINING ATOMS ARE DEFINED BY
C     THEIR DIHEDRAL ANGLE (MEASURED COUNTERCLOCKWISE) FROM R, WHEN
C     LOOKING ALONG THE S-A BOND FROM S TOWARDS A.
C     FOR NONE=2 (LINEAR), THE ANGLE W-S-A IS 180 AND THE ANGLE W-S-A-R,
C     WHERE R IS X, IS ARBITRARY (IT IS SET TO 0).
C     FOR NONE=3 (TRIGONAL), THE VALENCE ANGLES R-S-A AND W-S-A ARE
C     120, AND THE ANGLE W-S-A-R IS 180 (W, S, A AND R PLANAR).
C     FOR NONE=4 (TETRAHEDRAL), THE VALENCE ANGLES ARE 109.47, AND THE
C     DIHEDRAL ANGLES W-S-A-R AND X-S-A-R ARE 120 AND 240.
C     FOR NONE=5 (TRIGONAL BIPYRAMIDAL), A IS TAKEN AS AXIAL, WITH R, W
C     AND X EQUATORIAL (VALENCE ANGLES OF 90 WITH A THROUGH S, AND
C     DIHEDRAL ANGLES W-S-A-R AND X-S-A-R OF 120 AND 240), AND Y
C     OCCUPIES THE REMAINING AXIAL POSITION.
C     FOR NONE=6 (OCTAHEDRAL), ATOMS R, W, X AND Y ARE "EQUATORIAL"
C     (THE W, X AND Y DIHEDRAL ANGLES ARE 90, 180 AND 270 WITH RESPECT
C     TO R), AND Z OCCUPIES THE OTHER "AXIAL" POSITION (ON THE
C     PRINCIPLE AXIS).
C     COORDINATION NUMBERS HIGHER THAN 6 CANNOT BE TREATED AS YET.
C     NOTE THAT WHILE 'E*' ATOMS ARE COUNTED IN THE DETERMINATION OF THE
C     LOCAL GEOMETRY, DUMMY ATOMS ARE NEVER COUNTED.
C     NOTE ALSO THAT THE SYMBOL 'D*' IS ACCEPTED BY THE PROGRAM
C     AS A DUMMY ATOM, ALTHOUGH THE SYMBOL 'X' IS TO BE PREFERRED.
C
C     3  THE LOCAL GEOMETRY MAY BE MODIFIED BY THE PRESENCE OF
C     NEIGHBOURING UNSATURATION - THE PRINCIPLE IS THAT IF CONJUGATION
C     OF AN ELECTRON PAIR WITH AN ADJACENT CENTER IS POSSIBLE, THE
C     GEOMETRY IS MODIFIED TO PERMIT IT. THIS MODIFICATION IS MADE ONLY
C     IF AT LEAST ONE ELECTRON PAIR WAS *NOT* DEFINED EXPLICITLY BY
C     THE USE OF 'E*', SINCE IF 'E*' IS EXPLICITLY INCLUDED IN THE CT,
C     THE PROGRAM ASSUMES IT WAS INCLUDED TO OBTAIN A DESIRED CONFORMER.
C     CURRENTLY, THIS IS IMPLEMENTED IN THE PROGRAM ONLY FOR THE CASE
C     NONE = 4 (TETRAHEDRAL), WHICH BECOMES TRIGONAL, BUT ONLY IF THERE
C     IS *ONLY 1* IMPLICIT ELECTRON PAIR ON THE ATOM - EG THE N ATOM IN
C     AN AMIDE.
C
C     4  BONDS BETWEEN ATOMS OF OPPOSITE FORMAL CHARGE HAVE THE BOND
C     ORDER INCREASED BY ONE TO DETERMINE THE STANDARD BOND LENGTH. IN
C     THIS REGARD, BONDS SUCH AS S, P, AS AND SE TO TERMINAL O, AND
C     PHOSPHORUS YLIDS, ARE BETTER TREATED WHEN CONSIDERED AS DOUBLE
C     BONDS RATHER THAN AS DATIVE BONDS, EVEN WITH THE CHARGE TRANSFER
C     CORRECTION. HOWEVER DATIVE BONDS SHOULD BE USED FOR FIRST ROW
C     ATOMS (EG N-OXIDES) WHICH CANNOT HAVE MORE THAN 4 ELECTRON PAIRS
C     IN THE VALENCE SHELL.
C
C     5  THE BOND LENGTH TABLES WILL TREAT ALL THE MAIN GROUP ATOMS
C     FROM H TO I, EXCLUDING THE TRANSITION METALS AND THE INERT GASES.
C     VALUES NOT KNOWN EXPERIMENTALLY ARE ESTIMATED FROM EITHER THE
C     MASTER TABLE OF SINGLE BOND LENGTHS, OR FROM COVALENT RADII, BY
C     THE USE OF MULTIPLYING FACTORS.
C
C     6  THE PROGRAM MAKES NO ATTEMPT TO SET STANDARD DIHEDRAL ANGLES,
C     ALTHOUGH IT IS IN PRINCIPLE SIMPLE, BECAUSE THIS COULD IMPLY THAT
C     THE CONFORMATION "SELECTED" BY THE STANDARD MODEL IS LIKELY TO BE
C     THE LOWEST IN ENERGY. HOWEVER, SOME BASIC RULES ARE:
C     (I) USE STAGGERED CONFORMATIONS FOR SINGLE BONDS BETWEEN
C     SATURATED ATOMS.
C     (II) USE ECLIPSED CONFORMATIONS FOR SINGLE BONDS WHEN EITHER END
C     IS UNSATURATED - IF ONE ATOM IS SATURATED, A BOND WILL ECLIPSE
C     THE UNSATURATION AT THE OTHER CENTER.
C     (III) CUMULATED SYSTEMS ARE ORTHOGONAL (STAGGERED) IF THE NUMBER
C     OF LINEAR ATOMS IS ODD (EG H2C=C=CH2), ELSE ECLIPSED.
C
C     7  ALTHOUGH IT IS NOT NECESSARY, CONSTRUCTION OF THE CT IS
C     EASIEST IF THE EXPLICIT ATOMS ARE NUMBERED SEQUENTIALLY ALONG
C     BRANCHES OF THE MOLECULAR BACKBONE, OR AROUND RINGS. THE CHOICE
C     OF ATOM R IS IMPORTANT - IT IS THE REFERENCE POINT FOR THE LOCAL
C     GEOMETRY, AND R *MUST* BE DEFINED *BEFORE* ANY ATOMS ATTEMPT TO
C     USE IT. THUS R CANNOT BE GIVEN IMPLICITLY (BY ITS SYMBOL) IF
C     THERE ARE ANY EXPLICIT NEIGHBOURS OF S OTHER THAN A, SINCE ALL
C     EXPLICIT ATOMS ARE DEFINED FIRST IN THE Z MATRIX (IN THE Z MATRIX
C     ATOMS MUST BE DEFINED WITH RESPECT TO ATOMS THAT HAVE ALREADY
C     BEEN DEFINED). THIS MAY REQUIRE SOME TERMINAL ATOMS TO BE GIVEN
C     EXPLICIT NUMBERS IN SOME MOLECULES (SEE THE USE OF 'X' IN LINEAR
C     MOLECULES) IF A TERMINAL ATOM IS USED AS R.
C
C     8  'X' AND 'E*' SHOULD NOT HAVE A BOND TYPE SPECIFIED (IF ONE IS,
C     IT IS IGNORED), AND MUST NEVER CARRY A FORMAL CHARGE.
C     'X' MAY BE USED ONLY EXPLICITLY, AS ATOM R FOR LINEAR CASES.
C*
C     ******************************************************************
C*
C2EXAMPLES
C     SOME EXAMPLES ARE GIVEN HERE TO CLARIFY, HOPEFULLY, THE ABOVE
C     GENERAL COMMENTS.
C*
C     1,2-DIFLUOROETHANE (TRANS CONFORMER).
C*
C        H      H
C        !      !
C     F--C(1)---C(2)--F
C        !      !
C        H      H
C
C     THE TWO CARBON ATOMS ARE GIVEN EXPLICIT NUMBERS (1 AND 2) SINCE
C     THEY ARE BONDED TO MORE THAN ONE OTHER ATOM. ON EACH CARBON, THE
C     F ATOM WILL BE USED AS THE 'REFERENCE ATOM' R. THE STANDARD
C     GEOMETRY INPUT IS THEN:
C
C        2
C     C   2   F   H   H
C     C   1   F   H   H
C     ROTB   1   2 180.0
C     (BLANK)
C
C     THE FIRST CARD SPECIFIES THAT 2 ATOMS HAVE EXPLICIT NUMBERS.
C     ON THE SECOND CARD: THE ATOM TYPE IS 'C', AND '2' IS THE SECOND
C     ATOM (THE OTHER CARBON). 'F' IS THE REFERENCE ATOM R, AND THERE
C     ARE ALSO TWO 'H' ATOMS. ALL BOND TYPES ARE SINGLE BY DEFAULT.
C     ON THE THIRD CARD: THE ATOM IS 'C', AND THE 'ATTACHMENT ATOM' A
C     IS '1', THE OTHER CARBON. ATOM R IS 'F', AND THERE ARE ALSO TWO
C     'H' ATOMS. ALL BOND TYPES ARE SINGLE BY DEFAULT.
C     THOSE TWO CARDS ARE SUFFICIENT TO DEFINE THE CIS CONFORMER, BUT
C     SINCE TRANS IS DESIRED, ROTATE BOND 1-2 BY 180 DEGREES. THE FOURTH
C     CARD PERFORMS THIS FUNCTION, AND THE FIFTH MEANS NO FURTHER
C     CHANGES ARE REQUIRED.
C*
C     DIBROMOHYDRAZINE (MESO ISOMER), WITH EXPLICIT USE OF THE ELECTRON
C     PAIRS TO CONTROL THE CONFORMATION.
C*
C         H      H
C         !      !
C     E*--N(1)---N(2)--E*
C         !      !
C         BR     BR
C
C        2
C     N    2   E*   -H  -BR
C     N    1   E*  -BR   -H
C     (BLANK)
C
C     HERE THE TWO N ATOMS ARE NUMBERED EXPLICITLY, AND THE ELECTRON
C     PAIRS 'E*' ARE USED AS ATOM R. ALL BOND TYPES '-' ARE EXPLICITLY
C     GIVEN, BUT COULD BE OMITTED.
C     AT N(1), THE 'ATTACHMENT ATOM' A IS 2, AND R IS E*. THE N HAS
C     NONE=4 (TETRAHEDRAL) - SO IF E* IS ABOVE THE PLANE OF THE PAPER,
C     THE H AND BR ARE BELOW. LOOKING ALONG THE N(1)-A BOND (IE THE
C     N(1)-N(2) BOND) FROM THE N(1) END, THE H HAS A DIHEDRAL ANGLE OF
C     120 DEGREES WITH THE 'REFERENCE ATOM' R (E*), AND THE BR DIHEDRAL
C     ANGLE IS 240 DEGREES (MEASURED COUNTERCLOCKWISE FROM R).
C     AT N(2), LOOKING ALONG THE N(2)-A BOND (A IS NOW 1), THE DIHEDRAL
C     ANGLES OF BR AND H WITH RESPECT TO R (E* ON 2) ARE NOW 120 AND
C     240 DEGREES. THUS, TAKING THE E*-E* DIHEDRAL ANGLE AS 0 (THE
C     DEFAULT), THE H ATOMS ARE ECLIPSED, AS ARE THE BR ATOMS. ONE OF
C     THE ENANTIOMERIC ISOMERS COULD BE OBTAINED BY SWITCHING THE ORDER
C     OF 'H' AND 'BR' ON ONE OF THE CT CARDS.
C*
C     BENZENE.
C*
C     ALTHOUGH NO DIAGRAM IS GIVEN, THE RING ATOMS ARE NUMBERED
C     CONSECUTIVELY AROUND THE RING, FROM '1' TO '6'.
C
C        6
C     C  .2  .6   H
C     C  .1  .3   H
C     C  .2  .4   H
C     C  .3  .5   H
C     C  .4  .6   H
C     C  .5  .1   H
C     (BLANK)
C
C     NOTE THE USE OF '.' AS THE BOND TYPE BETWEEN THE C ATOMS.
C     NOTE ALSO THAT THE 'H' ATOM COULD NOT BE USED AS ATOM R, SINCE W
C     WOULD THEN BE AN EXPLICITLY NUMBERED ATOM, TO BE DEFINED WITH
C     RESPECT TO R. BUT SINCE R IS AN IMPLICIT ATOM, IT IS DEFINED
C     *AFTER* ALL THE EXPLICIT ATOMS, AND THUS THE ANGLE W-S-A-R (USED
C     TO DEFINE W) IS UNDEFINED.
C     NO CHANGES ARE REQUIRED AS ALL DIHEDRAL ANGLES ARE 0 BY DEFAULT.
C*
C     METHYLACETYLENE - AN EXAMPLE OF A LINEAR MOLECULE.
C*
C        X(3)          H
C        !             !
C     H--C(1):::C(2)---C(4)--H
C                      !
C                      H
C
C        4
C     C  :2   3   H
C     C  :1   4      $3
C     X   1
C     C   2   H   H   H
C     (BLANK)
C
C     FOR C(1), A DUMMY ATOM X IS DEFINED (WITH THE DEFAULT VALENCE
C     ANGLE OF 90 DEGREES) SO THE LINEAR ATOMS ARE HANDLED PROPERLY.
C     NOTE THAT THE H ATOM IS DEFINED BY H-1-2-3, SO THE X REFERENCE
C     '3' MUST OCCUPY THE 'REFERENCE' POSITION R IN THE CT ENTRIES FOR
C     C(1). IT MUST BE GIVEN AN EXPLICIT NUMBER SINCE OTHER ATOMS GIVEN
C     EXPLICIT NUMBERS WILL USE IT FOR DIHEDRAL ANGLE DEFINITIONS, AND
C     HENCE IT MUST BE DEFINED *BEFORE* IT IS USED.
C     FOR C(2), THE SPECIAL FEATURE IS THE $3. ATOMS 3 AND 4 (X AND
C     C(4)) ARE DEFINED PROPERLY, AS IS THE H ON C(1).
C     HOWEVER, DEFINING THE 'REFERENCE ATOM' R ON C(4) WOULD NORMALLY
C     USE THE DIHEDRAL ANGLE H-4-2-1 (R-S-A-A(A)), WHICH IS UNDEFINED
C     SINCE 4-2-1 IS LINEAR. THE DIFFICULTY IS AVOIDED BY REPLACING
C     A(A), WHEN A IS 2, BY 3 (X). THE $3 ON CARD 2 PERFORMS THIS
C     SUBSTITUTION. THE H ATOM AND THE X WILL BE ECLIPSED.
C*
C     CO2-NO2 NITROFORMATE ANION - DELOCALIZED BONDS AND FORMAL CHARGES.
C*
C     O     O
C     !     !
C     C(1)--N(2)
C     !     !
C     O     O
C
C        2
C     C-  2  .O  .O
C     N   1  .O  .O
C     (BLANK)
C
C     THIS EXAMPLE ILLUSTRATES THE 2 MOST COMMON USES OF DELOCALIZED
C     BONDS, AND THE USE OF A FORMAL CHARGE. THE CO2(-) AND NO2 GROUPS
C     ARE ISOELECTRONIC (AS IS OZONE), AND ARE HANDLED THE SAME WAY:
C     EACH EXPLICIT ATOM HAS 2 DELOCALIZED BONDS TO O, PLUS A C-N BOND
C     PAIR. THE CARBOXYLATE CHARGE IS FORMALLY PRESENT ON THE C ATOM,
C     GIVING THE C AND N EACH 5 VALENCE ELECTRONS. EACH CENTRAL ATOM
C     HAS NONE=3 (TRIGONAL) SINCE THE C-N BOND PAIR USES 1 ELECTRON,
C     AND THE PAIR OF DELOCALIZED BONDS USES 3 ELECTRONS. THE REMAINING
C     ODD ELECTRON IS IGNORED.
C*
C     ******************************************************************
C*
C1OPTIONS
C     OPTIONS ... IOP()  THERE ARE NO OPTIONS USED BY THIS PROGRAM.
C*
C     ******************************************************************
C==
C*
C/
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA)
C##
      PARAMETER (NA= 36)
C###
      CHARACTER*1 ILINE,IBL,IBCHAR
      CHARACTER*4 IROTB,ISETZ,ZBL,ZIC
C
      COMMON /A/ IOP(99)
      COMMON /A/ NATOMS,ICHARG,MULTIP,IAN(NA),NAE,NBE,NE,NBASIS
      COMMON /A/ CD1(NA,3),CD2(4),ICD(401)
      COMMON/ZMAT/IZ(NA,4),BL(NA),ALPHA(NA),BETA(NA),IZDUM(52),
     2 ZDUM(3),LABELS(NA,3),IZMASS(NA),ZMASS(NA)
C
      COMMON/IO/IN,IOUT,IODUM(215)
C*
C     ILINE: CURRENT INPUT LINE.
C
C     COMMON /C201/ IS USED AS FOLLOWS:
C     IAA: A(A) NUMBERS - MODIFIABLE BY THE $N OPTION.
C     IFC: FORMAL CHARGE.
C     NONE: NUMBER OF NEIGHBOUR EQUIVALENTS.
C     NIMPEP: NUMBER OF IMPLICIT ELECTRON PAIRS.
C     NCT: NUMBER OF CONNECTIONS FOR THIS ATOM.
C     IATYPE: ATOM TYPE: 0 IS SATURATED, 1 IS AROMATIC, 2 IS DOUBLE
C     BONDED, 22 IS PAIR OF DOUBLE BONDS, 3 IS TRIPLE BONDED.
C     IZSET: ENSURES ALL Z MATRIX PARAMETERS ARE DEFINED.
C     ICT: CONNECTION TABLE ENTRIES.
C     IBT: BOND TYPES FOR EACH CONNECTION: 0 IS SINGLE, 1 IS AROMATIC,
C     2 IS DOUBLE AND 3 IS TRIPLE.
C
      COMMON/C201/IAA(NA),IFC(NA),NONE(NA),NIMPEP(NA),
     1 NCT(NA),IATYPE(NA),IZSET(3,NA),ICT(6,NA),IBT(6,NA)
C
      DIMENSION ICLASS(24,29),IBCHAR(4),NVAL(56),ILINE(72)
C
      EQUIVALENCE (IAA(1),ICLASS(1,1))
C
C     FORCE LOADING OF BLOCK DATA ROUTINE BD201.
C
      EXTERNAL BD201
C
C     SET MAXIMUM NUMBER OF CONNECTIONS.
C
      DATA MAXCON/6/
C
      DATA IBL/' '/,IROTB/'ROTB'/,ISETZ/'SETZ'/,ZBL/'    '/
      DATA IBCHAR/'-' , '.' , '=' , ':'/
C     SET NUMBER OF VALENCE ELECTRONS.
      DATA NVAL/1,2,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,10*0,3,4,5,6,
     1 7,8,1,2,10*0,3,4,5,6,7,8,0,0/
      DATA ZERO/0.0D0/,F90/90.0D0/,F120/120.0D0/,
     1 F180/180.0D0/,TWO/2.0D0/
      DATA PI/3.14159265358979D0/
C*
 1000 FORMAT(' STANDARD GEOMETRICAL MODEL ROUTINE')
 1010 FORMAT(/'0',I2,' EXPLICITLY NUMBERED ATOMS'//'0CONNECTION TABLE ',
     1 '(AS INPUT)'/)
 1020 FORMAT('0DUMP OPTION REQUESTED')
 1030 FORMAT('0NXPLCT =',I5,'  IS ILLEGAL')
 1040 FORMAT(72A1)
 1050 FORMAT(1X,72A1)
 1060 FORMAT(A4,2I4,F12.6)
 1070 FORMAT(1X,A4,2I4,F15.6)
 1080 FORMAT('0CONNECTION TABLE CARD IS BLANK')
 1090 FORMAT('0ATOM HAS TOO MANY CONNECTIONS (MAXIMUM IS',I2,')')
 1110 FORMAT('0',I3,' ATOMS DEFINED BUT MAXIMUM IS',I3)
 1120 FORMAT('1PLEASE IGNORE THE FOLLOWING ...')
 1130 FORMAT(1X,72A1/'0UNDERLINED CHARACTER(S) NOT RECOGNIZED OR USED ',
     1 'ILLEGALLY')
 1140 FORMAT('0NO ATTACHMENT ATOM GIVEN')
 1150 FORMAT(I4)
 1160 FORMAT('0BOND BETWEEN ATOM',I3,' AND ATOM',I3,' GIVEN DIFFERENT',
     1 ' TYPES IN ROWS',I3,' AND',I3)
 1170 FORMAT('0ATOM',I3,' REFERENCES ATOM',I3,' BUT NOT VICE VERSA')
 1180 FORMAT('0WARNING: ATOM',I3,' HAS INSUFFICIENT VALENCE ELECTRONS',
     1 ' FOR ALL THE BONDS')
 1190 FORMAT('0THE SUM OF THE FORMAL CHARGES MUST BE THE TOTAL CHARGE')
 1200 FORMAT('1CONNECTION TABLE (INTERNAL FORM)'//'0 N   AN   FC   ',
     1 'TYPE   NONE   A(A)',5X,'T A   T R   T W   T X   T Y   T Z'/)
 1210 FORMAT(1X,I2,2I5,I6,2I7,3X,6(3X,A1,I2))
 1220 FORMAT('0LEGEND: AN IS THE ATOMIC NUMBER, FC IS THE FORMAL ',
     1 'CHARGE, AND T IS THE BOND TYPE TO THE ATOMS A TO Z'/
     2 ' ATOM TYPE: 0 SATURATED, 1 AROMATIC/DELOCALIZED, 2 DOUBLE ',
     3 'BONDED, 22 PAIR OF DOUBLE BONDS, 3 TRIPLE BONDED'/)
 1230 FORMAT('0GEOMETRY AT ATOM',I3,' CHANGED FROM TETRAHEDRAL TO ',
     1 'TRIGONAL')
 1240 FORMAT('0FOR ATOM',I3,', THE ATTACHMENT ATOM A (A =',I3,') MUST ',
     1 'BE DEFINED BEFORE IT IS USED')
 1250 FORMAT('0FOR ATOM',I3,', THE REFERENCE ATOM R (R =',I3,') MUST ',
     1 'BE DEFINED BEFORE IT IS USED BY ATOM',I3)
 1260 FORMAT('0FOR ATOM',I3,', ATOM A(A) (A(A) =',I3,') MUST ',
     1 'BE DEFINED BEFORE IT IS USED BY ATOM',I3)
 1270 FORMAT('0BOND ANGLE',I3,2('-',I2),' NOT DEFINED FOR ATOM',I3)
 1280 FORMAT('0BOND LENGTH',I3,'-',I2,' NOT DEFINED FOR ATOM',I3)
 1290 FORMAT('0TORSION ANGLE',I3,3('-',I2),' NOT DEFINED FOR ATOM',I3)
 1300 FORMAT('0FOR ATOM 1, ATOM A MUST BE ATOM 2')
 1310 FORMAT('0FOR ATOM',I3,', DUMMY ATOMS PERMITTED ONLY AS ATOM R ',
     1 'AT LINEAR ATOMS')
 1320 FORMAT(/'0USER-REQUESTED CHANGES'/)
 1330 FORMAT('0FOR ROTB, I AND J MUST BE IN THE RANGE 1 TO NXPLCT')
 1340 FORMAT('0FOR ROTB, I IS NOT THE ATTACHMENT ATOM FOR J OR VICE ',
     1 'VERSA')
 1350 FORMAT('0FOR ROTB, I OR J IS A TERMINAL ATOM')
 1360 FORMAT('0ELEMENT I DOES NOT EXIST IN THE Z MATRIX')
 1370 FORMAT('1')
C*
      WRITE(IOUT,1000)
      READ(IN,1150)NXPLCT
      IF(NXPLCT)10,980,20
C     DUMP BOND LENGTH TABLES.
   10 WRITE(IOUT,1020)
      CALL SGDUMP(ICLASS,NXPLCT)
      WRITE(IOUT,1120)
      IOP(1)=-2
      RETURN
   20 IF(NXPLCT.GT.NA)GO TO 980
C     INITIALIZE.
      DO 30 I=1,NXPLCT
      IAA(I)=0
   30 IATYPE(I)=0
      NATOMS=NXPLCT
C     READ NXPLCT CONNECTION TABLE CARDS AND INTERPRET EACH ONE.
      WRITE(IOUT,1010)NXPLCT
      DO 200 N=1,NXPLCT
      READ(IN,1040)ILINE
      WRITE(IOUT,1050)ILINE
      NCON=0
C     GET SYMBOL FOR THIS ATOM.
      IST=1
      CALL GETCHR(ILINE,IST,INEXT,IBONDT,ISYM,INUM,ICH)
      IF(INEXT)930,35,40
C     CARD BLANK.
   35 WRITE(IOUT,1080)
      IOP(1)=-2
      RETURN
C     ENSURE A VALID SYMBOL (NOT A NUMBER) WAS FOUND.
   40 IF(IBONDT.NE.0.OR.ISYM.EQ.0.OR.INUM.NE.0)GO TO 920
      IF(ISYM.GT.54.AND.ICH.NE.0)GO TO 920
      IFC(N)=ICH
      IAN(N)=ISYM
C     GET ALL THE CONNECTIONS
   50 IST=INEXT
      CALL GETCHR(ILINE,IST,INEXT,IBONDT,ISYM,INUM,ICH)
      IF(INEXT)930,150,60
   60 IF(ICH.NE.0)GO TO 920
      IF(IBONDT.NE.43)GO TO 70
C     FOUND $N OPTION.
      IF(ISYM.NE.0.OR.INUM.EQ.0.OR.INUM.GT.NXPLCT.OR.IAA(N).NE.0)
     1 GO TO 920
      IAA(N)=INUM
      GO TO 50
C     THIS IS A NEW CONNECTION - IS IT A SYMBOL OR A NUMBER.
   70 IF(IBONDT.EQ.0.OR.ISYM.GT.54)IBONDT=11
      IBONDT=IBONDT-11
      IF(ISYM.NE.0)GO TO 80
C     NUMBER - ENSURE IT IS WITHIN RANGE.
      IF(INUM.EQ.0.OR.INUM.GT.NXPLCT)GO TO 920
      GO TO 90
C     SYMBOL GIVEN - ASSIGN IT AN ATOM NUMBER.
   80 IF(ISYM.EQ.55)GO TO 920
      NATOMS=NATOMS+1
      IF(NATOMS.GT.NA)GO TO 970
      INUM=NATOMS
      IAN(INUM)=ISYM
      IAA(INUM)=N
      IFC(INUM)=0
      NCT(INUM)=1
      IATYPE(INUM)=IBONDT
      ICT(1,INUM)=-N
      IBT(1,INUM)=IBONDT
C     COLLECT BOND AND ATOM TYPE INFORMATION.
   90 NCON=NCON+1
      IF(NCON.LE.MAXCON)GO TO 100
      WRITE(IOUT,1090)MAXCON
      IOP(1)=-2
      RETURN
  100 ICT(NCON,N)=-INUM
      IBT(NCON,N)=IBONDT
      IF(IBONDT.GT.IATYPE(N))IATYPE(N)=IBONDT
      GO TO 50
C     GOT ALL CT ENTRIES - SET IAA UNLESS $N OPTION USED.
  150 IF(NCON.GT.0)GO TO 160
C     ALLOW SINGLE ATOMS.
      IF(N.EQ.1.AND.NXPLCT.EQ.1)GO TO 200
      WRITE(IOUT,1140)
      IOP(1)=-2
      RETURN
  160 IF(IAA(N).EQ.0)IAA(N)=-ICT(1,N)
C     ENSURE ATOM A IS 2 FOR ATOM 1.
      IF(ICT(1,1).EQ.-2)GO TO 200
      WRITE(IOUT,1300)
      IOP(1)=-2
      RETURN
  200 NCT(N)=NCON
C     ENSURE CT IS SYMMETRICAL - LOOP OVER ALL ATOMS AND CHECK THE
C     BACK-REFERENCES. ALSO COMPLETE THE NONE AND NIMPEP TABLES.
      ICH=0
      DO 250 N=1,NATOMS
      I=IAN(N)
      NVN=NVAL(I)
      NV=NVN-IFC(N)
C     COUNT NUMBER OF AROMATIC BONDS IN NAROM, DOUBLE BONDS IN K.
      NAROM=0
      K=0
C     COLLECT THE FORMAL CHARGES.
      ICH=ICH+IFC(N)
C     GET EACH CONNECTION FROM THIS ATOM.
      NCON=NCT(N)
C     COUNT NUMBER OF DUMMY ATOM CONNECTIONS.
      NDUMMY=0
C     LOOK OUT FOR A SINGLE ATOM.
      IF(NCON.EQ.0)GO TO 237
      DO 230 I=1,NCON
      IB=IBT(I,N)
      IC=ICT(I,N)
      IF(IC.GT.0)GO TO 220
      IC=-IC
      ICT(I,N)=IC
C     LOOK IN CT ENTRIES OF ATOM IC FOR REFERENCE TO ATOM N.
      NCIC=NCT(IC)
      DO 210 J=1,NCIC
      JC=-ICT(J,IC)
      IF(JC.NE.N)GO TO 210
C     FOUND THE REFERENCE - SET IT POSITIVE.
      ICT(J,IC)=JC
C     ENSURE THE BOND TYPES ARE THE SAME.
      IF(IBT(J,IC).EQ.IB)GO TO 220
      WRITE(IOUT,1160)N,IC,N,IC
      IOP(1)=-2
      GO TO 220
  210 CONTINUE
C     ATOM N NOT FOUND IN ROW IC.
      WRITE(IOUT,1170)N,IC
      IOP(1)=-2
  220 IF(IB.EQ.2)K=K+1
C     COUNT THE NUMBER OF ELECTRONS USED BY THIS BOND.
      IF(IAN(IC).NE.55)GO TO 225
      NDUMMY=NDUMMY+1
C     ENSURE DUMMY ATOMS USED ONLY AS ATOM R.
      IF(I.EQ.2)GO TO 230
      WRITE(IOUT,1310)N
      IOP(1)=-2
      GO TO 230
  225 IF(IAN(IC).EQ.56)IB=2
      IF(IB.EQ.1)NAROM=NAROM+1
      IF(IB.EQ.0)IB=1
      NV=NV-IB
  230 CONTINUE
C     LOOK FOR A PAIR OF DOUBLE BONDS.
      IF(K.GT.1.AND.IATYPE(N).EQ.2)IATYPE(N)=22
C     USE 3 ELECTRONS FOR EACH PAIR OF AROMATIC/DELOCALIZED BONDS.
      NV=NV-NAROM/2
C     GET THE TOTAL NUMBER OF NEIGHBOUR EQUIVALENTS.
      IF(NVN.GT.0)GO TO 235
      NIMPEP(N)=0
      NONE(N)=0
      GO TO 250
  235 IF(NV.GE.0)GO TO 240
C     NOT ENOUGH VALENCE ELECTRONS.
      WRITE(IOUT,1180)N
  237 NV=0
C     IGNORE ODD ELECTRONS.
  240 NV=NV/2
      NIMPEP(N)=NV
      NONE(N)=NCON+NV-NDUMMY
  250 CONTINUE
      IF(ICH.EQ.ICHARG)GO TO 260
      WRITE(IOUT,1190)
      IOP(1)=-2
C     PRINT CT.
  260 WRITE(IOUT,1200)
      DO 290 N=1,NATOMS
      NCON=NCT(N)
      IF(NCON.GT.0)GO TO 270
      ILINE(1)=IBL
      K=1
      GO TO 290
  270 K = NCON
      DO 280 I=1,NCON
      IS=IBT(I,N)+1
  280 ILINE(I)=IBCHAR(IS)
  290 WRITE(IOUT,1210)N,IAN(N),IFC(N),IATYPE(N),NONE(N),IAA(N),
     1 (ILINE(I),ICT(I,N),I=1,K)
      WRITE(IOUT,1220)
      IF(IOP(1).NE.0)RETURN
C     FILL IN THE Z MATRIX.
      DO 320 N=1,NATOMS
C     CHECK FOR SATURATED TETRAHEDRAL LONE PAIRS THAT CAN CONJUGATE.
      IF(NONE(N).NE.4.OR.IATYPE(N).NE.0.OR.NIMPEP(N).NE.1)GO TO 310
      NCON=NCT(N)
      DO 300 I=1,NCON
      IS=ICT(I,N)
      IF(IATYPE(IS).EQ.0)GO TO 300
      WRITE(IOUT,1230)N
      NONE(N)=3
      GO TO 310
  300 CONTINUE
  310 BETA(N)=ZERO
      DO 320 I=2,4
      IZSET(I-1,N)=1
  320 IZ(N,I)=0
      IZ(1,1)=0
      BL(1)=ZERO
      ALPHA(1)=ZERO
      IF(NATOMS.EQ.1)GO TO 610
      ALPHA(2)=ZERO
      TETRA=TWO*DATAN(DSQRT(TWO))*F180/PI
      DO 600 N=2,NATOMS
C     GET BOND LENGTH.
      IS=ICT(1,N)
      IF(IS.LT.N)GO TO 400
C     ATTACHMENT ATOM IS ILLEGAL.
      WRITE(IOUT,1240)N,IS
      IOP(1)=-2
  400 IZ(N,1)=IS
      IB=IBT(1,N)
      CALL GETBL(N,IS,IB,BONDL)
      IF(BONDL.EQ.ZERO)IZSET(1,N)=0
      BL(N)=BONDL
      IF(N.EQ.2)GO TO 600
C     GET VALENCE ANGLE ALPHA, DETERMINED BY THE NONE AT IS.
      NIS=NONE(IS)
      IA=ICT(1,IS)
      IZ(N,2)=IA
      IF(NIS.LE.0)GO TO 420
      GO TO (420,430,440,450,460,470),NIS
  420 A=ZERO
      T=ZERO
      IF(IAN(N).EQ.55)GO TO 500
C     INDICATE ALPHA AND BETA AS MISSING IF NONE < 2.
      IZSET(2,N)=0
      IZSET(3,N)=0
      GO TO 500
C     NONE = 2.
  430 A=F180
      T=ZERO
      GO TO 500
C     NONE = 3.
  440 A=F120
      T=F180
      GO TO 500
C     NONE = 4.
  450 A=TETRA
      T=F120
      GO TO 500
C     NONE = 5.
  460 A=F90
      T=F120
      GO TO 500
C     NONE = 6.
  470 A=F90
      T=F90
C     SET DUMMY ATOM ANGLE ALPHA TO 90.
  500 IF(IAN(N).NE.55)GO TO 505
      A=F90
      IF(NIS.EQ.2)GO TO 505
      WRITE(IOUT,1310)IS
      IOP(1)=-2
      GO TO 600
  505 ALPHA(N)=A
      IF(N.EQ.3)GO TO 600
C     LOOK UP ATOM N IN THE CT ENTRIES FOR ATOM IS.
C     IF N IS ATOM R, USE TORSION ANGLE N-IS-IA-A(IA) (= R-S-A-A(A)),
C     ELSE USE N-IS-IA-R (= N-S-A-R).
      NCIC=NCT(IS)
      DO 510 I=1,NCIC
      IF(ICT(I,IS).EQ.N)GO TO 520
  510 CONTINUE
C     NO EXIT IS POSSIBLE THROUGH THE BOTTOM OF THE LOOP.
  520 IF(I.GT.2)GO TO 530
C     TORSION ANGLE R-S-A-A(A).
      IC=IAA(IA)
C     USE ATOM R(A) IF S IS 1 OR 2.
      IF(IS.LE.2)IC=ICT(2,IA)
      IZ(N,3)=IC
      IZSET(3,N)=1
      IF(IC.LT.N)GO TO 600
      IF(IS.LE.2)GO TO 535
      WRITE(IOUT,1260)IS,IC,N
      IOP(1)=-2
      GO TO 600
C     TORSION ANGLE N-S-A-R.
  530 IC=ICT(2,IS)
      IZ(N,3)=IC
      IF(IC.LT.N)GO TO 540
  535 WRITE(IOUT,1250)IS,IC,N
      IOP(1)=-2
      GO TO 600
C     GET ACTUAL DIHEDRAL ANGLE - LOOK FOR AXIAL CASES.
  540 IF(NIS.GE.5.AND.NIS.EQ.I)GO TO 550
      T=T*DFLOAT(I-2)
      GO TO 560
C     LINEAR AXIAL BOND.
  550 ALPHA(N)=F180
      T=ZERO
  560 BETA(N)=T
  600 CONTINUE
  610 IF(IOP(1).NE.0)RETURN
C     READ USER CHANGES.
      IST=0
      INEXT=5
      K=NATOMS+NATOMS-3
      N=K+NATOMS-3
      IF(NATOMS.EQ.2)N=1
  620 READ(IN,1060)ZIC,I,J,A
      IF(ZIC.EQ.ZBL)GO TO 800
      IF(IST.EQ.0)WRITE(IOUT,1320)
      IST=1
      WRITE(IOUT,1070)ZIC,I,J,A
      CALL UPPER (ZIC)
      IF(ZIC.NE.IROTB)GO TO 700
C     ROTB OPTION.
      IF(I.GT.0.AND.J.GT.0.AND.I.LE.NXPLCT.AND.J.LE.NXPLCT)GO TO 630
      WRITE(IOUT,1330)
      IOP(1)=-2
      RETURN
C     ENSURE I-J BOND DEFINED IN Z MATRIX, WITH I<J.
  630 IF(I.EQ.ICT(1,J))GO TO 640
      IC=I
      I=J
      J=IC
      IF(I.EQ.ICT(1,J))GO TO 640
      WRITE(IOUT,1340)
      IOP(1)=-2
      RETURN
C     ENSURE I AND J NOT TERMINAL ATOMS.
  640 IF(NCT(I).GT.1.AND.NCT(J).GT.1)GO TO 650
      WRITE(IOUT,1350)
      IOP(1)=-2
      RETURN
C     FIND WHICH REFERENCE ATOM HAS THE HIGHER NUMBER.
  650 IC=IAA(I)
      IF(J.LE.2)IC=ICT(2,I)
      JC=ICT(2,J)
      IF(IC.LT.JC)IC=JC
C     ROTATE ATOM IC BY A.
      BETA(IC)=BETA(IC)+A
      GO TO 620
  700 IF(ZIC.NE.ISETZ)GO TO 920
C     SETZ OPTION
      IF(I.GT.0.AND.I.LE.N)GO TO 720
      WRITE(IOUT,1360)
      IOP(1)=-2
      RETURN
  720 IF(I.GE.NATOMS)GO TO 730
C     BOND LENGTH.
      IC=I+1
      BL(IC)=A
      IZSET(1,IC)=1
      GO TO 620
  730 IF(I.GT.K)GO TO 740
C     BOND ANGLE.
      IC=I-NATOMS+3
      ALPHA(IC)=A
      IZSET(2,IC)=1
      GO TO 620
C     TORSION ANGLE.
  740 IC=I-K+3
      BETA(IC)=A
      IZSET(3,IC)=1
      GO TO 620
C     ENSURE Z MATRIX COMPLETELY DEFINED, AND ZERO ATOMIC MASSES.
  800 DO 830 N=1,NATOMS
      ZMASS(N) = ZERO
      IF(IZSET(1,N).NE.0)GO TO 810
      WRITE(IOUT,1280)N,IZ(N,1),N
      IOP(1)=-2
  810 IF(IZSET(2,N).NE.0)GO TO 820
      WRITE(IOUT,1270)N,IZ(N,1),IZ(N,2),N
      IOP(1)=-2
  820 IF(IZSET(3,N).NE.0)GO TO 830
      WRITE(IOUT,1290)N,IZ(N,1),IZ(N,2),IZ(N,3),N
      IOP(1)=-2
  830 IF(IAN(N).GT.54)IAN(N)=0
      WRITE(IOUT,1370)
      RETURN
C     CHARACTERS IN COLUMNS IST TO INEXT-1 ARE ILLEGAL.
  920 INEXT=INEXT-1
      GO TO 940
  930 INEXT=-INEXT
      IST=INEXT
  940 DO 950 I=1,72
  950 ILINE(I)=IBL
      DO 960 I=IST,INEXT
  960 ILINE(I)=IBCHAR(1)
      WRITE(IOUT,1130)ILINE
      IOP(1)=-2
      RETURN
C     TOO MANY ATOMS.
  970 WRITE(IOUT,1110)NATOMS,NA
      IOP(1)=-2
      RETURN
C     NXPLCT IS ILLEGAL.
  980 WRITE(IOUT,1030)NXPLCT
      IOP(1)=-2
      RETURN
      END
      SUBROUTINE GETCHR(ILINE,IST,INEXT,IBT,ISYM,INUM,ICH)
C*
C     THIS SUBROUTINE SEARCHES ILINE FOR THE NEXT 3 ADJACENT NON-BLANK
C     CHARACTERS, STARTING AT IST.
C     IST IS SET TO POINT TO THE FIRST CHARACTER OF THE FIELD.
C     INEXT POINTS TO THE POSITION AFTER THE CHARACTER GROUP FOUND, OR
C     IS SET TO 0 IF NO CHARACTERS FOUND. IF AN ILLEGAL CHARACTER IS
C     FOUND IN COLUMN N, INEXT IS SET TO -N.
C     IBT RETURNS THE BOND TYPE CODE NUMBER IN THE RANGE 11-14 (FOR -,
C     ., = OR :), OR 43 (FOR $), OR 0 IF NONE FOUND.
C     ISYM RETURNS THE ATOMIC NUMBER CORRESPONDING TO THE ATOMIC
C     SYMBOL IN THE FIELD, OR 0 IF NO SYMBOL FOUND.
C     INUM RETURNS THE EXPLICIT NUMBER FOUND, OR 0 IF NO EXPLICIT
C     NUMBER FOUND IN THIS FIELD.
C     ICH RETURNS THE FORMAL CHARGE (1 IS +, -1 IS -), OR 0 IF NOT
C     FOUND.
C*
      CHARACTER*1 ILINE,ICHAR,ZI,IBL
      DIMENSION ILINE(72),IC(4),ICHAR(69),ICODE(56)
      DATA ICHAR/
     1 '1', '2', '3', '4', '5', '6', '7', '8', '9',
     2 '0', '-', '.', '=', ':', 'A', 'B', 'C', 'D',
     3 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',
     4 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V',
     5 'W', 'X', 'Y', 'Z', '*', '+', '$', 'a', 'b',
     6 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',
     7 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',
     8 'u', 'v', 'w', 'x', 'y', 'z'/
      DATA ICODE/
     1 240,245,369, 65, 60, 90,420,450,180,425,421,397, 42,579,480,
     2 570,102, 48,330, 91,573,609,660,108,404,185,105,429,111,794,
     3 211,215, 49,575, 78,348,542,588,750,798,422,405,603,561,548,
     4 484, 37, 94,284,584,572,605,270,725,720,177/
      DATA IBL/' '/
C*
      IBT=0
      ISYM=0
      INUM=0
      ICH=0
      IC(1)=0
      IC(2)=0
      IC(3)=0
      IC(4)=0
      DO 10 INEXT=IST,72
      IF(ILINE(INEXT).NE.IBL)GO TO 30
   10 CONTINUE
      INEXT=0
      RETURN
C     ENSURE THAT A BLANK FOLLOWS THE FIELD IDENTIFIED.
   30 IST=INEXT
      LAST=INEXT+3
      DO 60 INEXT=IST,LAST
      IF(INEXT.GT.72)GO TO 90
      ZI=ILINE(INEXT)
      IF(ZI.EQ.IBL)GO TO 100
C     GET CODE NUMBER FOR THIS CHARACTER.
      DO 40 J=1,69
      IF(ZI.EQ.ICHAR(J))GO TO 50
   40 CONTINUE
      GO TO 80
C     CONVERT LOWER CASE TO UPPER CASE INTERNALLY.
   50 IF (J .GT. 43) J = J - 29
   60 IC(INEXT-IST+1)=J
C     AN EXIT THROUGH THE BOTTOM OF THE LOOP MEANS THE FIELD CONSISTED
C     OF 4 CHARACTERS, WHICH IS ILLEGAL.
      INEXT=-LAST
      RETURN
C     CHARACTER IN COLUMN INEXT NOT RECOGNIZED.
   80 INEXT=-INEXT
      RETURN
C     SCAN WENT OFF THE END OF THE CURRENT LINE - LAST LETTER NOT BLANK.
   90 INEXT=-72
      RETURN
C     IDENTIFY THE CHARACTERS FOUND - LOOK FOR BOND TYPE OR $.
  100 I=IC(1)
      N=1
      IF(I.LE.9)GO TO 200
      IF(I.GE.15.AND.I.LE.40)GO TO 130
      IF((I.GE.11.AND.I.LE.14).OR.I.EQ.43)GO TO 120
C     CHARACTER IN POSITION N IS ILLEGAL.
  110 INEXT=-(IST+N-1)
      RETURN
C     FOUND BOND TYPE IN FIRST POSITION OF FIELD.
  120 IBT=I
      I=IC(2)
      N=2
      IF(I.LE.9)GO TO 200
      IF(I.LT.15.OR.I.GT.40)GO TO 110
C     FOUND A LETTER IN POSITION N (N= 1 OR 2) OF THE FIELD.
C     CHECK IF POSITION N+1 IS ALSO A LETTER.
  130 I=30*(I-14)
      J=IC(N+1)
      IF(J.GE.15.AND.J.LE.41)GO TO 140
C     THE ATOMIC SYMBOL IS 1 LETTER.
      L=1
      GO TO 150
C     SYMBOL IS 2 LETTERS.
  140 L=2
      I=I+J-14
C     IDENTIFY THE ATOMIC SYMBOL - THE CODE IS 30*(C1-14)+(C2-14) WHERE
C     C1 AND C2 ARE THE CODE NUMBERS FOR LETTERS 1 AND 2 (TAKE C2=14 IF
C     THE SYMBOL HAS ONLY 1 LETTER). LOOK THE CODE UP IN THE CODE
C     DICTIONARY (ICODE).
C     ACCEPT 'D*' AS A DUMMY ATOM (AS WELL AS 'X').
  150 DO 160 J=1,56
      IF(I.EQ.ICODE(J))GO TO 170
  160 CONTINUE
      IF (I .EQ. 147) THEN
         J = 55
         GO TO 170
      END IF
      GO TO 110
  170 ISYM=J
C     LOOK FOR A FORMAL CHARGE - ONLY ASSOCIATED WITH SYMBOLS.
      N=N+L
      I=IC(N)
      IF(I.EQ.0)RETURN
      IF(I.NE.42)GO TO 180
C     CHARGE IS +.
      ICH=1
      GO TO 190
C     CHARGE IS EITHER - OR ILLEGAL.
  180 IF(I.NE.11)GO TO 110
      ICH=-1
C     ENSURE NEXT CHARACTER IS BLANK.
  190 N=N+1
      IF(IC(N).NE.0)GO TO 110
      RETURN
C     A NUMBER OR BLANK HAS BEEN FOUND IN POSITON N OF THE FIELD.
  200 IF(I.EQ.0)GO TO 110
      INUM=I
C     IS POSITION N+1 ALSO A NUMBER.
      N=N+1
      I=IC(N)
      IF(I.EQ.0)RETURN
      IF(I.GT.10)GO TO 110
C     SECOND NUMERAL FOUND - COLLECT TOTAL NUMBER IN INUM.
      IF(I.EQ.10)I=0
      INUM=10*INUM+I
C     CHECK THE NEXT CHARACTER - IT SHOULD BE BLANK.
      N=N+1
      IF(IC(N).NE.0)GO TO 110
      RETURN
      END
      SUBROUTINE GETBL(NN1,NN2,IBB,BL)
C*
C     THIS SUBROUTINE DETERMINES THE BOND LENGTH BL BETWEEN ATOMS NN1
C     AND NN2, OF TYPE IBB, FROM THE STANDARD TABLES.
C     DUMMY ATOMS AND LONE PAIRS ARE ASSIGNED A VALUE OF 1.0.
C     MISSING VALUES RETURN BL=0.0.
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA)
C##
      PARAMETER (NA= 36)
C###
      COMMON /A/ IOP(99),IC1(3),IAN(NA),IC2(4),CD1(NA,3),CD2(4),IC3(401)
      COMMON/C201/IAA(NA),IFC(NA),NONE(NA),NIMPEP(NA),
     1 NCT(NA),IATYPE(NA),IZSET(3,NA),ICT(6,NA),IBT(6,NA)
C
      COMMON /STRUCT/INDEX(54),ISGRP(29),IUGRP(29),ICOVAL(29),
     1 ICOVGP(29),MULFAC(9,11),LENGTH(29,29,10)
C     FILL OUT COMMON /C201/ WITH ARRAY ICLASS, AS IN SUBROUTINE STDGEO.
      DIMENSION ICLASS(24,29)
C
      EQUIVALENCE (IAA(1),ICLASS(1,1))
C*
      DATA ZERO/0.0D0/,ONE/1.0D0/,PT01/0.01D0/,PT005/0.005D0/
C*
C     GET ATOM TYPES.
      N1=NN1
      N2=NN2
      IT1=IATYPE(N1)
      IT2=IATYPE(N2)
      IF(IT1.GE.IT2)GO TO 10
      N1=NN2
      N2=NN1
      IT1=IATYPE(N1)
      IT2=IATYPE(N2)
   10 IAN1=IAN(N1)
      IAN2=IAN(N2)
      IF(IAN1.GT.54.OR.IAN2.GT.54)GO TO 900
      BL=ZERO
      I1=INDEX(IAN1)
      I2=INDEX(IAN2)
      IF(I1.EQ.0.OR.I2.EQ.0)RETURN
C     INCREASE THE BOND ORDER IF OPPOSITE FORMAL CHARGES.
      IB=IBB
      IF(IFC(N1)*IFC(N2).EQ.-1)IB=IB+1
      IF(IB.GT.3)IB=3
      NPASS=0
      I=IB+1
C     BRANCH DEPENDING ON THE BOND TYPE.
      GO TO (100,200,300,400),I
C     SINGLE BOND - ARE BOTH ATOMS UNSATURATED.
  100 IF(IT2.NE.0)GO TO 150
C     N2 IS SATURATED - GET TABLE NUMBER FROM IT1.
      IF(IT1.EQ.22)IT1=2
      NT=IT1+1
      GO TO 500
C     N2 IS UNSATURATED - USE TABLE 6 UNLESS BOTH ARE AROMATIC.
  150 NT=6
      IF(IT1.EQ.1.AND.IT2.EQ.1)NT=5
      GO TO 500
C     AROMATIC/DELOCALIZED BOND.
  200 NT=7
      GO TO 500
C     DOUBLE BOND - CHECK FOR A PAIR OF DOUBLE BONDS.
  300 NT=8
      IF(IT1.NE.22)GO TO 500
C     N1 HAS A PAIR OF DOUBLE BONDS - HOW ABOUT N2.
      NT=9
      IF(IT2.NE.22)GO TO 500
C     BOTH ATOMS HAVE A PAIR OF DOUBLE BONDS - LOOK THIS VALUE UP
C     TWICE IN THE TABLE SINCE THE TABLE IS ASYMMETRIC.
      NPASS=1
      GO TO 500
C     TRIPLE BOND.
  400 NT=10
C     USE I TO INDICATE THE SOURCE OF THIS BOND LENGTH.
  500 I=0
      IBL=LENGTH(I1,I2,NT)
      IF(IBL.GT.0)GO TO 600
C     NOT SPECIFIED IN TABLE NT - TRY MASTER TABLE.
      I=1
      IBL=LENGTH(I1,I2,1)
C     DETERMINE THE 'GROUP' FOR EACH ATOM FOR TABLE NT.
      IF(NT.GT.4)GO TO 510
C     N2 IS SATURATED.
      IBG=3*ISGRP(I1)+ISGRP(I2)+1
      GO TO 520
C     N2 IS UNSATURATED.
  510 IBG=3*IUGRP(I1)+IUGRP(I2)+1
  520 MUL=MULFAC(IBG,NT)
      IF(IBL.GT.0)GO TO 530
C     MASTER TABLE VALUE IS 0 ALSO - USE COVALENT RADII.
      I=2
      IBL=ICOVAL(I1)+ICOVAL(I2)
      IBG=3*ICOVGP(I1)+ICOVGP(I2)+1
      MULC=MULFAC(IBG,11)
      IF(I1.EQ.I2)MULC=1000
      IBL=(IBL*MULC+500)/1000
C     MULTIPLY BY MUL TO GET THE VALUE FOR TABLE NT.
  530 IBL=(IBL*MUL+500)/1000
  600 IF(NPASS-1)610,620,630
C     NORMAL EXIT - CONVERT FROM PM TO ANGSTROMS.
  610 BL=PT01*DFLOAT(IBL)
      RETURN
C     END OF FIRST PASS FOR TWO PAIR OF DOUBLE BOND ATOMS.
  620 ISAVE=I
      IBLSAV=IBL
      I=I1
      I1=I2
      I2=I
      NPASS=2
      GO TO 500
C     END OF SECOND PASS - USE THE MORE ACCURATE VALUE.
  630 IF(I-ISAVE)610,640,650
C     BOTH VALUES OF EQUAL ACCURACY - USE THE AVERAGE.
  640 BL=PT005*DFLOAT(IBL+IBLSAV)
      RETURN
C     FIRST VALUE MORE ACCURATE.
  650 BL=PT01*DFLOAT(IBLSAV)
      RETURN
C     'X' OR 'E*'.
  900 BL=ONE
      RETURN
      END
      SUBROUTINE SGDUMP(CLASS,ITYPE)
C
C     BOND LENGTH TABLE GENERATOR  (VERSION: 12 DEC 1985)
C
C     THIS PROGRAM DUMPS THE CONTENTS OF THE STANDARD GEOMETRY BOND
C     LENGTH TABLES, THEIR RATIOS TO THE MASTER TABLE, AND THE SUM OF
C     SQUARES OF THE DIFFERENCES BETWEEN THE TABLE VALUES AND THE
C     VALUES PREDICTED USING THE MULTIPLYING FACTORS.
C     IF ITYPE IS -1, JUST THE BOND LENGTH TABLES ARE DUMPED.
C
C     ARRAY DIMENSIONS:
C     NATOM IS THE NO OF ATOMS HANDLED (CURRENTLY 29).
C     LABEL IS THE ATOMIC SYMBOLS (NATOM).
C     L GETS A ROW OF THE TABLE (NATOM).
C     CODE GETS A BOND LENGTH ORIGIN SYMBOL (NATOM).
C     SUM AND KOUNT COLLECT RATIOS (3,3).
C     SYM IS A TABLE SYMMETRY FLAG (11).
C     CLASS GETS COVALENT RADIUS CLASSIFICATION COUNTS (24,NATOM).
C     T1,T2,T3,T4: TITLE INFORMATION (11).
C
      IMPLICIT INTEGER (A-Z)
C
      REAL AVE,FLOAT
C
      CHARACTER*2 LABEL,BLANK,STAR,AMPER,ZL,CODE
      CHARACTER*4 T1,T2,T3,T4
C
      COMMON /STRUCT/INDEX(54),ISGRP(29),IUGRP(29),ICOVAL(29),
     1 ICOVGP(29),MULFAC(9,11),LENGTH(29,29,10)
      COMMON/IO/IN,IOUT,IODUM(215)
C
      DIMENSION L(29),CODE(29),SUM(3,3),KOUNT(3,3),SYM(11),ZL(29)
      DIMENSION CLASS(24,29),LABEL(29),T1(11),T2(11),T3(11),T4(11)
C*
      DATA LABEL/'H ','LI','BE','B ','C ','N ','O ','F ','NA','MG','AL',
     1 'SI','P ','S ','CL','K ','CA','GA','GE','AS','SE','BR','RB','SR',
     2 'IN','SN','SB','TE','I '/
C     SYM IS A 0 IF TABLE IS SYMMETRICAL, 1 OTHERWISE.
      DATA SYM/0,1,1,1,0,0,0,0,1,0,0/,NATOM/29/
      DATA BLANK/'  '/,STAR/'* '/,AMPER/'& '/
      DATA T1/'  X0','  X1','  X2','  X3','  X1','XUNS','  X1','  X2',
     1 'X2,2','  X3','XCOV'/
      DATA T2/4*'0   ','1   ','UNS ','1   ',2*'2   ','3   ','COV '/
      DATA T3/6*'  SI','AROM',2*'  DO','  TR','COVA'/
      DATA T4/6*'NGLE','ATIC',2*'UBLE','IPLE','LENT'/
C*
      NPASS=3
      IF(ITYPE.EQ.-1)NPASS=1
      DO 20 N=1,11
C
C     N   BOND LENGTH TABLE PRODUCED
C
C     1   X(SATURATED) - Y(SATURATED) SINGLE BOND LENGTHS
C     2   X(AROMATIC/DELOCALIZED) - Y SINGLE BONDS
C     3   X(DOUBLE BONDED) - Y SINGLE BONDS
C     4   X(TRIPLE BONDED) - Y SINGLE BONDS
C     5   X(AROMATIC) - Y(AROMATIC) SINGLE BONDS
C     6   X(UNSATURATED) - Y(UNSATURATED) SINGLE BONDS
C     7   AROMATIC/DELOCALIZED BONDS
C     8   DOUBLE BONDS
C     9   X(PAIR OF DOUBLE BONDS) - Y DOUBLE BONDS
C     10  TRIPLE BONDS
C     11  BOND LENGTHS PREDICTED FROM THE COVALENT RADII
C
      DO 10 PASS=1,NPASS
      WRITE(IOUT,1000)N,T1(N),T2(N),T3(N),T4(N)
C     ON FIRST PASS (PASS=1) PRINT TABLE.
      IF(PASS.EQ.1)WRITE(IOUT,1010)
C     ON SECOND PASS (PASS=2) PRINT RATIOS.
      IF(PASS.EQ.2)WRITE(IOUT,1090)
C     ON THIRD PASS (PASS=3) PRINT DIFFERENCES.
      IF(PASS.EQ.3)WRITE(IOUT,1120)
      WRITE(IOUT,1020)LABEL
C     CHECK THAT SYMMETRICAL TABLES ARE IN FACT SYMMETRICAL.
      IF(PASS.NE.1)GO TO 200
      IF(SYM(N).EQ.1.OR.N.EQ.11)GO TO 420
      DO 400 I=1,29
      DO 400 J=1,I
      IF(LENGTH(I,J,N).EQ.LENGTH(J,I,N))GO TO 400
      WRITE(IOUT,1160)N,I,J
  400 CONTINUE
      GO TO 420
  200 DO 210 J=1,3
      DO 210 I=1,3
      SUM(I,J)=0
  210 KOUNT(I,J)=0
C     SKIP CONTROLS PRINTER SPACING.
  420 SKIP=2
      IF(N.EQ.11)GO TO 300
C     GENERATE TABLE.
      DO 30 I=1,NATOM
      K=IUGRP(I)
      IF(N.GE.1.AND.N.LE.4)K=ISGRP(I)
      IGRP=3*K+1
      K=K+1
      IL=ICOVAL(I)
      ICGRP=3*ICOVGP(I)+1
      DO 40 J=1,NATOM
      T=LENGTH(I,J,N)
      CODE(J)=BLANK
      IF(PASS.GE.2)GO TO 60
C     PASS 1.
      IF(T.GT.0)GO TO 40
C     BOND LENGTH IS ZERO - GENERATE FROM MASTER TABLE.
      T=LENGTH(I,J,1)
      CODE(J)=AMPER
      IF(T.GT.0)GO TO 50
C     MASTER BOND LENGTH IS ZERO, USE SUM OF COVALENT RADII.
      T=IL+ICOVAL(J)
      CODE(J)=STAR
C     USE NO MULTIPLYING FACTOR IF X=Y.
      IF(I.EQ.J)GO TO 50
      IJCGRP=ICGRP+ICOVGP(J)
      T=(T*MULFAC(IJCGRP,11)+500)/1000
   50 IJGRP=IGRP+IUGRP(J)
      IF(N.GE.1.AND.N.LE.4)IJGRP=IGRP+ISGRP(J)
      T=(T*MULFAC(IJGRP,N)+500)/1000
      GO TO 40
C     PASS 2 OR 3.
C     CALCULATE RATIO UNLESS ONE BOND LENGTH IS ZERO.
   60 TT=LENGTH(I,J,1)
      IF(T.GT.0.AND.TT.GT.0)GO TO 240
      T=0
      GO TO 40
  240 KK=IUGRP(J)
      IF(N.GE.1.AND.N.LE.4)KK=ISGRP(J)
      IF(PASS.EQ.2)GO TO 260
C     PASS 3.
      IJGRP=IGRP+KK
      T=T-((TT*MULFAC(IJGRP,N)+500)/1000)
      KK=KK+1
      IF(SYM(N).EQ.0.AND.K.EQ.KK.AND.I.GT.J)GO TO 40
      SUM(K,KK)=SUM(K,KK)+T*T
      GO TO 270
C     PASS 2.
  260 KK=KK+1
      T=(10000*T/TT+5)/10
      IF(SYM(N).EQ.0.AND.K.EQ.KK.AND.I.GT.J)GO TO 40
      SUM(K,KK)=SUM(K,KK)+T
  270 KOUNT(K,KK)=KOUNT(K,KK)+1
   40 L(J)=T
      IF(I.LT.SKIP)GO TO 250
      WRITE(IOUT,1050)
      SKIP=SKIP+7
  250 IF(PASS.EQ.1)WRITE(IOUT,1030)LABEL(I),(CODE(J),L(J),J=1,NATOM)
   30 IF(PASS.GE.2)WRITE(IOUT,1060)LABEL(I),L
      IF(PASS.GE.2)GO TO 220
C     PASS 1 - PRINT MULTIPLYING FACTORS.
      WRITE(IOUT,1040)
      IF(N.EQ.1)GO TO 20
   70 WRITE(IOUT,1070)N,(MULFAC(I,N),I=1,9)
      IF(N.LE.4)NN=1
      IF(N.GT.4.AND.N.LE.10)NN=2
      IF(N.EQ.11)NN=3
      WRITE (IOUT,1170)
      DO 80 I=1,3
      IGRP=I-1
      T=0
      DO 90 J=1,NATOM
      GO TO (150,160,180),NN
  150 IF(ISGRP(J).EQ.IGRP)GO TO 170
      GO TO 90
  160 IF(IUGRP(J).EQ.IGRP)GO TO 170
      GO TO 90
  180 IF(ICOVGP(J).NE.IGRP)GO TO 90
  170 T=T+1
      ZL(T)=LABEL(J)
   90 CONTINUE
   80 WRITE(IOUT,1080)IGRP,(ZL(J),J=1,T)
      GO TO 10
C     PASS 2 OR 3 - PRINT SUMS AND AVERAGES OF RATIOS OR DIFFERENCES.
  220 WRITE(IOUT,1100)
      DO 230 I=1,3
      K=I-1
      DO 230 J=1,3
      KK=J-1
      NN=KOUNT(I,J)
      IF(NN.EQ.0)NN=1
      T=(SUM(I,J)*10/NN+5)/10
  230 WRITE(IOUT,1110)K,KK,SUM(I,J),KOUNT(I,J),T
      IF(N.NE.11.OR.PASS.EQ.3)GO TO 10
      WRITE(IOUT,1000)N,T1(11),T2(11),T3(11),T4(11)
      WRITE(IOUT,1130)(I,I=860,1090,10)
      DO 330 I=1,NATOM
      NN=0
      T=0
      DO 340 J=2,23
      NN=NN+CLASS(J,I)
  340 T=T+CLASS(J,I)*J
      AVE=FLOAT(T)/NN
  330 WRITE(IOUT,1140)LABEL(I),(CLASS(J,I),J=1,24),AVE
      WRITE(IOUT,1150)
      GO TO 10
C     GENRATE TABLE 11.
  300 IF(PASS.NE.2)GO TO 100
      DO 310 J=1,NATOM
      DO 310 I=1,24
  310 CLASS(I,J)=0
  100 DO 110 I=1,NATOM
      IL=ICOVAL(I)
      K=ICOVGP(I)
      ICGRP=3*K+1
      K=K+1
      DO 120 J=1,NATOM
      T=IL+ICOVAL(J)
      IF(PASS.EQ.2)GO TO 140
      IJCGRP=ICGRP+ICOVGP(J)
      TT=(T*MULFAC(IJCGRP,11)+500)/1000
C     USE NO MULTIPLYING FACTOR IF X=Y.
      IF(I.EQ.J)TT=T
      IF(PASS.EQ.1)GO TO 120
C     PASS 3.
      T=LENGTH(I,J,1)
      IF(T.EQ.0)TT=0
      IF(T.EQ.0)GO TO 120
      TT=T-TT
      KK=ICOVGP(J)+1
      IF(K.EQ.KK.AND.I.GE.J)GO TO 120
      IF(I.GE.5.AND.I.LE.8.AND.J.GE.5.AND.J.LE.8)GO TO 120
      SUM(K,KK)=SUM(K,KK)+TT*TT
      GO TO 130
C     PASS 2.
  140 TT=(10000*LENGTH(I,J,1)/T+5)/10
      IF(TT.EQ.0)GO TO 120
      IF(I.GE.5.AND.I.LE.8.AND.J.GE.5.AND.J.LE.8)GO TO 120
C     PLACE RATIOS IN CATEGORIES FOR EACH ATOM INVOLVED.
      IF(I.GE.J)GO TO 350
      NN=(TT-861)/10+2
      IF(NN.LE.0)NN=1
      IF(NN.GT.24)NN=24
      CLASS(NN,I)=CLASS(NN,I)+1
      CLASS(NN,J)=CLASS(NN,J)+1
  350 KK=ICOVGP(J)+1
      IF(K.EQ.KK.AND.I.GE.J)GO TO 120
      SUM(K,KK)=SUM(K,KK)+TT
  130 KOUNT(K,KK)=KOUNT(K,KK)+1
  120 L(J)=TT
      IF(I.LT.SKIP)GO TO 110
      WRITE(IOUT,1050)
      SKIP=SKIP+7
  110 WRITE(IOUT,1060)LABEL(I),L
      IF(PASS.EQ.1)GO TO 70
      GO TO 220
   10 CONTINUE
   20 CONTINUE
      RETURN
 1000 FORMAT('1TABLE',I3,':  ',A4,' - Y',A3,2X,2A4,' BOND LENGTHS')
 1010 FORMAT('+',86X,'STANDARD BOND LENGTH TABLE (VER: 11 DEC 1978)')
 1020 FORMAT(/'0',6X,A2,4(3X,7(2X,A2))/)
 1030 FORMAT(1X,A2,2X,A1,I3,4(3X,7(A1,I3)))
 1040 FORMAT('0A * BEFORE AN ENTRY MEANS IT WAS DERIVED FROM THE ',
     1 'COVALENT RADII, A & FROM THE SINGLE BOND LENGTH TABLE')
 1050 FORMAT(1X)
 1060 FORMAT(1X,A2,2X,I4,4(3X,7I4))
 1070 FORMAT(/'0MULTIPLYING FACTORS FOR THIS TABLE (NO',I3,'):',10X,
     1 'Y ATOM GROUP'//52X,'0',6X,'1',6X,'2'//46X,'0',3(3X,I4)//
     2 32X,'X ATOM GROUP  1',3(3X,I4)//46X,'2',3(3X,I4)/)
 1080 FORMAT(' ATOMS IN GROUP',I2,':',29(1X,A2))
 1090 FORMAT('+',86X,'BOND LENGTH RATIOS')
 1100 FORMAT(/'0GROUP:  X  Y      SUM   COUNT   AVERAGE')
 1110 FORMAT('0',6X,2I3,I9,I7,I9)
 1120 FORMAT('+',86X,'DIFFERENCES')
 1130 FORMAT(/'0',55X,'CLASS CUTOFF RATIOS'//4X,24I5,'  AVERAGE'/)
 1140 FORMAT(1X,A2,24I5,F8.1)
 1150 FORMAT(/'0EACH CLASS CONTAINS ALL RATIOS GREATER THAN THE ',
     1 'PREVIOUS CUTOFF AND LESS THAN OR EQUAL TO THE PRINTED CUTOFF'/
     2 '0THE FIRST AND LAST CLASSES CONTAIN ALL RATIOS <=860 AND >1080'
     3 ,' RESPECTIVELY AND WERE NOT INCLUDED IN THE AVERAGE')
 1160 FORMAT(' TABLE',I3,' IS NOT SYMMETRICAL FOR I=',I3,' AND J=',I3)
 1170 FORMAT (1X)
      END
