C     GL0100B      13 AUG 91                                         MRP
C?IBM/GLD/GBR/VAX/UNX
      SUBROUTINE LNK1
C??
C?CDC
C     PROGRAM LNK1
C??
C     LINK 0101
C
C     --------------
C     U OF T VERSION
C     AUGUST 1991
C     --------------
C
C     COMMAND CARD INTERPRETER AND ROUTE GENERATOR.
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA, NB=#NB)
C##
      PARAMETER (NA= 36, NB=200)
C###
      PARAMETER (NA3=3*NA, NZ=NA3-6)
      PARAMETER (ZERO=0.0D0, ONE=1.0D0)
C     SET NUMBER OF *MOL CARD OPTIONS.
      PARAMETER (NOP=41)
C
      CHARACTER TITLE*72,IELEM*4,NAMES*8
      CHARACTER*1 IPRTC, IPUNC, ICOM, IEQ, ZNUM,
     1 IC1, IC2, IE1, IE2, ILINE, I1I, I2I, CARCON
      CHARACTER*2 MOL
      CHARACTER*4 ICODE, MACH, IC
      CHARACTER*60 IOPLAB
C
C=ROUTE GENERATION
C1COMMON-BLOCKS
C     USE OF COMMON /A/:
C*
C     THIS IS ONE OF FEW AREAS OF CORE STORAGE WHICH REMAINS STATIC
C     DURING THE OVERLAYING PROCESS.
C     THEREFORE IT CONTAINS ALL INFORMATION NECESSARY TO INITIATE
C     COMMUNICATIONS FROM ONE PROGRAM TO ANOTHER.
C*
C     THE VARIOUS BLOCKS OF STORAGE ARE EMPLOYED AS FOLLOWS:
C*
C     PERTAINING TO THE VARIOUS PROGRAM OPTIONS
C*
      COMMON /A/ IOP(99)
C*
C     IOP ... THE PROGRAM OPTIONS IOP(1) TO IOP(60) AND IOP(93) TO
C     IOP(99) AND
C     THE SPECIFICATION OF LINKS IOP(61) TO IOP(92)
C
C     IOP(1) TO IOP(12) AND IOP(93) TO IOP(99) ARE NOT CHANGED DURING
C     OPTION LOADING FOR EACH LINK AND CAN BE USED TO STORE OTHER
C     VALUES ... CURRENTLY:
C
C     IOP(1) IS USED TO INDICATE THAT THE NEXT JUMP ENCOUNTERED IN THE
C     EXECUTION OF THE ROUTE CARDS SHOULD BE SKIPPED (IF IOP(1)=1).
C     IF IOP(1)=0, ANY LOOPS ENCOUNTERED WILL BE EXECUTED.
C     IF IOP(1) IS NEGATIVE, THE EXECUTION OF THE CURRENT ROUTE IS
C     ABANDONED, AFTER PUNCHING THE DENSITY MATRIX IF IOP(1)=-1.
C     IF IOP(1)=-3, THE CURRENT BASIS SET IS PRINTED BEFORE THE RUN
C     IS ABORTED.
C     IF IOP(1)=2, ALL GROUP CARDS UP TO AND INCLUDING THE NEXT
C     JUMP DIRECTIVE ARE IGNORED.
C
C     IOP(2) IS NOT USED.
C
C     IOP(3) IS USED TO SPECIFY IF THE CALCULATION IS TO BE DONE
C     IN THE PRESENCE OF A FIELD.
C     IF IOP(3)=0 THERE IS NO EXTERNAL FIELD.
C     IF IOP(3)=1 THERE IS A UNIFORM EXTERNAL ELECTRIC FIELD PRESENT.
C     IF IOP(3)=2 THE CALCULATION IS TO INCLUDE SOLVENT EFFECTS (SCRFT).
C
C     IOP(4) IS USED BY THE MOROKUMA ENERGY DECOMPOSITION AND/OR
C     COUNTER-POISE BASIS SET SUPERPOSITION ERROR CORRECTION.
C     IF IOP(4) IS 0, THEN NEITHER OF THESE OPTIONS IS IN EFFECT.
C
C     IOP(5) IS THE GEOMETRY INPUT CODE: 0 FOR FREE, 1 FOR ZMAT, 2 FOR
C     DIRECT INPUT IN ANGSTROMS, 3 FOR DIRECT INPUT IN ATOMIC UNITS.
C
C     IOP(6) IS THE BASIS SET: 0 FOR STO-NG, 1 FOR N-21G, 2 FOR N-31G,
C     3 FOR PULAY N-21G, 4 FOR N-311G, 7 FOR A GENERAL BASIS.
C
C     IOP(7) IS FOR D/F FUNCTIONS: 0 FOR NONE, 1 IF THE BASIS SET MAY
C     CONTAIN D OR F FUNCTIONS.
C
C     IOP(8) IS THE D/F FUNCTION TYPE: 0 FOR CARTESIAN 6D/10F ORBITALS,
C     1 FOR PURE 5D/7F ORBITALS. ONLY USED IF IOP(7) IS NON-ZERO.
C
C     IOP(9) IS THE SCF METHOD: 0 FOR CLOSED SHELL RHF, 1 FOR OPEN
C     SHELL UHF, 2 FOR OPEN SHELL RHF.
C
C     IOP(10) IS THE RUN TYPE: 0 FOR CHECK RUNS, 1 FOR SINGLE
C     CALCULATIONS, 2 FOR Z MATRIX OPTIMIZATIONS, 3 FOR SIMULTANEOUS
C     OPTIMIZATIONS, 4 FOR SURFACE SCANS AND 5 FOR PMO RESTARTS.
C
C     IOP(11) IS NORMALLY ZERO, BUT IS SET TO 1 FOR RHF OPEN SHELL
C     SHELL SINGLET CASES.
C
C     IOP(12) IS NOT USED.
C
C     IOP(13) TO IOP(60) ARE USED FOR THE INDIVIDUAL LINK OPTIONS.
C
C     IOP(61) TO IOP(92) ARE USED TO CONTROL WHAT LINKS ARE CALLED.
C
C     IOP(93) IS USED IN GROUPS 3 AND 4 AT THE START OF A CALCULATION
C     TO PASS THE NUMBER OF BASIS FUNCTIONS IN THE BASIS SET TO BE
C     PROJECTED.
C     IT IS ALSO USED IN GROUP 9 TO PASS THE NUMBER OF TRANSFORMED MO.
C     IT IS ALSO USED TO PASS THE PRINT TIMING DATA FLAG BETWEEN
C     LINK 0101 AND ROUTINE CHAIN.
C
C     IOP(94) KEEPS TRACK OF THE ORIGIN OF THE LAST TOTAL ENERGY
C     (VARIABLE E3 IN COMMON /GEN/): A 0 MEANS THE ENERGY IS FROM
C     AN SCF CALCULATION (CLOSED SHELL, UHF, RHF, MC-SCF OR GVB),
C     A 1 MEANS THE ENERGY IS FROM A CI-SD (CI SINGLES AND DOUBLES)
C     CALCULATION, AND A 2 MEANS THE ENERGY IS FROM A CI-SDQ (CI
C     SINGLES, DOUBLES AND QUADRUPLES) CALCULATION.
C     NOTE: AT PRESENT, ONE ELECTRON PROPERTIES ARE ONLY AVAILABLE
C     AT THE SCF LEVEL.
C
C     IOP(95) TO IOP(99) ARE NOT USED.
C*
C     TO THE PARTICULAR MOLECULE AT HAND
C
      COMMON /A/ NATOMS,ICHARG,MULTIP,IAN(NA),NAE,NBE,NE,NBASIS,C(NA,3)
C
C     NATOMS ... NUMBER OF ATOMS.
C     ICHARG ... CHARGE ON THE MOLECULE.
C     MULTIP ... SPIN MULTIPLICITY OF THE MOLECULE:
C     1 = SINGLET
C     2 = DOUBLET
C     AND SO FORTH.
C     IAN ... ATOMIC NUMBERS OF THE ATOMS.
C     NAE ... NUMBER OF ELECTRONS WITH ALPHA SPIN.
C     NBE ... NUMBER OF ELECTRONS WITH BETA SPIN.
C     NE ... TOTAL NUMBER OF ELECTRONS  ( NAE + NBE ).
C     NBASIS ... NUMBER OF BASIS FUNCTIONS (ATOMIC ORBITALS) EMPLOYED.
C     C ... COORDINATES OF THE MOLECULE.
C*
C     SPECIFYING VARIOUS CONVERSION FACTORS:
C*
      COMMON /A/ ANTOAU,DCONST,FCONV,FCCONV
C*
C     ANTOAU ... CONVERTS ANGSTROMS TO ATOMIC UNITS
C     DCONST ... CONVERTS DIPOLE MOMENT IN ATOMIC UNITS TO DEBYES
C     FCONV ... CONVERTS FORCES IN HARTREE/BOHR TO MDYNE
C     FCCONV ... CONVERTS FORCE CONSTANTS IN HARTREE/ANGSTROM**2 TO
C                MDYNE/ANGSTROM
C*
C     PERTAINING TO THE GROUP STRUCTURE:
C*
      COMMON /A/ LNK(100),NLINK,JOP(10,30)
C*
C     LNK ... CODED SEQUENCE OF LINKS AND JUMPS TO BE FOLLOWED.
C     NLINK ... COUNTER FOR LNK.
C     JOP ... OPTIONS FOR THE ENTIRE RUN STORED IN COMPRESSED FORM.
C*
C==
C1
C     USE OF COMMON /ZMATC/:
C
C     TITLE: 72 CHARACTER TITLE FOR THIS CALCULATION.
C     IELEM: 4 CHARACTER ATOM LABELS FROM THE Z MATRIX.
C     NAMES: 8 CHARACTER VARIABLE NAMES FROM THE Z MATRIX.
C
      COMMON/ZMATC/TITLE,IELEM(NA),NAMES(NZ)
C*
C     USE OF COMMON/GEN/:
C*
C     E1 ... NUCLEAR REPULSION ENERGY (HARTREES).
C     E2 ... ELECTRONIC ENERGY (HARTREES).
C     E3 ... TOTAL ENERGY (HARTREES).
C     E(3) ... USED BY VGEOM (LINK 0202) FOR Z MATRIX OPTIMIZATION.
C     DCONV ... DENSITY MATRIX CONVERGENCE FROM LAST S.C.F.
C     SPIN(2) ... SPIN EIGENVALUES (S IN SPIN(1), S(S+1) IN SPIN(2)).
C     FIELD(3) ... THE X,Y,Z COMPONENTS OF THE FIELD FOR UNIFORM
C     ELECTRIC FIELD CALCULATIONS (IN ATOMIC UNITS).
C     FE ... COUPLING CONSTANT FOR SELF CONSISTENT REACTION FIELD.
C     EMOL ... TOTAL ENERGY OF THE MOLECULE IN THE SOLVENT (HARTREES).
C     ESOL ... POLARIZATION ENERGY OF THE SOLVENT (HARTREES).
C     DPOLE(4) ... THE X,Y,Z, AND TOTAL DIPOLE MOMENTS (DEBYES).
C     VCM ... CONVERTS ATOMIC UNITS OF ELECTRIC FIELD TO VOLTS/CM.
C
      COMMON/GEN/E1,E2,E3,E(3),DCONV,SPIN(2),FIELD(3),FE,EMOL,ESOL,
     1 DPOLE(4),VCM
C*
      COMMON/IO/IN,IOUT,IPUNCH,IODUM(214)
C?GLD/GBR
C     COMMON /GLDDATA/ MYID(12)
C??
C     THE FOLLOWING PERTAIN TO THE INTERPRETATION OF THE CONTROL CARDS.
C
      DIMENSION MOL(NOP),IOVER(21),IP(92,21),ICODE(5),ZNUM(9)
      DIMENSION ILINE(68),NUMBER(21),JUMP(21),IFOUND(NOP),IPRT(10)
      DIMENSION IPUN(10),IPRTC(8),IPUNC(4)
      DIMENSION MAXLNK(9),ISEG(21)
C
C     SAVE FUNDAMENTAL CONSTANTS FOR LATER USE (SEE DEFINITIONS BELOW).
C
C     FUNCON( 1) = A0
C     FUNCON( 2) = HBAR
C     FUNCON( 3) = EMASS
C     FUNCON( 4) = ECHARG
C     FUNCON( 5) = AVOGAD
C     FUNCON( 6) = CAL
C     FUNCON( 7) = EV
C     FUNCON( 8) = CM
C     FUNCON( 9) = CC
C     FUNCON(10) = TOKCAL CONVERSION FACTOR
C     FUNCON(11) = TOKJ CONVERSION FACTOR
C     FUNCON(12) = 0.0
C     FUNCON(13) = 0.0
C     FUNCON(14) = 0.0
C     FUNCON(15) = 0.0
C     FUNCON(16) = 0.0
C     FUNCON(17) = 0.0
C     FUNCON(18) = 0.0
C     FUNCON(19) = 0.0
C     FUNCON(20) = 0.0
C
      DIMENSION FUNCON(20)
C*
      EQUIVALENCE (ILINE(1),TITLE(5:5))
C
C     *MOL CARD OPTIONS.
C
C     OPT NUM       CODE     OPTION
C     -------       ----     -------------------------------------------
C        1           CH      CHECK
C        2           GE      GEOMETRY
C        3           SS      SURFACE SCAN
C        4           BA      BASIS SET
C        5           DF      D/F ORBITALS
C        6           GU      INITIAL GUESS
C        7           UH      UHF SCF
C        8           RH      RHF/MC-SCF/GVB SCF
C        9           GO      GEOMETRY OPTIMIZATION
C       10           BO      BASIS SET OPTIMIZATION
C       11           ME      OPTIMIZATION METHOD
C       12           DM      DIPOLE MOMENT
C       13           LM      LOCALIZED MO
C       14           SI      SIZE OF LMO
C       15           OE      ONE ELECTRON PROPERTIES
C       16           PM      PERTUBATIONAL MO ANALYSIS
C       17           FO      FORCE
C       18           FP      FIRST POINT
C       19           RE      RESTART
C       20           NP      NO PRINT (Z MATRIX OPT)
C       21           CI      CONFIGURATION INTERACTION
C       22           AC      ALTERATION OF CONFIGURATION
C       23           CO      SCF CONVERGENCE OPTIONS
C       24           MR      MRD-CI LINK
C       25           AM      ATOMIC MASS SELECTION
C       26           FI      EXTERNAL FIELD
C       27           RI      RING
C       28           PO      POLARIZABILITY
C       29           1P      ROW 1 POLARIZATION FUNCTIONS
C       30           2P      ROW 2 POLARIZATION FUNCTIONS
C       31           3P      ROW 3 POLARIZATION FUNCTIONS
C       32           4P      ROW 4 POLARIZATION FUNCTIONS
C       33           5P      ROW 5 POLARIZATION FUNCTIONS
C       34           1D      ROW 1 DIFFUSE FUNCTIONS
C       35           2D      ROW 2 DIFFUSE FUNCTIONS
C       36           3D      ROW 3 DIFFUSE FUNCTIONS
C       37           4D      ROW 4 DIFFUSE FUNCTIONS
C       38           5D      ROW 5 DIFFUSE FUNCTIONS
C       39           ED      MOROKUMA ENERGY DECOMPOSITION
C       40           BS      BASIS SET SUPERPOSITION ERROR CORRECTION
C       41           FR      FREQUENCY CALCULATION
C
      DATA MOL /
     1 'CH', 'GE', 'SS', 'BA', 'DF', 'GU', 'UH', 'RH', 'GO', 'BO',
     2 'ME', 'DM', 'LM', 'SI', 'OE', 'PM', 'FO', 'FP', 'RE', 'NP',
     3 'CI', 'AC', 'CO', 'MR', 'AM', 'FI', 'RI', 'PO', '1P', '2P',
     4 '3P', '4P', '5P', '1D', '2D', '3D', '4D', '5D', 'ED', 'BS',
     5 'FR'/
C
      DATA IOVER /2, 3, 4, 5, 6, 8, 9, 7, 2, 3, 5, 6, 8, 9, 7, 2, 3, 6,
     1 8, 9, 7/
      DATA ICODE /'*MOL', '*PRT', '*PUN', '*IOP', '*CON'/
      DATA IPRTC /'C', 'D', 'G', 'P', 'M', 'I', 'T',
     1 'B'/
      DATA IPUNC /'C', 'D', 'L', 'Z'/
      DATA ICOM /','/, IEQ /'='/
      DATA ZNUM /'1', '2', '3', '4', '5', '6', '7', '8', '9'/
C     NUMBER OF CHARACTERS PER COMMAND LINE.
      DATA NMAX /68/
C     NUMBER OF FUNDAMENTAL CONSTANTS IN ARRAY FUNCON.
      DATA NFCON /20/
C*
C     MAXLNK CONTAINS THE LARGEST LINK NUMBER FOR EACH GROUP
      DATA MAXLNK /0, 2, 11, 3, 7, 3, 11, 3, 7/
C*
C     LMAX IS LENGTH OF ARRAY LNK
      DATA LMAX /100/
C*
C     FUNDAMENTAL CONSTANTS (REF: E.R. COHEN AND B.N. TAYLOR,
C     J. PHYS. CHEM. REF. DATA 2, 663 (1973) )
C
C     A0: BOHR RADIUS IN METERS.
C     HBAR: PLANCK'S CONSTANT IN J*SECONDS.
C     EMASS: ELECTRON REST MASS IN KG.
C     ECHARG: ELEMENTARY CHARGE IN ESU.
C     ECOUL: ELEMENTARY CHARGE IN COULOMBS.
C     AVOGAD: AVOGADRO'S NUMBER IN PARTICLES/MOLE.
C     CAL: CONVERTS CALORIES TO JOULES.
C     EV: CONVERTS ELECTRON VOLTS TO JOULES.
C     CM: CONVERTS EV TO WAVENUMBERS.
C     CC: SPEED OF LIGHT IN METERS/SECOND.
C*
      DATA A0/0.52917706D-10/,HBAR/1.0545887D-34/,EMASS/9.109534D-31/,
     1 ECHARG/4.803242D-10/,AVOGAD/6.022045D23/,CAL/4.184D0/,
     2 EV/1.6021892D-19/,CM/8065.479D0/,ECOUL/1.6021892D-19/,
     3 CC/2.99792458D8/
      DATA TEN20/1.0D20/,TEN18/1.0D18/,TEN10/1.0D10/,TEN8/1.0D8/,
     1 TENM3/1.0D-3/,TEN2/1.0D2/
C?GLD
C     DATA MACH/'GLD '/
C??
C?GBR
C     DATA MACH/'GBR '/
C??
C?IBM
C     DATA MACH/'IBM '/
C??
C?CDC
C     DATA MACH/'CDC '/
C??
C?VAX
C     DATA MACH/'VAX '/
C??
C?UNX
      DATA MACH/'UNX '/
C??
 1000 FORMAT(A72)
 1010 FORMAT('1',A72/1X,72('-'))
 1020 FORMAT(1X,A72)
 1030 FORMAT(/'0SEQUENCE    GROUP',5X,'MG OPTIONS',9X,
     1 'GROUP OPTIONS (USER CONTROLLABLE)',18X,'LINKS TO BE CALLED',
     2 10X,'JUMP'/)
 1040 FORMAT(1X,I5,I10,6X,12I1,1X,48I1,3X,32I1,I6)
 1050 FORMAT('0WE LEARN WISDOM FROM FAILURE MUCH MORE THAN FROM ',
     1 'SUCCESS, WE DISCOVER WHAT WILL DO BY'/' FINDING OUT WHAT WILL ',
     2 'NOT DO, AND HE WHO NEVER MADE A MISTAKE NEVER MADE A ',
     3 'DISCOVERY.')
 1060 FORMAT(/'0CONVERSION FACTORS:  1 BOHR =',F11.8,' ANGSTROMS'/'0',
     1 21X,'1 HARTREE/BOHR =',F10.7,' MDYNE'//22X,'1 HARTREE/ANGSTROM**'
     2 ,'2 =',F10.7,' MDYNE/ANGSTROM'//22X,'1 ELECTRON*BOHR =',F10.7,
     3 ' DEBYE'//22X,'1 HARTREE/PARTICLE =',F10.5,' KCAL/MOL =',F10.4,
     4 ' KJ/MOL =',F10.6,' EV/PARTICLE =',F10.2,' CM(-1)/PARTICLE'//
     5 22X,'1 ATOMIC UNIT OF ELECTRIC FIELD =',1PD14.7,' VOLTS/CM')
 1070 FORMAT(A1,'WELCOME TO U OF T MONSTERGAUSS',73X,A3,
     1 ' VERSION: 13 AUG 1991'/1X,30('*')/'0CONTROL CARDS:'/)
 1080 FORMAT('0TOO MANY GROUPS/LINKS (MAX IS',I4,')')
 1090 FORMAT('0SUBPARAMETER ',2A1,' OF OPTION ',2A1,' IS ILLEGAL')
 1100 FORMAT('0SUBPARAMETER ',2A1,' OF OPTION ',2A1,' IS NOT ',
     1 'COMPATIBLE WITH ANOTHER OPTION')
 1110 FORMAT('0OPTION ',2A1,' REQUIRED BUT NOT FOUND')
 1120 FORMAT('0GROUP CARD',I3,' CALLS NON-EXISTANT GROUP/LINK',
     1 I9)
 1130 FORMAT(3I4,A60)
 1140 FORMAT('0ILLEGAL COMBINATION OF MULTIPLICITY AND SCF METHOD')
 1150 FORMAT(2I2)
 1160 FORMAT('0CHARGE  =',I4,10X,'MULTIPLICITY  =',I3/)
 1170 FORMAT('0*IOP CARD PARAMETERS OUT OF RANGE')
 1180 FORMAT('0ATTEMPT TO JUMP TO BASIC ROUTE CARD',I3,' (FROM CARD',
     1 I3,') THAT HAS BEEN DELETED')
 1200 FORMAT('0THE FOLLOWING OPTIONS ARE ILLEGAL OR INCOMPATIBLE ',
     1 'WITH OTHER OPTIONS:'/'0',68A1)
 1210 FORMAT(5F12.0)
 1220 FORMAT('0SUCCESS -- IF YOU HAVE TRIED TO DO SOMETHING AND ',
     1 'FAILED,'/' YOU ARE BETTER OFF THAN IF YOU HAD TRIED TO DO ',
     2 'NOTHING AND SUCCEEDED.')
 1230 FORMAT(1X,3I4,A60)
 1240 FORMAT('0IF AT FIRST YOU DO NOT SUCCEED, TRY, TRY AGAIN.'/
     1 ' THEN GIVE UP - THERE IS NO USE BEING A DAMN FOOL ABOUT IT.',
     2 '   W. C. FIELDS')
 1250 FORMAT(/'0*** DUE TO AN UNFORTUNATE ERROR, THIS CALCULATION ',
     1 'HAS BEEN TERMINATED     ... 5 ... 4 ... 3 ... 2 ... 1 ...')
 1260 FORMAT('0OPTION NUMBERS:',6X,9('0'),'111 ',7('1'),10('2'),10('3'),
     1 10('4'),10('5'),'6   ',9('6'),10('7'),10('8'),'999'/
     2 22X,'123456789012 3456789',4('0123456789'),'0   ',
     3 '123456789',2('0123456789'),'012')
 1270 FORMAT ('1'//60X,'.A',6('X'),'II',6('X'),'A.',/57X,9('X'),9('A'),
     17('X'),'A',/54X,'A',5('X'),'V',18('.'),'V',5('X'),'A',/51X,'AXXXV'
     2,26('.'),'VXXXA.'/50X,'AXXXV',29('.'),'V',6('X'),'A'/43X,5('.'),'A
     3XXXV',32('.'),'VXX....XXA'/42X,'A',8('X'),'V',34('.'),3('X'),5('.'
     4),'VXXA'/41X,'AXXXV','....VA',33('.'),'AXV',8('.'),'V',7('X'),3('.
     5'))
 1271 FORMAT (
     1 40X,'AXXXV',6('.'),'VA',31('.'),'AV',11('.'),'VA',7('T'),'VXXXA'
     2/28X,7('.'),3X,'./AXXV',8('.'),'VA',28('.'),'TT',14('.'),'O',10(
     3'.'),'TVXA'/25X,'.A',9('X'),'A...XXV',10('.'),'T',24('.'),'/A',17(
     4'.'),'O',13('.'),'VXA'/24X,'AXXV',7('T'),2('XXVT'),12('.'),'LLVL',
     516('.'),'AXXV',17('.'),'O',15('.'),'VXA.')
 1272 FORMAT (22X,'AXXXV',7('.'),'DXV'
     1,'..VA',17('.'),'VXXXA-',5('.'),'///AAXXV',14('.'),'LL',19('.'),'I
     2XXA'/21X,'AXXV',8('.'),'AV',25('.'),'TTTTVXXXATTT/',19('.'),'VA',
     317('.'),'/AXXX'/20X,'/AXV',9('.'),'VX',57('.'),'XXA',16('.'),'AXXT
     4XD')
 1273 FORMAT (
     1 20X,'AXXV',9('.'),'IX..AV',23('.'),13X,18('.'),'VO',13('.'),
     2'2XXV..XB-'/20X,'XX4A',10('.'),'DOAV',24('.'),' WHAT A BOMB ',18('
     3.'),'XB....L...JAVXXXV..../X-'/20X,'-X.4XL',9('.'),'EO',25('.'),13
     4X,17('.'),'OB',6('.'),'TTTTT/',8('.'),'3XE'/19X,'3X/...TXXLLL.....
     5O',42('.'),',O,',9('.'),'OO',20('.'),'AXV'/20X,'VX',13('.'),'OS,',
     639('.'),',BO',9('.'),'BBO',20('.'),'/XXD')
 1280 FORMAT (20X,'VXA',12('.'),',OL',37('.'),'OXB',8('.'),'JXP',22('.')
     1,'AXXV'/21X,'VXA',13('.'),'OO',10('.'),',O,',20('.'),'JXXXXXX./',1
     29('.'),'6',10('.'),'AXXXV'/22X,'VATTT',11('.'),'OAO,...,,,O,BO',15
     3('.'),',,-J',6('X'),'./XLX,',15('.'),'/XA',7('.'),',AXXXV'/22X,
     4'3XXV',14('.'),'TTAOOTT...BXXL-JV',24('X'),'A-,...VXV',9('.'),'VXL
     5.../AXXV')
 1281 FORMAT (
     1 24X,'JXV',14('.'),',,OO',5('.'),'AXXXV',14('T'),6('.'),'XXX..4',
     25('X'),'LXV',12('.'),'VXXXXV'/25X,'VXXXV.VA',12('X'),'..XXXX',
     37('.'),'XXX',14('.'),'XXX...3',5('O'),17('X'),'V'/29X,'V',19('X'),
     49('.'),'XXX',14('.'),24('X'),'VT'/46X,'TV',13('X'),14('.'),'XXXVT'
     5/58X,'XXX',14('.'),'XXX')
 1282 FORMAT (58X,'XXX',14('.'),'XXX',24X,'.II.'/29
     1X,'.IIII.',14X,'...II....XXX',14('.'),'XXX',12X,9('.'),14('I'),'..
     2..'/16X,'.',84('I'),10X,9('I')/16X,'III',55X,47('I')/17X,'T',53('I
     3'),5('T'),'XXX',33X,'TIT'/57X,'XXX',16('.'),'XXX'/43X,'.',12X,'XXX
     4',17('.'),'XXXCCC..CCCCC.'/39X,'.',9('C'),'...CCCXXXX',17('.'),
     5'XXXX....CCCC..CCC.')
 1283 FORMAT (37X,'.CCCCTTCCCCC.CC....XXXX',17('.'),'XXXX....CC',
     15('.'),'CCC.'/37X,'.DTCCC',6('.'),10('C'),'L',8('.'),',,J',
     215('C'),'...CCCCC.'/38X,'.',3X,'CCC',11('.'),17('C'),'T.TCCCCC....
     3CCCC',4X,'.'/44X,6('C'),34('.'),'1HC)'/48X,4('C'),30('.'),4('C')/
     410X,118('G'))
 1290 FORMAT('0SUBPARAMETER REQUIRED FOR OPTION ',2A1,' BUT NOT GIVEN')
 1300 FORMAT('0ANTOAU, FCONV, FCCONV OR DCONST CONVERSION FACTOR IS ',
     1 'ZERO.')
 1310 FORMAT('0VCM CONVERSION FACTOR IS ZERO, BUT FIELD OPTION USED.')
 1320 FORMAT ('0UNABLE TO DECODE SUBPARAMETER STRING FOR OPTION ',2A1)
 1330 FORMAT('0SUBPARAMETER OF OPTION ',2A1,' REQUIRED, BUT NOT ',
     1 'FOUND')
 1340 FORMAT('0BLANK SUBPARAMETER OF OPTION ',2A1,' IS NOT ',
     1 'COMPATIBLE WITH ANOTHER OPTION')
 1350 FORMAT (/'0NORMAL TERMINATION, TOTAL CPU TIME FOR THIS ',
     1 'CALCULATION WAS',F10.3,' MINUTES.')
 1360 FORMAT ('0EVEN IF YOU ARE ON THE RIGHT TRACK,'/
     1 ' YOU WILL GET RUN OVER IF YOU JUST SIT THERE.')
 1370 FORMAT ('0*PRT/*PUN OPTION ',2A1,' IS NOT COMPATIBLE WITH *MOL ',
     1 'OPTIONS.')
 1380 FORMAT (/'0*** ABNORMAL TERMINATION, TOTAL CPU TIME FOR THIS ',
     1 'CALCULATION WAS',F10.3,' MINUTES.')
      CARCON = '1'
      IF (IOP(1) .LT. 0) GO TO 990
      IF (IOP(1) .EQ. 999) THEN
         CARCON = ' '
      ELSE
         WRITE (IOUT,1350) E(1)
      END IF
C     INITIALIZE THE BASIC ROUTE.
    5 DO 10 J=1,21
      NUMBER(J)=IOVER(J)
      JUMP(J)=0
      DO 10 I=1,92
   10 IP(I,J)=0
C     IFOUND IS USED TO PREVENT THE FINDING OF A GIVEN OPTION.
      DO 11 I=1,NOP
   11 IFOUND(I)=0
      IFOUND(11)=1
      IFOUND(18)=1
      IFOUND(20)=1
      IFOUND(27) = 1
      IFOUND(29) = 1
      IFOUND(30) = 1
      IFOUND(31) = 1
      IFOUND(32) = 1
      IFOUND(33) = 1
      IFOUND(34) = 1
      IFOUND(35) = 1
      IFOUND(36) = 1
      IFOUND(37) = 1
      IFOUND(38) = 1
      DO 12 I=1,99
   12 IOP(I)=0
      IOP(8)=1
C
C     IPRT/IPUN SAVE THE *PRT/*PUN OPTIONS: 1 IS S PUNCH, 2 IS H PUNCH,
C     3 IS C PRINT/PUNCH, 4 IS D PRINT/PUNCH, 5 IS F PUNCH, 6 IS
C     GEOMETRY CHECK PRINT, 7 IS POPULATION ANALYSIS PRINT, 8 IS LMO
C     PUNCH, 9 IS MO INTEGRALS PRINT, 10 IS Z MATRIX PUNCH.
C
      DO 15 I=1,10
      IPRT(I)=0
   15 IPUN(I)=0
C
C     SET DEFAULTS FOR 'ROUTE'.
C
C     ITYPE: 1 FOR SINGLE CALCULATION, 2 FOR ZM OPT, 3 FOR FORCE OPT,
C     4 FOR SURFACE SCANS, 5 FOR PMO RESTARTS,
C     6 FOR ENERGY DECOMPOSITION / BSSE.
      ITYPE=1
C     ICHK: 1 FOR NORMAL RUN, 0 FOR CHECK RUN.
      ICHK=1
C     IGOPT: 1 FOR SIMULTANEOUS OPTIMIZATION OF GEOMETRY, 0 FOR NO.
      IGOPT=0
C     IBOPT: 1 FOR SIMULTANEOUS OPTIMIZATION OF BASIS SET, 0 FOR NO.
      IBOPT=0
C     IME: 1 FOR BFGS OPT METHOD, 2 FOR OC, 3 FOR VA05, 4 FOR DOC.
      IME=0
C     IDIP: 1 FOR DIPOLE MOMENT, 0 FOR NO.
      IDIP=0
C     ILMO: 0 FOR NO LMO, 1 FOR LMO, 2 FOR LMO AND SIZES.
      ILMO=0
C     IOEP: 1 FOR ONE-ELECTRON PROPERTIES, 0 FOR NO.
      IOEP=0
C     ILC: 0 FOR OEP OVER LMO, 1 FOR OEP OVER CMO.
      ILC=0
C     IPOL: 1 TO ESTIMATE POLARIZABILITY, 0 FOR NO.
      IPOL=0
C     IPMO: 1 FOR PMO ANALYSIS, 0 FOR NO.
      IPMO=0
C     IFOR: 1 TO CALCULATE FORCE IN NON-FORCE OPT RUNS, 0 FOR NO.
      IFOR=0
C     ICC: 0 FOR INTERNAL COORDINATES, 1 FOR CARTESIAN COORDINATES.
      ICC=0
C     IFREQ: 1 TO CALCULATE FREQUENCIES AT FIRST POINT, 2 FOR
C     BOTH FIRST AND LAST POINT, 3 FOR LAST POINT, 0 FOR NO.
      IFREQ = 0
C     IFP: 1 TO CALC PROPERTIES AT FIRST POINT OF OPT RUNS, 0 FOR NO.
      IFP=0
C     ICI: 0 FOR NO CI, 1 FOR CI, 2 FOR CI RESTART.
      ICI=0
C     MRDCI: 0 FOR NO MRD-CI SETUP, 1 FOR SETUP, 2 FOR SETUP PLUS SCF.
      MRDCI=0
C     SET DEFAULT INTEGRAL ACCURACY TO 1.0D-10.
      IP(15, 2) = 4
      IP(15,10) = 4
      IP(15,17) = 4
C     SET DEFAULT IN LINK 0402 TO READ FROM UNIT 1, NOT UNIT IN.
      IP(29,3)=1
C     SET DEFAULT IN LINK 0601 TO READ FROM UNIT 1, NOT UNIT IN.
      IP(33,5)=1
C     SET DEFAULT SCF CONVERGENCE TO 1.0D-9.
      IP(13, 4) = 4
      IP(13,11) = 4
C     ZERO COMMON /GEN/.
      E1=ZERO
      E2=ZERO
      E3=ZERO
      E(1)=ZERO
      E(2)=ZERO
      E(3)=ZERO
      DCONV=ZERO
      SPIN(1)=ZERO
      SPIN(2)=ZERO
      FIELD(1)=ZERO
      FIELD(2)=ZERO
      FIELD(3)=ZERO
      FE=ZERO
      ESOL=ZERO
      EMOL=ZERO
      DPOLE(1)=ZERO
      DPOLE(2)=ZERO
      DPOLE(3)=ZERO
      DPOLE(4)=ZERO
C
C     ******************************************************************
C     LOOK FOR A *MOL CARD.
C     ******************************************************************
C
   20 READ(IN,1000,END=900)TITLE
      IC = TITLE(1:4)
      CALL UPPER (IC)
      IF (IC .NE. ICODE(1)) GO TO 20
      WRITE (IOUT,1070) CARCON, MACH
      CARCON = '1'
      WRITE (IOUT,1020) TITLE
      CALL UPPER (TITLE)
C
C     START LOOP OVER *MOL CARD OPTIONS.
C
      DO 400 I=1,NOP
      IF (IFOUND(I) .NE. 0) GO TO 400
      I1I=MOL(I)(1:1)
      I2I=MOL(I)(2:2)
      IST=1
C     LOOK FOR OCCURENCE OF OPTION I - IF NOT FOUND IN CURRENT FIELD
C     (A FIELD EXTENDS FROM THE COLUMN AFTER A COMMA TO THE NEXT COMMA),
C     TRY THE NEXT FIELD.
   70 CALL FINDC(ILINE,ICOM,IST,NMAX,IC1,IC2,IEND)
      IF (IC1.EQ.I1I .AND. IC2.EQ.I2I) GO TO 80
      IF (IEND .EQ. NMAX) GO TO 300
      IST=IEND+1
      GO TO 70
C     OPTION I HAS BEEN FOUND IN COLUMNS IST-IEND. TRY TO FIND A
C     SUBPARAMETER. CHECK FOR DOUBLE '=' CHARACTERS.
   80 CALL FINDC(ILINE,IEQ,IST,IEND,IE1,IE2,ISUB)
      IF (ISUB .EQ. IEND) GO TO 90
      ISUB=ISUB+1
      CALL FINDC(ILINE,IEQ,ISUB,IEND,IE1,IE2,J)
      IF (J .NE. IEND) GO TO 925
C     FOUND =, NOW GET 2 CHARACTERS.
      CALL FINDC(ILINE,ICOM,ISUB,IEND,IE1,IE2,J)
      GO TO 100
C     NO SUBPARAMETER.
   90 ISUB=0
      IE1 = ' '
      IE2 = ' '
C
  100 GO TO (110,120,130,140,150,160,170,180,190,200,
     1 210,220,230,240,250,260,270,2180,2190,2200,
     2 2210,2220,2230,2240,2250,2260,2270,2280,2290,2300,
     3 2310,2320,2330,2340,2350,2360,2370,2380,2390,2400,
     4 2410),I
C*
C     CHECK OPTION.
C*
  110 ICHK=0
      IPRT(6)=2
      IF (ISUB .EQ. 0) GO TO 290
      IF (IE1 .NE. 'I') GO TO 930
      IP(22,2)=1
      IP(20,3)=1
      IP(32,3)=1
      GO TO 290
C*
C     GEOMETRY.
C*
  120 IF (ISUB .EQ. 0) GO TO 960
      IF (IE1 .NE. 'Z') GO TO 123
      IOP(5)=1
      GO TO 290
  123 IF (IE1 .EQ. 'S') GO TO 126
      IF (IE1 .NE. 'A') GO TO 124
      IOP(5)=2
      GO TO 290
  124 IF (IE1 .NE. 'B') GO TO 930
      IOP(5)=3
      GO TO 290
  126 IP(61,1)=1
      IP(13,1)=3
      IOP(5)=1
      GO TO 290
C*
C     SURFACE SCAN.
C*
  130 ITYPE=4
      IFOUND(9)=1
      IFOUND(10)=1
      IFOUND(24)=1
      IFOUND(39) = 1
      IFOUND(40) = 1
      IFOUND(41) = 1
      IF (ISUB .EQ. 0) GO TO 135
      IF (IE1 .NE. 'F') GO TO 930
      IP(19, 1) = 1
      IP(19, 9) = 1
      IP(19,16) = 1
      IP(21,11) = 1
      IP(13,12) = 3
      IP(16,12) = 1
      IP(18,12) = 2
      IP(19,14) = 2
      IFOUND(17) = 1
      GO TO 290
C     SURFACE SCANS NOT ALLOWED FOR GE=A/GE=B.
  135 IF (IOP(5) .GE. 2) GO TO 400
      GO TO 290
C*
C     BASIS SET.
C*
  140 IF (ISUB .EQ. 0) GO TO 960
      IF (IE1 .NE. 'G') GO TO 141
C     GENERAL BASIS.
      IOP(6)=7
      IP(23,2)=2
      IP(13,3)=1
      IF (IE2 .EQ. ' ') GO TO 290
      IF (IE2 .NE. '*') GO TO 930
      IOP(7)=1
      IP(14,4) = 1
      GO TO 290
  141 IF (IE1 .EQ. 'M') GO TO 143
      IP(13,3)=1
C     TRY FOR N-21G, N-21G (PULAY), N-311G AND N-31G.
      IF (IE1 .EQ. 'V') THEN
         IOP(6) = 1
         IOP(8) = 0
      END IF
      IF (IE1 .EQ. 'P') IOP(6)=3
      IF (IE1 .EQ. 'C') IOP(6)=4
      IF (IOP(6) .NE. 0) GO TO 143
      IF (IE1 .NE. 'E') GO TO 930
      IOP(6)=2
      IOP(8)=0
  143 DO 144 J=1,6
      IF (IE2 .EQ. ZNUM(J)) GO TO 145
  144 CONTINUE
      GO TO 930
  145 IP(13,2)=J
      IF (IOP(6) .NE. 0 .AND. J.LE.2) GO TO 930
C     TRY TO GET *'S FOLLOWING THE FIRST 2 LETTERS.
      CALL FINDC(ILINE,ZNUM(J),ISUB,IEND,IE1,IE2,K)
      ISUB=K+1
      CALL FINDC(ILINE,ICOM,ISUB,IEND,IE1,IE2,K)
      IF (IE1.EQ.' ' .AND. IE2.EQ.' ') GO TO 290
      IF (IE1 .EQ. '+') GO TO 148
C     POLARIZED BASIS SET.
      IF (IE1 .NE. '*') GO TO 930
      IOP(7)=1
      IP(14,4) = 1
      IFOUND(29) = 0
      IFOUND(30) = 0
      IFOUND(31) = 0
      IFOUND(32) = 0
      IFOUND(33) = 0
      IF (IOP(6) .NE. 0) GO TO 146
C     STO-NG*.
      IF (IE2 .NE. ' ') GO TO 930
      IP(25,2)=1
      IP(31,3)=1
      GO TO 290
C     N-M1G*(*) OR N-M11G*(*).
  146 IF (IE2 .NE. ' ') GO TO 147
      J = 3
      IF (IOP(6) .EQ. 1) J = 1
      IP(25,2)=J
      IP(27,2) = 3
      IP(31,3)=J
      GO TO 290
  147 IF (IE2 .NE. '*') GO TO 930
      IF (IOP(6) .EQ. 1) GO TO 930
      IP(25,2) = 7
      IP(27,2) = 3
      IP(31,3) = 7
      GO TO 290
C     DIFFUSE BASIS SET.
  148 IF (IOP(6) .EQ. 0) GO TO 930
      IP(28,2) = 3
      IP(29,2) = 3
      IFOUND(34) = 0
      IFOUND(35) = 0
      IFOUND(36) = 0
      IFOUND(37) = 0
      IFOUND(38) = 0
      IF (IE2 .EQ. ' ') GO TO 290
      IF (IE2 .NE. '+') GO TO 930
      IP(28,2) = 7
      GO TO 290
C*
C     D/F FUNCTION TYPE.
C*
  150 IOP(7)=1
      IFOUND(29) = 0
      IFOUND(30) = 0
      IFOUND(31) = 0
      IFOUND(32) = 0
      IFOUND(33) = 0
      IF (ISUB .EQ. 0) GO TO 290
      IF (IE1 .EQ. 'C') GO TO 155
      IF (IE1 .NE. 'P') GO TO 930
      IOP(8)=1
      GO TO 290
  155 IOP(8)=0
      GO TO 290
C*
C     INITIAL GUESS.
C*
  160 IF (ISUB .EQ. 0) GO TO 960
      IF (IE1 .NE. 'E') GO TO 161
      IF (IOP(6) .NE. 0) GO TO 940
      IP(13,3)=0
      GO TO 290
  161 IF (IE1 .NE. 'P') GO TO 162
      IP(13,3)=1
      IP(16,3)=1
      GO TO 290
  162 IF (IE1 .NE. 'H') GO TO 163
      IP(13,3)=2
      GO TO 290
  163 IF (IE1 .NE. 'D') GO TO 164
      IP(13,3)=3
      GO TO 290
  164 IF (IE1 .NE. 'C') GO TO 165
      IP(13,3)=4
      GO TO 290
  165 IF (IE1 .NE. 'N') GO TO 166
      IP(13,3)=5
      GO TO 290
  166 IF (IE1 .NE. 'S') GO TO 167
      IP(20,2)=1
      GO TO 169
  167 IF (IE1 .NE. 'V') GO TO 168
      IP(20,2)=2
      GO TO 169
  168 IF (IE1 .NE. 'G') GO TO 930
      IP(20,2)=3
  169 IP(13,3)=4
      IP(16,3)=1
      GO TO 290
C*
C     UHF.
C*
  170 IF (ISUB .NE. 0) GO TO 930
      IOP(9)=1
      IFOUND(8)=1
      IFOUND(16)=1
      IFOUND(21)=1
      GO TO 290
C*
C     RHF.
C*
  180 IOP(9) = 2
      IFOUND(16) = 1
      IFOUND(22) = 1
      IP(61,3) = 1
      IP(13,4) = 1
      IP(29, 4) = 1
      IP(13,11) = 1
      IP(29,11) = 1
      IF (ISUB .EQ. 0) GO TO 290
      IF (IE1 .EQ. 'R') GO TO 290
      IF (IE1 .NE. 'I') GO TO 181
      IP(29, 4) = 0
      GO TO 290
  181 IF (IE1 .NE. 'N') GO TO 182
      IP(29, 4) = 2
      GO TO 290
  182 IF (IE1 .NE. 'O') GO TO 930
      IP(29, 4) = 3
      GO TO 290
C*
C     GEOMETRY OPTIMIZATION.
C*
  190 IGOPT=1
      ITYPE=3
      IFOUND(11)=0
      IFOUND(17)=1
      IFOUND(18)=0
      IFOUND(24)=1
      IFOUND(26)=IFOUND(26)+1
      IFOUND(27) = 0
      IFOUND(39) = 1
      IFOUND(40) = 1
      IF (IOP(5) .GE. 2) ICC=1
      IME = 2
      IF (ISUB .EQ. 0) GO TO 290
      IF (IE1 .NE. 'C') GO TO 195
      ICC=1
      GO TO 290
C     GOPT=READ.
  195 IF (IE1 .NE. 'R') GO TO 930
      IF (IOP(5) .NE. 0) GO TO 940
      IP(18,8)=1
      GO TO 290
C*
C     BOPT.
C*
  200 IF (ISUB .NE. 0) GO TO 930
      IBOPT=1
      ITYPE=3
      IP(23,2)=2
      IFOUND(11)=0
      IFOUND(17)=1
      IFOUND(18)=0
      IFOUND(24)=1
      IFOUND(26)=IFOUND(26)+1
      IFOUND(39) = 1
      IFOUND(40) = 1
      IFOUND(41) = 1
      IF (IOP(5) .GE. 2) ICC=1
      IME = 2
      GO TO 290
C*
C     METHOD.
C*
  210 IF (ISUB .EQ. 0) GO TO 960
      IF (IE1 .EQ. 'Z') GO TO 213
      IF (IOP(5) .GE. 2) ICC=1
      IF (IE1 .EQ. 'D') GO TO 214
      IF (IE1 .NE. 'B') GO TO 211
      IME=1
      GO TO 2205
  211 IF (IE1 .EQ. 'O') GO TO 2205
      IF (IE1 .NE. 'V') GO TO 930
      IME=3
      GO TO 2205
C     METHOD=Z.
  213 IF (IOP(5) .GE. 2) GO TO 940
      IF (ICC.NE.0 .OR. IBOPT.NE.0) GO TO 940
      ITYPE=2
      IGOPT=0
      IFOUND(17)=0
      IFOUND(20)=0
      IFOUND(26)=IFOUND(26)-1
      IFOUND(27) = 1
      GO TO 290
C     METHOD=DOC.
  214 IME=4
      IFOUND(17)=0
      IFOUND(26)=IFOUND(26)-IGOPT-IBOPT
      GO TO 2205
C*
C     DIPOLE MOMENT.
C*
  220 IF (ISUB .NE. 0) GO TO 930
      IDIP=1
      GO TO 290
C*
C     LMO.
C*
  230 ILMO=1
      IFOUND(39) = 1
      IFOUND(40) = 1
      IF (ISUB .EQ. 0) GO TO 290
      IF (ITYPE .NE. 1) GO TO 940
      IFOUND(16) = 1
      IFOUND(21) = 1
      IFOUND(41) = 1
      IF (IE1 .NE. '1') GO TO 235
      IP(32,5) = 1
      IP(28,6) = 1
      GO TO 290
  235 IF (IE1 .NE. '2') GO TO 930
      IP(32,5) = 2
      IP(28,6) = 2
      GO TO 290
C*
C     SIZES.
C*
  240 IF (ISUB .NE. 0) GO TO 930
      ILMO=2
      IFOUND(39) = 1
      IFOUND(40) = 1
      GO TO 290
C*
C     OEP.
C*
  250 IOEP=1
      IFOUND(39) = 1
      IFOUND(40) = 1
      IF (ISUB .EQ. 0) GO TO 255
      IF (IE1 .NE. 'C') GO TO 251
      ILC=1
      GO TO 290
  251 IF (IE1 .NE. 'L') GO TO 930
      IF (ILMO .EQ. 0) GO TO 940
      GO TO 290
  255 IF (ILMO .EQ. 0) ILC=1
      GO TO 290
C*
C     PMO.
C*
  260 IPMO=1
      IFOUND(39) = 1
      IFOUND(40) = 1
      IFOUND(41) = 1
      IF (ISUB .EQ. 0) GO TO 290
      IF (IE1 .NE. 'S') GO TO 261
      IPUN(1)=1
      IPUN(2)=1
      IPUN(3)=1
      IPUN(5)=1
      GO TO 290
  261 IF (IE1 .NE. 'R') GO TO 930
      IF (IDIP+ILMO+IOEP .GT. 0) GO TO 940
      IF (ITYPE .NE. 1) GO TO 940
      IFOUND(17)=1
      IFOUND(18)=1
      IFOUND(21)=1
      IFOUND(24)=1
      IFOUND(28) = 1
      ITYPE=5
      IP(13,3)=6
      GO TO 290
C*
C     FORCE CALCULATION.
C*
  270 IFOR=1
      IFOUND(26)=1
      IFOUND(39) = 1
      IFOUND(40) = 1
      IF (ISUB .EQ. 0) GO TO 275
      IF (IE1 .NE. 'C') GO TO 930
      ICC=1
      GO TO 290
  275 IF (IOP(5) .GE. 2) GO TO 940
      GO TO 290
C*
C     FIRST POINT.
C*
 2180 IF (ISUB .NE. 0) GO TO 930
      IFP=1
      GO TO 290
C*
C     SIMULTANEOUS OPTIMIZATION RESTART.
C*
 2190 IF (ISUB .NE. 0) GO TO 2191
      IF (ITYPE .NE. 3) GO TO 940
      GO TO 2195
 2191 IF (ITYPE .EQ. 3) GO TO 940
      IF (IE1.NE.'B' .AND. IE1.NE.'G') GO TO 930
 2195 IF (IGOPT.EQ.1 .OR. IE1.EQ.'G') IP(18,1)=1
      IF (IBOPT.EQ.1 .OR. IE1.EQ.'B') IP(21,2)=1
      IF (ISUB .NE. 0) GO TO 290
      IF (IBOPT .EQ. 1) IP(13,3)=5
      IP(13,8)=2
      GO TO 290
C*
C     NO PRINT.
C*
 2200 IF (ISUB .NE. 0) GO TO 930
 2205 IP(21,8)=1
      IP(21,9)=1
      IP(23,10)=1
      IP(21,11)=1
      IP(19,14)=1
      IP(21,15)=1
      IP(21,16)=1
      GO TO 290
C*
C     CI.
C*
 2210 IP(14,5)=7
      IP(14,12)=7
      IP(14,18)=7
      IFOUND(24)=1
      IFOUND(39) = 1
      IFOUND(40) = 1
      IF (ISUB .NE. 0) GO TO 2215
      ICI=1
      GO TO 290
 2215 IF (IE1 .EQ. 'S') GO TO 290
      IF (IE1 .NE. 'R') GO TO 930
      IF (IDIP+ILMO+IOEP+IFOR .GT. 0) GO TO 940
      IF (ITYPE .NE. 1) GO TO 940
      IFOUND(28) = 1
      IFOUND(41) = 1
      IP(13,3)=5
      ICI=2
      GO TO 290
C*
C     ALTERATION OF CONFIGURATION.
C*
 2220 IF (ISUB .NE. 0) GO TO 930
      IP(18,3)=1
      IP(20,3)=1
      GO TO 290
C*
C     SCF CONVERGENCE OPTIONS.
C*
 2230 IF (ISUB .EQ. 0) GO TO 960
      IGOTI=0
      IGOTCM=0
      IGOTDN=0
 2231 IF (IE1 .EQ. 'N') GO TO 2238
      IF (IE1 .EQ. 'D') GO TO 2237
      IF (IE1 .EQ. 'M') GO TO 2236
      IF (IE1 .EQ. 'C') GO TO 2235
C     LOOK FOR CO=N, N = 5, 6, 7, 8 OR 9.
      DO 2232 J=5,9
      IF (IE1 .EQ. ZNUM(J)) GO TO 2233
 2232 CONTINUE
      GO TO 930
C
 2233 IF (IGOTI .NE. 0) GO TO 930
      IGOTI=1
      IP(13, 4) = J - 5
      IP(13,11) = J - 5
      IF (IGOTCM .NE. 0) GO TO 2239
      IP(14, 4)=1
      IP(14,11)=1
      GO TO 2239
C     CONTINUE SUBPARAMETER.
 2235 IP(22, 4)=2
      IP(22,11)=2
C     MAXIMUM CYCLES SUBPARAMETER.
 2236 IF (IGOTCM .NE. 0) GO TO 930
      IGOTCM=1
      IP(14, 4)=7
      IP(14,11)=7
      GO TO 2239
C     DEWAR EXTRAPOLATION SUBPARAMETER.
 2237 IF (IGOTDN .NE. 0) GO TO 930
      IGOTDN=1
      IP(17, 4)=1
      IP(17,11)=1
      GO TO 2239
C     NO EXTRAPOLATION SUBPARAMETER.
 2238 IF (IGOTDN .NE. 0) GO TO 930
      IGOTDN=1
      IP(17, 4)=3
      IP(17,11)=3
C     GET SECOND SUBPARAMETER.
 2239 IF (IE2 .EQ. ' ') GO TO 290
      IE1=IE2
      IE2 = ' '
      GO TO 2231
C*
C     MRDCI.
C*
 2240 MRDCI=1
      IP(28,5)=1
      IFOUND(39) = 1
      IFOUND(40) = 1
      IFOUND(41) = 1
      IF (ISUB .EQ. 0) GO TO 290
      IF (IE1 .NE. 'S') GO TO 930
      MRDCI=2
      GO TO 290
C*
C     ATOMIC MASS.
C*
 2250 IF (ISUB .EQ. 0) GO TO 930
      IF (IE1 .EQ. 'I') THEN
         IP(22,1) = 0
      ELSE IF (IE1 .EQ. 'A') THEN
         IP(22,1) = 1
      ELSE IF (IE1 .EQ. 'R') THEN
         IP(22,1) = 2
      ELSE IF (IE1 .EQ. 'D') THEN
         IP(23,1) = 1
      ELSE
         GO TO 930
      END IF
      GO TO 290
C*
C     FIELD.
C*
 2260 IF (ISUB .EQ. 0) GO TO 960
      IFOUND(39) = 1
      IFOUND(40) = 1
      IFOUND(41) = 1
      IF (IE1 .EQ. 'E') IOP(3)=1
      IF (IE1 .EQ. 'S') THEN
         IF (IOP(9) .NE. 0) GO TO 940
         IOP(3)=2
      END IF
      IF (IOP(3) .EQ. 0) GO TO 930
      IDIP=1
      GO TO 290
C*
C     RING OPTION.
C*
 2270 IF (ISUB .NE. 0) GO TO 930
      IP(25,8) = 1
      GO TO 290
C*
C     POLARIZABILITY ESTIMATE.
C*
 2280 IF (ISUB .NE. 0) GO TO 930
      IDIP = 1
      IPOL = 1
      IP(25,6) = IOEP + 1
      IP(25,13) = IOEP + 1
      IP(25,19) = IOEP + 1
      IFOUND(39) = 1
      IFOUND(40) = 1
      GO TO 290
C*
C     1POLARIZE OPTION.
C*
 2290 IF (ISUB .EQ. 0) GO TO 960
      J = IP(25,2)
      I4 = J / 4
      J = J - 4*I4
      I2 = J / 2
      I1 = J - 2*I2
      IF (IE1 .EQ. 'Y') THEN
         I4 = 1
      ELSE IF (IE1 .EQ. 'N') THEN
         I4 = 0
      ELSE
         GO TO 930
      END IF
      IP(25,2) = 4*I4 + 2*I2 + I1
      GO TO 290
C*
C     2POLARIZE OPTION.
C*
 2300 IF (ISUB .EQ. 0) GO TO 960
      J = IP(25,2)
      I4 = J / 4
      J = J - 4*I4
      I2 = J / 2
      I1 = J - 2*I2
      IF (IE1 .EQ. 'Y') THEN
         I2 = 1
      ELSE IF (IE1 .EQ. 'N') THEN
         I2 = 0
      ELSE
         GO TO 930
      END IF
      IP(25,2) = 4*I4 + 2*I2 + I1
      GO TO 290
C*
C     3POLARIZE OPTION.
C*
 2310 IF (ISUB .EQ. 0) GO TO 960
      J = IP(25,2)
      I4 = J / 4
      J = J - 4*I4
      I2 = J / 2
      IF (IE1 .EQ. 'Y') THEN
         I1 = 1
      ELSE IF (IE1 .EQ. 'N') THEN
         I1 = 0
      ELSE
         GO TO 930
      END IF
      IP(25,2) = 4*I4 + 2*I2 + I1
      GO TO 290
C*
C     4POLARIZE OPTION.
C*
 2320 IF (ISUB .EQ. 0) GO TO 960
      J = IP(27,2)
      I4 = J / 4
      J = J - 4*I4
      I2 = J / 2
      IF (IE1 .EQ. 'Y') THEN
         I1 = 1
      ELSE IF (IE1 .EQ. 'N') THEN
         I1 = 0
      ELSE
         GO TO 930
      END IF
      IP(27,2) = 4*I4 + 2*I2 + I1
      GO TO 290
C*
C     5POLARIZE OPTION.
C*
 2330 IF (ISUB .EQ. 0) GO TO 960
      J = IP(27,2)
      I4 = J / 4
      J = J - 4*I4
      I2 = J / 2
      I1 = J - 2*I2
      IF (IE1 .EQ. 'Y') THEN
         I2 = 1
      ELSE IF (IE1 .EQ. 'N') THEN
         I2 = 0
      ELSE
         GO TO 930
      END IF
      IP(27,2) = 4*I4 + 2*I2 + I1
      GO TO 290
C*
C     1DIFFUSE OPTION.
C*
 2340 IF (ISUB .EQ. 0) GO TO 960
      J = IP(28,2)
      I4 = J / 4
      J = J - 4*I4
      I2 = J / 2
      I1 = J - 2*I2
      IF (IE1 .EQ. 'Y') THEN
         I4 = 1
      ELSE IF (IE1 .EQ. 'N') THEN
         I4 = 0
      ELSE
         GO TO 930
      END IF
      IP(28,2) = 4*I4 + 2*I2 + I1
      GO TO 290
C*
C     2DIFFUSE OPTION.
C*
 2350 IF (ISUB .EQ. 0) GO TO 960
      J = IP(28,2)
      I4 = J / 4
      J = J - 4*I4
      I2 = J / 2
      I1 = J - 2*I2
      IF (IE1 .EQ. 'Y') THEN
         I2 = 1
      ELSE IF (IE1 .EQ. 'N') THEN
         I2 = 0
      ELSE
         GO TO 930
      END IF
      IP(28,2) = 4*I4 + 2*I2 + I1
      GO TO 290
C*
C     3DIFFUSE OPTION.
C*
 2360 IF (ISUB .EQ. 0) GO TO 960
      J = IP(28,2)
      I4 = J / 4
      J = J - 4*I4
      I2 = J / 2
      IF (IE1 .EQ. 'Y') THEN
         I1 = 1
      ELSE IF (IE1 .EQ. 'N') THEN
         I1 = 0
      ELSE
         GO TO 930
      END IF
      IP(28,2) = 4*I4 + 2*I2 + I1
      GO TO 290
C*
C     4DIFFUSE OPTION.
C*
 2370 IF (ISUB .EQ. 0) GO TO 960
      J = IP(29,2)
      I4 = J / 4
      J = J - 4*I4
      I2 = J / 2
      IF (IE1 .EQ. 'Y') THEN
         I1 = 1
      ELSE IF (IE1 .EQ. 'N') THEN
         I1 = 0
      ELSE
         GO TO 930
      END IF
      IP(29,2) = 4*I4 + 2*I2 + I1
      GO TO 290
C*
C     5DIFFUSE OPTION.
C*
 2380 IF (ISUB .EQ. 0) GO TO 960
      J = IP(29,2)
      I4 = J / 4
      J = J - 4*I4
      I2 = J / 2
      I1 = J - 2*I2
      IF (IE1 .EQ. 'Y') THEN
         I2 = 1
      ELSE IF (IE1 .EQ. 'N') THEN
         I2 = 0
      ELSE
         GO TO 930
      END IF
      IP(29,2) = 4*I4 + 2*I2 + I1
      GO TO 290
C*
C     ENERGY DECOMPOSITION.
C*
 2390 IF (ISUB .NE. 0) GO TO 930
      ITYPE = 6
      IOP(4) = 1
      IFOUND(41) = 1
      IP(34,2) = 1
      IP(35,4) = 1
      IP(29,5) = 1
      IP(30,5) = 1
      IP(31,5) = 2
      IPRT(7) = 2
      GO TO 290
C*
C     BSSE CORRECTION.
C*
 2400 IF (ISUB .NE. 0) GO TO 930
      ITYPE = 6
      IOP(4) = 1
      IFOUND(41) = 1
      IP(34,2) = IP(34,2) + 2
      IP(35,4) = 1
      IP(29,5) = IP(29,5) + 2
      IP(30,5) = 1
      IP(31,5) = 2
      IPRT(7) = 2
      GO TO 290
C*
C     FREQUENCY OPTION.
C*
 2410 IF (ITYPE .EQ. 2) GO TO 2412
      IF (ITYPE .EQ. 3) GO TO 2413
C     SINGLE POINTS.
      IF (ISUB .NE. 0) GO TO 930
      IFREQ = 1
      GO TO 290
C     Z MATRIX GEOMETRY OPTIMIZATIONS - DO FREQ AT LAST POINT NORMALLY.
 2412 IF (IFP .EQ. 1) THEN
         IFREQ = 2
      ELSE
         IFREQ = 3
      END IF
      GO TO 290
C     GEOMETRY OPTIMIZATION WITH FREQUENCIES.
 2413 IF (ISUB .EQ. 0) GO TO 960
      IF (IE1 .EQ. 'F') THEN
         IFREQ = 1
      ELSE IF (IE1 .EQ. 'B') THEN
         IFREQ = 2
      ELSE IF (IE1 .EQ. 'L') THEN
         IFREQ = 3
      ELSE
         GO TO 930
      END IF
C*
C     DELETE THE CURRENT FIELD.
C*
  290 DO 295 J=IST,IEND
  295 ILINE(J) = ' '
      GO TO 400
C
C     OPTION NOT SPECIFIED.
C
C     IF NO ME= OPTION, TURN OFF ALL THE PRINTING DURING OPTIMIZATIONS.
  300 IF (I .EQ. 11) THEN
         IP(21,8) = 1
         IP(21,9) = 1
         IP(23,10) = 1
         IP(21,11) = 1
         IP(19,14) = 1
         IP(21,15) = 1
         IP(21,16) = 1
      END IF
C     IF NO FI= OPTION ON SS=F RUNS, USER ERROR.
      IF (I.EQ.26 .AND. IP(19,1).NE.0) GO TO 950
C
C     END OF *MOL CARD OPTIONS LOOP.
C
  400 CONTINUE
C
C     THE *MOL CARD SHOULD NOW BE BLANK.
C
      DO 410 I=1,NMAX
      IF (ILINE(I) .NE. ' ') GO TO 920
  410 CONTINUE
      I2I = ' '
C
C     ******************************************************************
C     LOOK FOR *PRT CARD.
C     ******************************************************************
C
      READ(IN,1000)TITLE
      IC = TITLE(1:4)
      CALL UPPER (IC)
      IF (IC .NE. ICODE(2)) GO TO 560
      WRITE(IOUT,1020)TITLE
      CALL UPPER (TITLE)
C
      DO 540 I=1,8
      IST=1
      I1I=IPRTC(I)
  420 CALL FINDC(ILINE,ICOM,IST,NMAX,IC1,IC2,IEND)
      IF (IC1 .EQ. I1I) GO TO 430
      IF (IEND .EQ. NMAX) GO TO 540
      IST=IEND+1
      GO TO 420
  430 CALL FINDC(ILINE,IEQ,IST,IEND,IE1,IE2,ISUB)
      IF (ISUB .NE. IEND) GO TO 440
      IE1 = ' '
      IE2 = ' '
      GO TO 930
  440 ISUB=ISUB+1
      CALL FINDC(ILINE,ICOM,ISUB,IEND,IE1,IE2,J)
      IF (IE1 .NE. 'Y') GO TO 450
      II=1
      GO TO 460
  450 IF (IE1 .NE. 'N') GO TO 930
      II=0
  460 GO TO (470,480,490,500,510,515,516,517),I
C     PRINT C.
  470 IPRT(3)=1-II
      IF (II .EQ. 0) GO TO 520
      IP(14,5)=7
      IP(14,12)=7
      IP(14,18)=7
      GO TO 520
C     PRINT D.
  480 IPRT(4)=II
      GO TO 520
C     PRINT GEOMETRY CHECK.
  490 IPRT(6)=II
      GO TO 520
C     PRINT POPULATION ANALYSIS.
  500 IPRT(7)=2-II
      GO TO 520
C     PRINT SIZE/OEP MO INTEGRALS.
  510 IPRT(9)=II
      IF (II.EQ.1 .AND. ILMO+IOEP.EQ.0) GO TO 955
      GO TO 520
C     INITIAL GUESS COEFFICIENTS.
  515 IP(20,3)=II
      GO TO 520
C     TIMING DATA - PASS FLAG TO CHAIN IN IOP(93).
  516 IOP(93)=II
      GO TO 520
C     BASIS SET PRINT.
  517 IP(23,2)=II+1
  520 DO 530 J=IST,IEND
  530 ILINE(J) = ' '
  540 CONTINUE
C
      DO 550 I=1,NMAX
      IF (ILINE(I) .NE. ' ') GO TO 920
  550 CONTINUE
C
      READ(IN,1000)TITLE
      IC = TITLE(1:4)
      CALL UPPER (IC)
C
C     ******************************************************************
C     LOOK FOR *PUN CARD.
C     ******************************************************************
C
  560 IF (IC .NE. ICODE(3)) GO TO 620
      WRITE(IOUT,1020)TITLE
      CALL UPPER (TITLE)
      IE1 = ' '
      IE2 = ' '
C
      DO 600 I=1,4
      IST=1
      I1I=IPUNC(I)
  570 CALL FINDC(ILINE,ICOM,IST,NMAX,IC1,IC2,IEND)
      IF (IC1 .EQ. I1I) GO TO 580
      IF (IEND .EQ. NMAX) GO TO 600
      IST=IEND+1
      GO TO 570
  580 J=I+2
      IF (I .GE. 3)J=J+I
      IPUN(J)=1
      IF (I.EQ.3 .AND. ILMO.EQ.0) GO TO 955
      IF (I.EQ.4 .AND. (ITYPE.LE.1.OR.ITYPE.GE.4)) GO TO 955
      DO 590 J=IST,IEND
  590 ILINE(J) = ' '
  600 CONTINUE
C
      DO 610 I=1,NMAX
      IF (ILINE(I) .NE. ' ') GO TO 920
  610 CONTINUE
C
C     ******************************************************************
C     GENERATE THE ROUTE.
C     ******************************************************************
C
      READ(IN,1000)TITLE
      IC = TITLE(1:4)
      CALL UPPER (IC)
C
  620 CALL ROUTE(IOP,IP,JUMP,IPRT,IPUN,ITYPE,ICHK,IGOPT,IBOPT,IME,
     1 IDIP,ILMO,IOEP,ILC,IFOR,ICC,IPMO,IFP,ICI,MRDCI,IPOL,IFREQ)
C     SET RUN TYPE.
      IOP(10)=ITYPE*ICHK
C
C     ******************************************************************
C     LOOK FOR *IOP CARD.
C     ******************************************************************
C
      IF (IC .NE. ICODE(4)) GO TO 670
      WRITE(IOUT,1020)TITLE
  630 READ(IN,1130)I,J,K,IOPLAB
      WRITE(IOUT,1230)I,J,K,IOPLAB
      IF (I.EQ.0 .AND. J.EQ.0 .AND. K.EQ.0) GO TO 660
      IF (I.GT.0 .AND. I.LE.21) GO TO 650
  640 WRITE(IOUT,1170)
      GO TO 990
  650 IF (J.LT.13 .OR. J.GT.92) GO TO 640
      IF (K.LT.0 .OR. K.GT.7) GO TO 640
      IP(J,I)=K
      GO TO 630
C
  660 READ(IN,1000)TITLE
      IC = TITLE(1:4)
      CALL UPPER (IC)
C
C     ******************************************************************
C     LOOK FOR *CON CARD.
C     ******************************************************************
C
  670 ICON=0
      IF (IC .NE. ICODE(5)) GO TO 680
      WRITE(IOUT,1020)TITLE
      READ(IN,1210)AUTOAN,DCONST,FCONV,FCCONV,VCM
      ICON=1
      ANTOAU=ONE/AUTOAN
      TOKCAL=ZERO
      TOKJ=ZERO
      TOEV=ZERO
      TOCM=ZERO
      READ(IN,1000)TITLE
C
C     COMPRESS OUT BASIC ROUTE CARDS THAT CALL NO LINKS.
C
  680 NOV=0
      WRITE(IOUT,1030)
      DO 770 I=1,21
      DO 690 J=61,92
      IF (IP(J,I) .NE. 0) GO TO 700
  690 CONTINUE
      IFOUND(I)=0
      GO TO 770
C     FOUND AT LEAST 1 LINK.
  700 NOV=NOV+1
      IFOUND(I)=NOV
      IF (NOV .EQ. I) GO TO 720
      NUMBER(NOV)=NUMBER(I)
      DO 710 J=1,92
  710 IP(J,NOV)=IP(J,I)
C     FIX UP JUMP FIELD - JUMP NOW HAS THE BASIC ROUTE CARD NUMBER TO
C     JUMP TO (OR 0 FOR NO JUMP) - CONVERT IT TO A RELATIVE NUMBER.
  720 K=JUMP(I)
      IF (K .EQ. 0) GO TO 750
      K=IFOUND(K)
      IF (K .GT. 0) GO TO 740
      WRITE(IOUT,1180)JUMP(I),I
      GO TO 990
  740 JUMP(NOV)=K-NOV
      GO TO 760
  750 JUMP(NOV)=0
  760 WRITE(IOUT,1040)I,NUMBER(NOV),(IOP(J),J=1,12),(IP(J,NOV),J=13,92),
     1 JUMP(NOV)
  770 CONTINUE
      WRITE(IOUT,1260)
C
C     LNK = I*10000 + J*100 + K WHERE I IS THE GROUP CARD NUMBER, J
C     IS THE GROUP NUMBER AND K IS THE LINK NUMBER
C     BUT IF LNK IS NEGATIVE, JUMP BACK THAT MANY ELEMENTS OF LNK
C     THE LAST ELEMENT OF LNK IS 101 (J=1 AND K=1, A CALL TO LNK1).
C
      KOUNT=1
      DO 820 I=1,NOV
      NI=NUMBER(I)
      M=MAXLNK(NI)
      II=0
      DO 800 J=1,32
      IF (IP(J+60,I) .EQ. 0) GO TO 800
      IF (KOUNT .GT. LMAX) GO TO 970
      LNK(KOUNT)=I*10000+NI*100+J
      IF (J .GT. M) GO TO 980
      II=II+1
      KOUNT=KOUNT+1
  800 CONTINUE
      ISEG(I)=II
      IF (JUMP(I) .EQ. 0) GO TO 820
      I3=I+JUMP(I)
      I4=0
      DO 810 K=I3,I
  810 I4=I4+ISEG(K)
      IF (KOUNT .GT. LMAX) GO TO 970
      LNK(KOUNT)=-I4
      KOUNT=KOUNT+1
C     INCLUDE THE JUMP AS A LINK FOR FUTURE REFERENCE
      ISEG(I)=ISEG(I)+1
  820 CONTINUE
C
      IF (KOUNT .GT. LMAX) GO TO 970
      LNK(KOUNT)=101
      NLINK=0
C
C     PACK OPTIONS AND LINKS INTO JOP.
C
      DO 840 I=1,NOV
      K=12
      DO 840 J=1,10
      K=K+1
      II=IP(K,I)
      DO 830 M=1,7
      K=K+1
  830 II=II*16+IP(K,I)
  840 JOP(J,I)=II
C
C     CALCULATE CONVERSION FACTORS FROM FUNDAMENTAL CONSTANTS
C
      IF (ICON .NE. 0) GO TO 850
      AUTOAN=A0*TEN10
      ANTOAU=ONE/AUTOAN
C     EXPRESS THE HARTREE IN J/PARTICLE
C     FROM A0=HBAR**2/(EMASS*ECHARG**2)
C     AND H=ECHARG**2/A0
C     CALCULATE H IN TWO STEPS TO AVOID EXPONENT UNDERFLOW PROBLEMS.
      T=(HBAR/EMASS)/A0
      H=T*HBAR/A0
C     GET CONVERSION FACTORS TO KCAL/MOL, KJ/MOL AND EV/PARTICLE.
      TOKJ=H*AVOGAD*TENM3
      TOKCAL=TOKJ/CAL
      TOEV=H/EV
      TOCM=TOEV*CM
C     FORCE CONVERSION: HARTREE/BOHR TO MDYNE
      FCONV=H*TEN8/A0
C     FORCE CONSTANT CONVERSION: HARTREE/ANGSTROM**2 TO MDYNE/ANGSTROM
      FCCONV=H*TEN18
C     DIPOLE MOMENT CONVERSION: ELECTRON*BOHR TO ESU*CM,
C     1D=10**-18 ESU*CM
      DCONST=ECHARG*A0*TEN20
C     ELECTIC FIELD CONVERSION: ATOMIC UNITS TO VOLTS/CM.
      VCM=H/(TEN2*A0*ECOUL)
  850 WRITE(IOUT,1060)AUTOAN,FCONV,FCCONV,DCONST,TOKCAL,TOKJ,TOEV,TOCM,
     1 VCM
      IF (ANTOAU*FCONV*FCCONV*DCONST .EQ. ZERO) GO TO 910
      IF (IOP(3).EQ.1 .AND. VCM.EQ.ZERO) GO TO 915
C
C     SAVE FUNDAMENTAL CONSTANTS IN FILE 49 FOR LATER USE.
C
      FUNCON( 1) = A0
      FUNCON( 2) = HBAR
      FUNCON( 3) = EMASS
      FUNCON( 4) = ECHARG
      FUNCON( 5) = AVOGAD
      FUNCON( 6) = CAL
      FUNCON( 7) = EV
      FUNCON( 8) = CM
      FUNCON( 9) = CC
      FUNCON(10) = TOKCAL
      FUNCON(11) = TOKJ
      FUNCON(12) = ZERO
      FUNCON(13) = ZERO
      FUNCON(14) = ZERO
      FUNCON(15) = ZERO
      FUNCON(16) = ZERO
      FUNCON(17) = ZERO
      FUNCON(18) = ZERO
      FUNCON(19) = ZERO
      FUNCON(20) = ZERO
      CALL TWRITE (49, FUNCON, NFCON, 1, NFCON, 1, 0)
C
C     PRINT THE TITLE, GET CHARGE AND MULTIPLICITY.
C
      WRITE(IOUT,1010)TITLE
      READ(IN,1150)ICHARG,MULTIP
      WRITE(IOUT,1160)ICHARG,MULTIP
      IF((MULTIP.EQ.1.AND.IOP(9).EQ.0).OR.(MULTIP.GE.1.AND.IOP(9).GT.0))
     1 RETURN
      WRITE(IOUT,1140)
      GO TO 990
C
  900 IOP(1)=1
      RETURN
C*
C     ERROR SECTION.
C*
C     CONVERSION FACTOR IS ZERO.
  910 WRITE(IOUT,1300)
      GO TO 990
C     VCM CONVERSION IS ZERO WITH FIELD OPTION.
  915 WRITE(IOUT,1310)
      GO TO 990
C     ILLEGAL OPTION(S).
  920 WRITE(IOUT,1200)ILINE
      GO TO 990
C     UNABLE TO DECODE SUBPARAMETER STRING.
  925 WRITE (IOUT,1320) I1I, I2I
      GO TO 990
C     ILLEGAL SUBPARAMETER.
  930 IF (IE1 .EQ. ' ') GO TO 935
      WRITE(IOUT,1090)IE1,IE2,I1I,I2I
      GO TO 990
C     ILLEGAL BLANK SUBPARAMETER.
  935 WRITE(IOUT,1330)IE1,IE2,I1I,I2I
      GO TO 990
C     INCOMPATIBLE SUBPARAMETER OR OPTION.
  940 IF (IE1 .EQ. ' ') GO TO 945
      WRITE(IOUT,1100)IE1,IE2,I1I,I2I
      GO TO 990
C     ILLEGAL BLANK SUBPARAMETER.
  945 WRITE(IOUT,1340)I1I,I2I
      GO TO 990
C     OPTION MUST BE SPECIFIED.
  950 WRITE(IOUT,1110)I1I,I2I
      GO TO 990
C     INVALID *PRT/*PUN OPTION.
  955 WRITE (IOUT,1370) I1I, I2I
      GO TO 990
C     SUBPARAMETER REQUIRED BUT NOT FOUND.
  960 WRITE(IOUT,1290)I1I,I2I
      GO TO 990
C     TOO MANY GROUPS/LINKS.
  970 WRITE(IOUT,1080)LMAX
      GO TO 990
C     ILLEGAL GROUP/LINK.
  980 K=100*NI+J
      WRITE(IOUT,1120)I,K
C
C     PRINT A PSEUDO-RANDOM ERROR MESSAGE.
C   *** JR *** this is a catchup for uninplemented features (e.g.
C   unimplemented documented behaviour when IOP(1) = -1 or -3....
C   *** JR ***
C
  990 K=NLINK+1991+NATOMS+ICHARG+MULTIP+NE+NBASIS
      DO 991 I=1,99
  991 K=K+IOP(I)
      K=IABS(K)
      K=K-4*(K/4)+1
      WRITE(IOUT,1250)
      WRITE(IOUT,1270)
      WRITE(IOUT,1271)
      WRITE(IOUT,1272)
      WRITE(IOUT,1273)
      WRITE(IOUT,1280)
      WRITE(IOUT,1281)
      WRITE(IOUT,1282)
      WRITE(IOUT,1283)
      IF (K .EQ. 1) THEN
         WRITE(IOUT,1050)
      ELSE IF (K .EQ. 2) THEN
         WRITE(IOUT,1220)
      ELSE IF (K .EQ. 3) THEN
         WRITE(IOUT,1240)
      ELSE
         WRITE(IOUT,1360)
      END IF
      WRITE (IOUT,1380) E(1)
      GO TO 5
      END
      SUBROUTINE FINDC(ILINE,ZCHAR,IST,NMAX,IC1,IC2,INEXT)
C*
C     THIS ROUTINE SEARCHES THE CHARACTER STRING ILINE FOR CHARACTER
C     ZCHAR, STARTING AT POSITION IST UNTIL NMAX. IC1 AND IC2 RETURN
C     THE FIRST 2 NON-BLANK CHARACTERS FOUND (OR BLANKS IF NO
C     CHARACTERS FOUND BEFORE ZCHAR). INEXT RETURNS THE POSITION OF
C     ZCHAR (OR NMAX IF NOT FOUND).
C*
      CHARACTER*1 ILINE, ZCHAR, IC1, IC2, I
C
      DIMENSION ILINE(NMAX)
C
      IC1 = ' '
      IC2 = ' '
      N = 0
C
      DO 10 INEXT=IST,NMAX
      I = ILINE(INEXT)
      IF (I .EQ. ZCHAR) RETURN
      IF (N.GT.1 .OR. I.EQ.' ') GO TO 10
      IF (N .EQ. 0) IC1 = I
      IF (N .EQ. 1) IC2 = I
      N = N+1
   10 CONTINUE
C
      INEXT = NMAX
      RETURN
      END
      SUBROUTINE ROUTE(IOP,IP,JUMP,IPRT,IPUN,ITYPE,ICHK,IGOPT,IBOPT,
     1 IME,IDIP,ILMO,IOEP,ILC,IFOR,ICC,IPMO,IFP,ICI,MRDCI,IPOL,IFREQ)
C*
C     --------------
C     U OF T VERSION
C     JUNE 1987
C     --------------
C*
C=ROUTE GENERATION
C1ROUTE-GENERATION
C     GENERATE THE DESIRED ROUTE FROM THE INFORMATION READ BY
C     LINK 0101 FROM THE *MOL, *PRT AND *PUN CARDS. THIS IS DONE BY
C     MODIFYING A BASIC ROUTE, GIVEN BELOW, DEPENDING MAINLY ON THE
C     RUN TYPE (ITYPE) AND THE PROPERTIES DESIRED.
C
C     THE ROUTES THAT ARE RECOGNIZED ARE A SINGLE CALCULATION (ITYPE=1),
C     Z MATRIX GEOMETRY OPTIMIZATIONS (ITYPE=2), FORCE OPTIMIZATIONS
C     (ITYPE=3), SURFACE SCANS (ITYPE=4), PMO RESTARTS (ITYPE=5),
C     ENERGY DECOMPOSITION / BSSE (ITYPE=6), AND CHECK RUNS (ICHK=0).
C
C     IN THE BASIC ROUTE, THE GROUPS REQUIRED ARE INDICATED BY A *,
C     THE OPTIONAL ONES BY (*), AND BLANKS INDICATE THAT GROUP WILL
C     BE SUPRESSED LATER, UNLESS MODIFIED BY THE *IOP CONTROL CARDS.
C*
C     SEQ  GROUP   SINGLE  ZMOPT  GBOPT  SCAN  PMO=R  ED/BS  CHECK
C                                              MRDCI
C*
C      1     2        *      *      *      *     *      *      *
C      2     3        *      *      *      *     *      *      *
C      3     4        *      *      *      *     *      *      *
C      4     5        *      *      *      *    (*)     *      *
C      5     6        *      *      *      *     *      *      *
C      6     8       (*)    (*)    (*)    (*)                 (*)
C      7     9       (*)    (*)    (*)    (*)                 (*)
C      8     7       (*)    (*)     *     (*)                 (*)
C      9     2               *             *                  (*)
C     10     3               *      *     (*)
C     11     5               *      *      *
C     12     6                             *
C     13     8                            (*)
C     14     9                            (*)
C     15     7                      *     (*)
C     16     2               *             *
C     17     3              (*)    (*)
C     18     6               *      *                  (*)
C     19     8              (*)    (*)                 (*)
C     20     9              (*)    (*)                 (*)
C     21     7              (*)                        (*)
C==
C*
C/
      DIMENSION IOP(99),IP(92,21),JUMP(21),IPRT(10),IPUN(10)
C
C     SET SOME AUXILIARY VARIABLES.
C
      IDINTS=0
      IF (IDIP.NE.0 .OR. ILMO.NE.0) IDINTS=1
C
C     IFSCAN IS NORMALLY 1, BUT IS SET TO 0 FOR SCAN RUNS WHERE THE
C     FIELD IS BEING SCANNED INSTEAD OF THE GEOMETRY.
      IFSCAN = 1
      IF (ITYPE.EQ.4 .AND. IP(19,1).NE.0) IFSCAN = 0
C
      IDF=IOP(7)
      ISIZE=0
      IF (ILMO .NE. 2) GO TO 10
      ISIZE=1
      ILMO=1
C
C     SELECT SCF LINK.
C
   10 ISCF=IOP(9)+61
C
C     GET GRADIENTS FLAG.
C
      IFORCE=62
      IF (IBOPT .NE. 0) IFORCE=61
      IGRAD=0
      IF (ITYPE .EQ. 3) IGRAD=1
      IF (IME .EQ. 4) THEN
         IGRAD = 0
         IFORCE = 62
      END IF
      IF (IFREQ .NE. 0) IFOR = 1
C
C     SET FIRST POINT FLAG FOR SINGLE POINT, SCAN AND ED/BSSE RUNS.
C
      IF (ITYPE.EQ.1 .OR. ITYPE.EQ.4 .OR. ITYPE.EQ.5 .OR. ITYPE.EQ.6)
     1 IFP = 1
C
C     SET OEP FLAG IF POLARIZATION REQUESTED.
C
      IF (IPOL .EQ. 1) IOEP = 1
C
C     START ROUTE GENERATION, ONE SEQUENCE LINE AT A TIME.
C
C     GEOMETRY LINK.
C
      IP(62,1)=1
C
C     BASIS SET / INTEGRALS.
C
      IP(61,2)=1
      IF (IP(13,3).EQ.1) IP(20,2)=1
      IF (ITYPE.EQ.5 .OR. ICI.EQ.2) GO TO 20
      IP(62,2)=1
      IP(63,2)=IFP*IDINTS
      IF (IOP(3) .NE. 0) IP(63,2)=1
      IP(66,2)=1
      IP(68,2)=IDF
      IF (IFREQ.EQ.1 .OR. IFREQ.EQ.2) THEN
         IP(69,2) = 1
         IP(70,2) = 1
      END IF
      IF (ITYPE .EQ. 6) IP(71,2) = 1
C
C     INITIAL GUESS.
C
   20 IP(62,3)=1
      IF (ITYPE .EQ. 6) IP(63,3) = 1
C
C     SCF.
C
      IF (ITYPE.EQ.5) GO TO 30
      IP(ISCF,4)=1
      IF (ITYPE .EQ. 6) IP(ISCF+4,4) = 1
      IF (MRDCI.EQ.1) IP(ISCF,4)=0
      IP(19,4)=IPMO*IFP
C
C     POPULATION ANALYSIS / PMO.
C
      IP(61,5)=1
      IP(13,5)=IFP*IDIP
      IP(15,5)=IPRT(6)
      IP(16,5)=IPRT(3)
      IP(17,5)=IPRT(4)
      IP(18,5)=IPRT(7)
      IF (IFP.EQ.0) GO TO 40
      IF (ITYPE.EQ.2 .OR. ITYPE.EQ.3) GO TO 30
      IP(19,5)=IPUN(1)
      IP(20,5)=IPUN(2)
      IP(22,5)=IPUN(3)
      IP(23,5)=IPUN(4)
      IP(24,5)=IPUN(5)
   30 IP(62,5)=IPMO
C
C     END OF PMO OR MRDCI JOBS.
C
      IF (ITYPE.EQ.5) RETURN
C
C     ENERGY DECOMPOSITION / BSSE CORRECTION.
C
      IF (ITYPE .EQ. 6) THEN
         JUMP(5) = 2
         IP(63,5) = 1
         RETURN
      END IF
C
C     LMO / OEP.
C
      IP(61,6)=ILMO
      IP(14,6)=ISIZE
      IF (ITYPE.EQ.1 .OR. ITYPE.EQ.4) IP(15,6)=IPUN(8)
      IP(18,6)=IPRT(9)
      IP(62,6)=IOEP
      IP(20,6)=ILC
      IP(22,6)=IPRT(9)
      IP(63,6)=IPOL
      IF (((ITYPE.EQ.2.OR.ITYPE.EQ.3).AND.IFP.EQ.1) .OR. ITYPE.EQ.4)
     1 IP(24,6) = 1
C
C     CI.
C
      IF (ICI.EQ.0) GO TO 40
      IP(61,7)=1
      IP(62,7)=1
      IP(63,7)=1
      IP(64,7)=1
      IP(65,7)=1
      IP(66,7)=1
C
C     DERIVATIVES / OPTIMIZATION.
C
   40 IF (ITYPE.NE.3 .AND. IFOR.EQ.0) GO TO 45
      IF (ITYPE.EQ.2 .AND. IFP.EQ.0) GO TO 45
      IP(IFORCE,8) = MIN0(IGRAD+IFOR*IFP, 1)
      IF (IFORCE.EQ.61 .OR. IP(IFORCE,8).EQ.0) GO TO 44
      IF (IFREQ.NE.1 .AND. IFREQ.NE.2) THEN
         IP(63,8)=1
         IP(64,8)=IDF
      ELSE
         IP(IFORCE,8) = 0
         IP(68,8) = 1
         IP(69,8) = 1
         IP(70,8) = 1
      END IF
   44 IP(71,8)=1
      IP(14,8)=IME
      IP(15,8)=IGOPT
      IP(16,8)=ICC
      IP(17,8)=IBOPT
      IP(19,8)=IPUN(10)
C
C     END OF FIRST POINT JOBS.
C
   45 IF (ITYPE.EQ.1) RETURN
      IF (ITYPE.EQ.3) GO TO 50
C
C     ZMOPT OR SSCAN.
C
C     GEOMETRY REVISITED.
C
      IP(62,9)=1
      IP(13,9)=ITYPE/2
      IF (ITYPE.EQ.4 .AND. ICHK.EQ.0) RETURN
      IP(15,9)=IPUN(10)
   50 IF (ICHK.EQ.0) GO TO 200
      IF (IFSCAN .EQ. 0) GO TO 65
C
C     BASIS SET / INTEGRALS REVISITED.
C
      IF (IBOPT.EQ.0) GO TO 60
      IP(61,10)=1
      IP(14,10)=1
   60 IP(62,10)=1
      IF (ITYPE.EQ.4) IP(63,10)=IDINTS
      IF (IOP(3) .NE. 0) IP(63,10)=1
      IP(66,10)=1
      IP(68,10)=IDF
C
C     SCF REVISITED.
C
   65 IP(ISCF,11)=1
      IP(19,11)=IPMO
C
C     POPULATION ANALYSIS / PMO REVISITED (SURFACE SCANS ONLY).
C
      IF (ITYPE .NE. 4) GO TO 70
      IP(61,12)=1
      IP(15,12)=IPRT(6)
      IP(17,12)=IPRT(4)
      IF (IFSCAN .EQ. 0) GO TO 66
      IP(13,12)=IDIP
      IP(16,12)=IPRT(3)
      IP(18,12)=IPRT(7)
   66 IP(62,12)=IPMO
C
C     LMO / OEP REVISITED (SURFACE SCANS ONLY).
C
      IP(61,13)=ILMO
      IP(14,13)=ISIZE
      IP(18,13)=IPRT(9)
      IP(62,13)=IOEP
      IP(20,13)=ILC
      IP(22,13)=IPRT(9)
      IP(24,13) = 2
      IP(63,13)=IPOL
C
C     CI REVISITED (SURFACE SCANS ONLY).
C
      IF (ICI.EQ.0) GO TO 70
      IP(61,14)=1
      IP(63,14)=1
      IP(64,14)=1
      IP(66,14)=1
      IP(16,14)=1
C
C     DERIVATIVES / OPTIMIZATION REVISITED.
C
   70 IF (ITYPE.EQ.2) GO TO 80
      IF (ITYPE.EQ.4 .AND. IFOR.EQ.0) GO TO 80
      IF (ITYPE.EQ.3) IP(IFORCE,15)=IGRAD
      IF (ITYPE.EQ.4) IP(IFORCE,15)=IFOR
      IF (IP(IFORCE,15).EQ.0 .OR. IFORCE.EQ.61) GO TO 75
      IP(63,15)=1
      IP(64,15)=IDF
   75 IP(71,15)=1
      IF (ITYPE.EQ.3) IP(13,15)=1
      IP(14,15)=IME
      IP(15,15)=IGOPT
      IP(16,15)=ICC
      IP(17,15)=IBOPT
      IF (ITYPE.EQ.4) GO TO 80
      IP(19,15)=IPUN(10)
C     SET JUMP FOR SIMULTANEOUS OPTIMIZATIONS.
      JUMP(15)=10
C
C     BASIS SET REVISITED (BOPT ONLY).
C
      IP(61,17)=IBOPT
      IP(14,17)=1
      GO TO 90
C
C      GEOMETRY REVISITED (ZMOPT OR SSCAN).
C
   80 IP(62,16)=1
      JUMP(16)=10
      IF (IFSCAN .EQ. 0) JUMP(16) = 11
      IP(13,16)=ITYPE/2
      IF (ITYPE.EQ.4) RETURN
      IP(15,16)=IPUN(10)
C
C     INTEGRALS AT FINAL POINT OF OPTIMIZATION JOBS.
C
   90 IP(63,17)=IDINTS
      IF (IFREQ.EQ.2 .OR. IFREQ.EQ.3) THEN
         IP(69,17) = 1
         IP(70,17) = 1
      END IF
C
C     POPULATION / PMO AT FINAL POINT OF OPTIMIZATION JOBS.
C
  200 IP(61,18)=1
      IP(13,18)=IDIP
      IP(15,18)=IPRT(6)
      IP(16,18)=IPRT(3)
      IP(17,18)=IPRT(4)
      IP(18,18)=IPRT(7)
      IP(19,18)=IPUN(1)
      IP(20,18)=IPUN(2)
      IP(22,18)=IPUN(3)
      IP(23,18)=IPUN(4)
      IP(24,18)=IPUN(5)
      IP(27,18)=1
      IP(62,18)=IPMO
C
C     LMO / OEP AT FINAL POINT OF OPTIMIZATION JOBS.
C
      IP(61,19)=ILMO
      IP(14,19)=ISIZE
      IP(15,19)=IPUN(8)
      IP(18,19)=IPRT(9)
      IP(62,19)=IOEP
      IP(20,19)=ILC
      IP(22,19)=IPRT(9)
      IF (IFP .EQ. 1) IP(24,19) = 2
      IP(63,19)=IPOL
C
C     CI AT FINAL POINT OF OPTIMIZATION JOBS.
C
      IF (ICI.EQ.0) GO TO 100
      IF (ICHK.EQ.0 .AND. IFP.EQ.1) RETURN
      IP(61,20)=1
      IF (IFP.EQ.0) IP(62,20)=1
      IP(63,20)=1
      IP(64,20)=1
      IF (IFP.EQ.0) IP(65,20)=1
      IP(66,20)=1
      IP(16,20)=IFP
C
C     DERIVATIVES AT FINAL POINT OF OPTIMIZATION JOBS.
C
  100 IF (IFOR.EQ.0) RETURN
      IP(IFORCE,21)=1
      IF (IFORCE.EQ.61) GO TO 110
      IF (IFREQ.NE.2 .AND. IFREQ.NE.3) THEN
         IP(63,21)=1
         IP(64,21)=IDF
      ELSE
         IP(IFORCE,21) = 0
         IP(68,21) = 1
         IP(69,21) = 1
         IP(70,21) = 1
      END IF
  110 IP(71,21)=1
      IP(16,21)=ICC
      RETURN
      END
