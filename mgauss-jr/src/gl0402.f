C     GL0402       26 OCT 90                                         MRP
C?IBM/GLD/GBR/VAX/UNX
      SUBROUTINE GUESS
C??
C?CDC
C     PROGRAM GUESS
C??
C=INITIAL GUESS
C INITIAL COEFFICIENT/DENSITY MATRIX GUESS.
C *****************************************
C
C1INTRODUCTION
C     LINK 0402
C*
C     --------------
C     U OF T VERSION
C     APRIL 1987
C     --------------
C*
C     THIS IS A PROGRAM WHICH PRODUCES AN INITIAL GUESS TO THE
C     SOLUTION OF THE SCF EQUATIONS. THIS GUESS IS IN THE FORM OF
C     MOLECULAR ORBITAL COEFFICIENTS AND/OR DENSITY MATRICES WHICH ARE
C     STORED ON THE APPROPRIATE READ-WRITE FILES.
C     CURRENTLY THE CLOSED SHELL AND UHF OPEN SHELL SCF ROUTINES
C     REQUIRE DENSITY MATRICES, WHILE THE RHF OPEN SHELL ROUTINE
C     REQUIRES COEFFICIENTS.
C
C     THERE ARE SEVERAL WAYS IN WHICH THIS GUESS MAY BE PRODUCED.
C     ONE EASY WAY IS TO DIAGONALIZE THE CORE HAMILTONIAN. IN GENERAL,
C     THIS IS NOT A VERY GOOD GUESS, BUT IT IS APPLICABLE TO ANY BASIS
C     SET, AND IS AVAILABLE AS AN OPTION.
C
C     ANOTHER TYPE OF GUESS IS CALLED THE HUCKEL GUESS, WHICH IS
C     MODELED AFTER EXTENDED HUCKEL MO THEORY. ESSENTIALLY, THE
C     INITIAL GUESS IS FORMED FROM INTERNALLY STORED CONSTANTS (FOR
C     MORE DETAILS SEE SUBROUTINE HUCKEL). THESE CONSTANTS WERE
C     DETERMINED FROM STUDIES ON INTERNAL MINIMAL
C     BASIS SETS (STO-NG(*)), SO THE USE OF THIS
C     TYPE OF GUESS WITH BASES OTHER THAN THESE IS NOT RECOMMENDED.
C
C     THIS HUCKEL GUESS CAN BE APPLIED TO OTHER BASES IN THE
C     FOLLOWING WAY:  THE GUESS MO COEFFICIENTS ARE FORMED FROM
C     INTERNAL DATA AS IF THERE WERE A BASIS P ON THE MOLECULE, WHERE
C     P WOULD BE STO-NG. THE DEFAULT IS P = STO-3G.
C     THE GUESS MO VECTORS IN THE DESIRED BASIS ARE THEN FORMED
C     BY CHOOSING THE VECTORS WHICH GIVE THE BEST (LEAST-SQUARES)
C     FIT TO THOSE DESCRIBED IN THE BASIS P. SINCE THIS WILL
C     USUALLY PRODUCE FEWER THAN NBASIS VECTORS, THE MO COEFFICIENT
C     MATRIX IS COMPLETED WITH ORTHONORMAL VECTORS OF THE PROPER
C     SYMMETRY. THE FULL MATRIX IS ACTUALLY ONLY REQUIRED FOR
C     THE RHF SCF ROUTINE USED IN MONSTERGAUSS. THIS PROCEDURE
C     IS CALLED A PROJECTED HUCKEL GUESS, AND IS APPLICABLE TO ANY
C     BASIS SET.
C
C     A STILL BETTER TYPE OF GUESS, USUALLY, IS TO READ THE
C     COEFFICIENT OR DENSITY MATRIX FROM CARDS. IF THE MATRIX READ IN
C     IS FOR A BASIS OTHER THAN THE ONE USED IN THE CURRENT RUN, THE
C     MATRIX CAN BE PROJECTED (BY A LEAST-SQUARES FIT) ONTO THE DESIRED
C     BASIS. THE PROJECTED MO VECTORS ARE ORTHONORMALIZED (AS THEY ARE
C     FOR A PROJECTED HUCKEL GUESS), OR THE PROJECTED DENSITY MATRIX
C     MAY BE MADE IDEMPOTENT.
C
C     THE OPTIONS WHICH DETERMINE THE INITIAL GUESS PROCEDURE
C     TO BE USED ARE DESCRIBED BELOW.
C
C     PARTS OF THIS LINK ARE LOOSELY BASED ON GAUSSIAN 80.
C
C=INITIAL GUESS
C1OPTIONS
C     ******************************************************************
C     OPTIONS ... IOP()     FOR LINK 0402
C     ******************************************************************
C     IOP(13) ... TYPE OF INITIAL GUESS.
C     0  EXTENDED HUCKEL GUESS (USE ONLY FOR INTERNAL STO-NG BASES).
C     1  PROJECTED HUCKEL GUESS.
C     2  DIAGONALIZE THE CORE HAMILTONIAN.
C     3  READ THE DENSITY MATRIX - THIS SETS IOP(26)=1.
C     4  READ THE COEFFICIENT MATRIX - THIS SETS IOP(25)=1.
C     5  NONE - USE C FROM DISK.
C     6  DIAGONALIZE SCALED HAMILTONIAN.
C     7  PMO RESTART - THIS SETS IOP'S 22, 23, 25 AND 27 TO 1.
C
C     IOP(14) ... SEE LINK 0401.
C
C     IOP(15) ... BLOCKING OF OVERLAP MATRIX FOR HUCKEL-TYPE GUESSES.
C     0  BLOCK THE OVERLAP MATRIX. USE THIS OPTION TO REPRODUCE A RUN
C     FROM GAUSSIAN 70. IF IOP(13)=1, THE BASIS SET TO BE PROJECTED
C     (STO-NG) WILL BE BLOCKED. THE DIAGONAL ELEMENTS OF THE
C     HUCKEL MATRIX ARE SCANNED TO REMOVE ACCIDENTAL DEGENERACIES.
C     1  AS FOR IOP(15)=0, BUT THE DIAGONAL ELEMENTS OF THE HUCKEL
C     MATRIX ARE NOT SCANNED.
C     2  DO NOT BLOCK.
C
C     IOP(16) ... PROJECTION OF DENSITY OR COEFFICIENTS.
C     0  NO.
C     1  PROJECT THE DENSITY OR COEFFICIENT MATRIX
C     ONTO THE CURRENT BASIS (FOR IOP(13) = 1, 3, 4 OR 5).
C     NOTE: FOR THIS OPTION TO WORK SUCCESSFULLY, THE BASIS SET
C     PROJECTED FROM MUST HAVE BEEN SET UP IN LINK 0301 - SEE IOP(20) OF
C     THAT LINK, AND GUESS=S (OR =V OR =G) ON THE *MOL CARD.
C     THE COEFFICIENTS TO BE PROJECTED MAY EITHER BE READ IN (ASSUMED
C     FOR GU=S/V/G), OR ALREADY ON DISK IN FILE 'IMAT' (TO USE
C     THIS OPTION, SPECIFY GU=S/V/G THEN SET OPTION 13 OF LINK 0402
C     TO 5 WITH THE FOLLOWING *IOP CARD:
C        3  13   5  SET GU=N IN LINK 0402 FOR PROJECTION FROM DISK
C     SEE LINK 0100A FOR DETAILS ON THE *IOP FEATURE).
C     THE DENSITY TO BE PROJECTED GENERALLY COMES FROM CARDS.
C     TO PROJECT THE DENSITY ALREADY ON DISK, SET IOP(20) IN LINK 0301
C     APPROPRIATELY, GU=N, IOP(16)=1 AND IOP(26)=0 FROM THIS LINK.
C
C     IOP(17) ... SCALE FACTOR K/2 FOR OFF-DIAGONAL ELEMENTS.
C     0  USE DEFAULT VALUES OF 0.875 FOR MINIMAL (STO-NG) BASES
C     FOR EXTENDED HUCKEL GUESS (IOP(13)=0) AND DEFAULT VALUES
C     FOR SCALED HAMILTONIAN GUESS (IOP(13)=6).
C     N  SCALE = 0.4375*N FOR HUCKEL.
C        SCALE = SCALE+0.1*N FOR SCALED HAMILTONIAN (SEE IOP(34)).
C
C     IOP(18) ... ALTERATION OF CONFIGURATION.
C     0  NO.
C     1  READ IN (72I1) NBASIS VALUES FOR THE OCCUPATION LEVEL
C     OF EACH MO. NORMALLY ONLY VALUES OF 0 AND 1 ARE USED, TO INDICATE
C     EMPTY AND OCCUPIED MO. LARGER INTEGERS MAY BE USED TO PARTIALLY
C     OCCUPY AN MO (OCCUPANCY=1/N). NOTE THAT IF THIS IS AN OPEN SHELL
C     RUN, GUESS WILL EXPECT TWO SETS OF DATA, ONE FOR THE ALPHA SPIN
C     ORBITALS, AND THE SECOND FOR THE BETA SPIN ORBITALS. THESE CARDS
C     FOLLOW ANY MATRICES TO BE READ (SEE IOP'S 22-28).
C     THIS OPTION CAN NOT BE USED FOR RHF / MC-SCF RUNS.
C
C     IOP(19) ... ADJUSTMENT OF FRACTIONAL OCCUPANCY.
C     0  NO.
C     1  ADJUST THE FRACTIONAL OCCUPANCY OF DEGENERATE MO'S FOR EQUAL
C     OCCUPANCY (ONLY IF IOP(18)=0). THIS OPTION WAS THE DEFAULT
C     MODE OF OPERATION IN GAUSSIAN 70, BUT IS SELDOM REQUIRED.
C
C     IOP(20) ... PRINTING OF GUESS COEFFICIENT/DENSITY MATRIX.
C     0  NO.
C     1  PRINT C.
C     2  PRINT C AND D.
C     3  PRINT D.
C
C     IOP(21) ... PRINT SCALED HAMILTONIAN (FOCK MATRIX)
C     0  NO.
C     1  YES.
C
C     IOP(22) ... INPUT OF THE S MATRIX.
C     0  NO.
C     1  YES.
C
C     IOP(23) ... INPUT OF THE H MATRIX.
C     0  NO.
C     1  YES.
C
C     IOP(24) ... INPUT OF THE DIPOLE MOMENT INTEGRALS.
C     0  NO.
C     1  YES.
C
C     IOP(25) ... INPUT OF THE COEFFICIENTS AND ORBITAL ENERGIES.
C     0  NO.
C     1  YES.
C
C     IOP(26) ... INPUT OF THE DENSITY MATRIX.
C     0  NO.
C     1  YES.
C
C     IOP(27) ... INPUT OF THE FOCK MATRIX.
C     0  NO.
C     1  YES.
C
C     IOP(28) ... INPUT OF THE LMO COEFFICIENTS.
C     0  NO.
C     1  YES.
C
C     IOP(29) ... UNIT NUMBER FOR MATRIX DATA INPUT (IOP'S 22-28, 35).
C     0  READ FROM THE INPUT STREAM (UNIT IN FROM COMMON /IO/).
C     N  READ THE MATRICES FROM UNIT N.
C
C     IOP(30) ... MAXIMUM NUMBER OF ITERATIONS TO MAKE D IDEMPOTENT.
C     0  DO NOT MAKE DENSITY IDEMPOTENT.
C     N  25*N ITERATIONS.
C
C     IOP(31) ... POLARIZATION FUNCTIONS ADDED TO INTERNAL BASIS SETS.
C     0  NONE (THIS IS FORCED FOR PROJECTED HUCKEL GUESSES).
C     1  D ORBITALS ON NA-AR.
C     2  D ORBITALS ON LI-NE (FOR N-M1G/N-M11G BASES).
C     3  COMBINATION OF 1 AND 2.
C     4  P ORBITALS ON H/HE (FOR N-M1G/N-M11G BASES).
C     5  COMBINATION OF 1 AND 4.
C     6  COMBINATION OF 2 AND 4.
C     7  COMBINATION OF 1, 2 AND 4.
C     THIS IOP APPLIES ONLY TO EXTENDED HUCKEL GUESSES. SINCE ONLY
C     STO-NG(*) BASES MAY USE THE EXTENDED HUCKEL GUESS, THE ONLY
C     VALUES OF IOP(31) CURRENTLY SUPPORTED ARE 0 AND 1.
C
C     IOP(32) ... PERFORM INITIAL GUESS ON CHECK RUNS.
C     0  NO.
C     1  YES.
C
C     IOP(33) ... READ REPLACEMENT EXTENDED HUCKEL MATRIX ELEMENTS.
C     0  NO.
C     1  YES.
C
C     IOP(34) ... FOR SCALED HAMILTONIAN GUESS (ONLY IF IOP(17).NE.0).
C     0  USE  N (INCREASE SCALE FACTOR).
C     1  USE -N (DECREASE SCALE FACTOR).
C
C     IOP(35) ... INPUT OF THE LMO 'T' MATRIX.
C     0  NO.
C     1  YES.
C
C     IOP(36) TO IOP(60) ... NOT USED.
C     ******************************************************************
C*
C1MATRIX-INPUT
C     FOR A PROJECTED INITIAL GUESS, NO MATRICES SHOULD BE READ, EXCEPT
C     THE DENSITY OR COEFFICIENTS FOR BASIS SET P WHEN P IS PROJECTED
C     ONTO THE CURRENT BASIS (IOP(13) IS 3 OR 4 AND IOP(16)=1).
C*
C     NOTE THAT THE INPUT MATRICES MUST BE IN THE ORDER GIVEN ABOVE,
C     NAMELY, S, H, XYZ, C, D, F AND L. FOR C, D, F AND L, THERE MUST
C     BE 2 MATRICES (ONE ALPHA, ONE BETA) FOR UHF OPEN SHELL RUNS.
C     FOR RHF OPEN SHELL RUNS, THERE ARE TWO D AND L MATRICES (ONE
C     ALPHA, ONE BETA) AND ONE C AND F MATRIX.
C     THE ONLY F MATRIX READ FOR RHF RUNS IS FOR THE CLOSED SHELL GROUP.
C     DETAILS MAY BE FOUND IN ROUTINE READER.
C*
C     FOR RHF OPEN SHELL RUNS, THE CONTROL CARDS SPECIFYING THE
C     OCCUPANCY AND GROUPS PRECEED ANY MATRICES READ. SEE ROUTINE RHFIN
C     FOR DETAILS (LINK 0401).
C==
C
C/
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA, NB=#NB)
C     PARAMETER (NF=#NF, NC=#NC, NE=2*NB)
C##
      PARAMETER (NA= 36, NB=200)
      PARAMETER (NF=120, NC=120, NE=2*NB)
C###
      PARAMETER (ZERO=0.0D0, TWO=2.0D0)
      COMMON /A/ IOP(99)
      COMMON /A/ NATOMS,ICHARG,MULTIP,IAN(NA),NAE,NBE,NED,NBASIS,C(NA,3)
      COMMON /A/ CDUM(4),ICDUM(401)
C
      COMMON/C402A/A(NB,NB),DUMA(NB)
      COMMON/C402B/B(NB,NB)
      COMMON/C402C/V(NB,NB)
      COMMON/C402D/VV(NB),AA(NB),BB(NB),
     1 RN(NF),OC(9),AAA(55),BBB(55),COEF(NC),OCCA(9),OCCB(9),
     2 ICONF(NC),IRHF,NCONF,NCORE,NVAL,NOPEN,NFOCK,IMO(4),IORDER(NB)
C
      COMMON/IO/IN,IOUT,IODUM(15),NFILE(100,2)
C
      DIMENSION EIG(NE),MAP(NB)
C
      EQUIVALENCE (EIG(1),AA(1)), (ORDER,IORDER(1))
C
      DATA PT5/0.5D0/, THREE/3.0D0/
      DATA PT4375/0.4375D0/, CRIT/5.0D-5/
C?IBM/GLD/GBR/VAX/UNX
      DATA IINT/1/
C??
C?CDC
C     DATA IINT/2/
C??
 1000 FORMAT(/'0EH INITIAL GUESS ... SCALE FACTOR (K/2) =',F7.4)
 1010 FORMAT(/'0PH INITIAL GUESS ... SCALE FACTOR (K/2) =',F7.4)
 1020 FORMAT(/'0DIAGONALIZATION OF CORE HAMILTONIAN INITIAL GUESS')
 1030 FORMAT(/'0READ DENSITY')
 1040 FORMAT(/'0READ COEFFICIENTS')
 1050 FORMAT(/'0NO INITIAL GUESS - USE C/D FROM DISK')
 1060 FORMAT(/'0PMO RESTART')
 1070 FORMAT(' COEFFICIENTS PROJECTED TO CURRENT BASIS')
 1080 FORMAT(' DENSITY PROJECTED TO CURRENT BASIS')
 1090 FORMAT('1INITIAL GUESS COEFFICIENTS',I10,' ALPHA SPIN ELECTRONS,',
     $ I5,' BETA SPIN ELECTRONS')
 1100 FORMAT('1INITIAL GUESS DENSITY')
 1110 FORMAT(' SMALLEST EIGENVALUE OF OVERLAP IS',1PD13.5)
 1120 FORMAT('0AT ITERATION',I4,', DENSITY IDEMPOTENT TO',1PD13.5)
 1130 FORMAT('0PROJECTED GUESS USED, BUT BASIS SET TO PROJECT FROM',
     $ ' NOT PROVIDED')
 1140 FORMAT('1INITIAL GUESS COEFFICIENTS (ALPHA SPIN)',I10,
     $ ' ELECTRONS')
 1150 FORMAT('1INITIAL GUESS COEFFICIENTS (BETA SPIN)',I10,
     $ ' ELECTRONS')
 1160 FORMAT('0EH GUESS NOT AVAILABLE FOR THIS BASIS SET')
 1180 FORMAT(/'0DIAGONALIZATION OF SCALED HAMILTONIAN INITIAL GUESS')
 1190 FORMAT ('0*** SMALLEST EIGENVALUE OF OVERLAP IS TOO SMALL - ',
     1 'PROBABLE CAUSES:'/5X,'MOST LIKELY: 2 ATOMS ARE AT THE SAME ',
     2 'CARTESIAN COORDINATES - CHECK THE GEOMETRY.'/
     3 5X,'LESS LIKELY: BASIS SET ERROR, WITH ZERO EXPONENT(S) AND/OR ',
     4 'CONTRACTION COEFFICIENT(S),'/5X,'OR THE BASIS SET IS REDUNDANT.'
     5 )
C*
      IF (IOP(4).EQ.1 .OR. IOP(4).GE.4) RETURN
      IOP9=IOP(9)
C
C     RECOVER RHF PARAMETERS AND MO ORDER FOR RHF OPEN SHELL RUNS.
C
      IF (IOP9.NE.2) GO TO 5
      CALL TREAD (5, EIG, NFILE(5,1), 1, NFILE(5,1), 1, 0)
      I = (NBASIS*IINT+2-IINT) / 2
      CALL TREAD (32, ORDER, I, 1, I, 1, 0)
C
    5 IGUESS=IOP(13)
      IBASIS=NBASIS
      IPROJ=0
      IOS=8
C
C     SET THE NUMBER OF D ORBITALS TO BE USED FOR PROJECTION RUNS.
C
      IOP8 = IOP(8)
      IF (IOP(16) .EQ. 1) IOP8 = 1
C
C     MODE IS 0 FOR CLOSED SHELL OR IF BOTH DENSITY MATRICES ARE
C     FORMED FROM THE SAME COEFFICIENTS, 1 FOR ALPHA SPIN, 2 FOR BETA
C     SPIN.
C
      MODE=0
      IOP20=IOP(20)
      IDOGU=IOP(10)+IOP(32)
      I=IGUESS+1
      GO TO (10,20,30,40,50,60,80,70),I
C
C     EH.
C
   10 IF(IOP(6).EQ.0)GO TO 11
      WRITE(IOUT,1160)
      IOP(1)=-2
      RETURN
C
   11 SCALE=PT4375*TWO
      IF(IOP(17).NE.0)SCALE=PT4375*DFLOAT(IOP(17))
      WRITE(IOUT,1000)SCALE
      GO TO 82
C
C     PH.
C
   20 SCALE=PT4375*TWO
      IF(IOP(17).NE.0)SCALE=PT4375*DFLOAT(IOP(17))
      WRITE(IOUT,1010)SCALE
      IBASIS=IOP(93)
      IPROJ=1
      IOS=31
      IOP(31)=0
      GO TO 82
C
C     HDIAG.
C
   30 WRITE(IOUT,1020)
      IOF=13
      GO TO 82
C
C     DIN.
C
   40 WRITE(IOUT,1030)
      IOP(26)=1
      GO TO 55
C
C     CIN.
C
   50 WRITE(IOUT,1040)
      IOP(25)=1
   55 IF(IOP9.EQ.1)MODE=1
      IF(IOP(16).EQ.0)GO TO 82
      IBASIS=IOP(93)
      IPROJ=1
      GO TO 82
C
C     NO GUESS.
C
   60 WRITE(IOUT,1050)
      GO TO 55
C
C     PMO RESTART.
C
   70 WRITE(IOUT,1060)
      IOP(22)=1
      IOP(23)=1
      IOP(25)=1
      IOP(27)=1
      GO TO 82
C
C     SCALE THE CORE HAMILTONIAN
C
   80 WRITE(IOUT,1180)
      CALL FGUESS(IBASIS,IOP8)
      IOP(13)=2
      IGUESS=2
      IOF=15
C
   82 IF(IBASIS.EQ.0)GO TO 900
      CALL READER(IBASIS,IOP)
      IF(IGUESS.GE.7.OR.IOP(1).NE.0)RETURN
      IF(IGUESS-3)90,240,230
C
C     GET TRANSFORMATION MATRIX S**(-1/2).
C
   90 IF(IDOGU.EQ.0)GO TO 95
      CALL TREAD(IOS,B,NB,NB,IBASIS,IBASIS,1)
C
C     BLOCK IF NECESSARY.
C
      IF(IGUESS.LE.1.AND.IOP(15).LE.1)CALL BLOCK(B,IBASIS,IOP8)
      CALL NVSQRT(IBASIS,IOP(1))
      WRITE(IOUT,1110)VV(1)
      IF (IOP(1) .EQ. 0) GO TO 95
      WRITE (IOUT,1190)
      RETURN
C
C     GET A HAMILTONIAN FROM SOMEWHERE - EH OR DISK.
C
   95 IF(IGUESS.EQ.2)GO TO 100
      CALL HUCKEL(IOS,IBASIS,SCALE,IDOGU)
      IF(IOP(1).NE.0)RETURN
      IF(IDOGU.EQ.0)GO TO 200
      GO TO 110
C
  100 IF(IDOGU.EQ.0)GO TO 200
      CALL TREAD(IOF,A,NB,NB,IBASIS,IBASIS,1)
C
C     TRANSFORM BY S**(-1/2), DIAGONALIZE AND BACK-TRANSFORM.
C
  110 CALL MATPAC(V,A,B,IBASIS,1)
      CALL MATPAC(B,V,A,IBASIS,3)
      CALL TRED12(IBASIS,NB,A,B,AA,BB,2)
      CALL MATPAC(V,B,A,IBASIS,1)
C
C     COPY EIGENVALUES INTO BETA POSITION.
C
      DO 120 I=1,IBASIS
  120 EIG(IBASIS+I)=EIG(I)
      IF(IGUESS.EQ.1)GO TO 300
  180 IF(IOP20.EQ.0.OR.IOP20.EQ.3)GO TO 200
      IF(MODE-1)181,182,183
  181 WRITE(IOUT,1090)NAE,NBE
      GO TO 190
  182 WRITE(IOUT,1140)NAE
      GO TO 190
  183 WRITE(IOUT,1150)NBE
  190 CALL GBSOUT(A,EIG,NB,NB,NBASIS,1)
C
C     FORM DENSITY MATRIX.
C
  200 CALL DENSTY(MODE,IDOGU)
      IF(MODE.NE.1)RETURN
      MODE=2
      IF(IDOGU.EQ.0)GO TO 200
      CALL TREAD(27,A,NB,NB,IBASIS,IBASIS,0)
C     GET PROPER ORBITAL ENERGIES.
      DO 210 I=1,NBASIS
  210 EIG(I)=EIG(NBASIS+I)
      IF(IPROJ.EQ.1)GO TO 320
      GO TO 180
C
C     COEFFICIENT MATRICES READ - IF NO PROJECTION, GET DENSITY.
C
  230 IF(IDOGU.EQ.0)GO TO 200
      I=IBASIS
      IF(IOP9.GT.0)I=I+I
      IF(IGUESS.EQ.5)CALL TREAD(5,EIG,NB+NB,1,I,1,0)
      IF(IPROJ.EQ.1)GO TO 310
      CALL TREAD(25,A,NB,NB,IBASIS,IBASIS,0)
      GO TO 180
C
C     DENSITY READ - IF NO PROJECTION, ALL DONE.
C
  240 IF(IPROJ.EQ.0.OR.IDOGU.EQ.0)RETURN
      WRITE(IOUT,1080)
      GO TO 310
C
C     PROJECT COEFFICIENT MATRIX - SAVE PH CMO IN FILE 25.
C
C     SAVE EIGENVALUES IN FILE 5.
  300 CALL TWRITE(5,EIG,NFILE(5,1),1,NFILE(5,1),1,0)
      CALL TWRITE(25,A,NB,NB,IBASIS,IBASIS,0)
C     GET NEW S**(-1/2) TRANSFORMATION MATRIX.
  310 CALL TREAD(8,B,NB,NB,NBASIS,NBASIS,1)
      CALL NVSQRT(NBASIS,IOP(1))
      WRITE(IOUT,1110)VV(1)
      IF (IOP(1) .EQ. 0) GO TO 315
      WRITE (IOUT,1190)
      RETURN
C
C     SAVE EIGENVECTOR MATRIX FOR C TO BE COMPLETED.
C
  315 CALL TWRITE(31,B,NB,NB,NBASIS,NBASIS,0)
C     FORM V*B WHERE V=S**(-1/2) AND B IS THE OVERLAP BETWEEN THE BASES.
      CALL TREAD(4,B,NB,NB,NBASIS,IBASIS,0)
      CALL MATREC(V,B,A,NBASIS,NBASIS,IBASIS,VV,3)
      IF(IGUESS.EQ.3)GO TO 400
C     PROJECT COEFFICIENTS - SAVE TRANSFORMATION MATRIX B IF OPEN SHELL.
      WRITE(IOUT,1070)
      IF(MODE.EQ.1)CALL TWRITE(4,B,NB,NB,NBASIS,IBASIS,0)
      CALL TREAD(25,A,NB,NB,IBASIS,IBASIS,0)
      GO TO 330
  320 CALL TREAD(4,B,NB,NB,NBASIS,IBASIS,0)
  330 CALL MATREC(B,A,V,NBASIS,IBASIS,IBASIS,VV,3)
C     GET COMPLETE SET OF COEFFICIENTS.
      CALL TREAD(31,B,NB,NB,NBASIS,NBASIS,0)
      CALL ORTHOC(A,B,IBASIS,NBASIS,VV,BB,MAP)
C     FORM COEFFICIENTS C = V*A.
      CALL MATREC(V,A,B,NBASIS,NBASIS,NBASIS,VV,3)
C     RETRIEVE EIGENVALUES.
      IF(MODE.EQ.2)GO TO 350
      CALL TREAD(5,EIG,NB+NB,1,IBASIS+IBASIS,1,0)
C     EXPAND EIGENVALUES IF PROJECTED COEFFICIENT MATRIX IS LARGER.
      IF(NBASIS.LE.IBASIS.OR.MODE.EQ.0)GO TO 350
      DO 340 II=1,IBASIS
      I=IBASIS+1-II
  340 EIG(NBASIS+I)=EIG(IBASIS+I)
C     COPY EIGENVALUES TO VV USING MAP, THEN COPY BACK TO EIG.
  350 DO 370 I=1,NBASIS
      M=MAP(I)
      IF(M.LE.0.OR.M.GT.IBASIS)GO TO 360
      VV(I)=EIG(M)
      GO TO 370
  360 VV(I)=ZERO
  370 CONTINUE
      DO 380 I=1,NBASIS
      EIG(I)=VV(I)
  380 IF(MODE.EQ.0)EIG(NBASIS+I)=VV(I)
      IF(NBASIS.GE.IBASIS.OR.MODE.NE.1)GO TO 180
C     NEW BASIS IS SMALLER.
      DO 390 I=1,NBASIS
  390 EIG(NBASIS+I)=EIG(IBASIS+I)
      GO TO 180
C
C     PROJECT DENSITY MATRIX - FORM V*V*B.
C
  400 CALL MATREC(V,B,A,NBASIS,NBASIS,IBASIS,VV,1)
C     SAVE TRANSFORMATION MATRIX IF OPEN SHELL.
      IF(MODE.EQ.1)CALL TWRITE(4,A,NB,NB,NBASIS,IBASIS,0)
      IFILE=19
  410 CALL TREAD(IFILE,B,NB,NB,IBASIS,IBASIS,1)
C     TRANSFORM D = A*B*A'.
      CALL MATREC(A,B,V,NBASIS,IBASIS,IBASIS,VV,1)
      CALL MATREC(V,A,B,NBASIS,IBASIS,NBASIS,VV,2)
C     MAKE DENSITY MATRIX IN B IDEMPOTENT.
      IT=0
      MAXIT=25*IOP(30)
C     REDUCE CLOSED SHELL DENSITY MATRIX BY OCCUPANCY (2.0).
      IF(MODE.NE.0)GO TO 420
      DO 415 J=1,NBASIS
      DO 415 I=1,J
      T=PT5*B(I,J)
      B(I,J)=T
  415 B(J,I)=T
C
C     THE ITERATION IS B(N+1) = 3B(N)**2 - 2B(N)**3, FROM
C     W.L. CLINTON, A.J. GALLI AND L.J. MASSA, PHYSICAL REVIEW, 177,
C     7 (1969).
C     CURRENT DENSITY IS IN B; FORM A=B*B, THEN CHECK CONVERGENCE.
C
  420 CALL MATPAC(B,B,A,NBASIS,1)
      T=ZERO
      DO 440 J=1,NBASIS
      DO 430 I=1,J
      TT=(A(I,J)-B(I,J))**2
  430 T=T+TT+TT
  440 T=T-TT
      T=DSQRT(T)/DFLOAT(NBASIS)
C     T IS THE RMS DEVIATION OF B**2-B FROM A TRUE 0 MATRIX.
C     IF T<=5.0D-5, SAY WE HAVE CONVERGED TO THE IDEMPOTENT DENSITY.
      IF(T.LE.CRIT)GO TO 460
      IF(IT.GE.MAXIT)GO TO 460
      IT=IT+1
      CALL MATPAC(A,B,V,NBASIS,1)
      DO 450 J=1,NBASIS
      DO 450 I=1,J
      T=THREE*A(I,J)-TWO*V(I,J)
      B(I,J)=T
  450 B(J,I)=T
      GO TO 420
  460 WRITE(IOUT,1120)IT,T
C     RESCALE CLOSED SHELL DENSITY MATRIX.
      IF(MODE.NE.0)GO TO 480
      DO 470 J=1,NBASIS
      DO 470 I=1,J
      T=B(I,J)
      T=T+T
      B(I,J)=T
  470 B(J,I)=T
  480 IF(IOP20.LE.1)GO TO 490
      WRITE(IOUT,1100)
      CALL GBSOUT(B,EIG,NB,NB,NBASIS,0)
  490 CALL TWRITE(IFILE,B,NB,NB,NBASIS,NBASIS,1)
      IF(MODE.NE.1)RETURN
C     NOW REPEAT FOR BETA DENSITY.
      MODE=2
      IFILE=21
      CALL TREAD(4,A,NB,NB,NBASIS,IBASIS,0)
      GO TO 410
C
C     PROJECTION BASIS SET NOT PROVIDED.
C
  900 WRITE(IOUT,1130)
      IOP(1)=-2
      RETURN
      END
      SUBROUTINE HUCKEL(IOS,IBASIS,SCALE,IDOGU)
C*
C     --------------
C     U OF T VERSION
C     JANUARY 1987
C     --------------
C*
C     FORM THE HUCKEL MATRIX FOR AN STO-NG(*) BASIS - THE USE OF THIS
C     ROUTINE WITH OTHER THAN THESE BASES WILL ALMOST CERTAINLY
C     LEAD TO A GREAT DEAL OF TROUBLE.
C
C     IOS IS THE FILE NUMBER FOR THE OVERLAP MATRIX.
C     IBASIS IS THE TOTAL NUMBER OF BASIS FUNCTIONS.
C     SCALE IS THE SCALE FACTOR FOR THE OFF-DIAGONAL HUCKEL ELEMENTS.
C     IDOGU IS 0 FOR REGULAR CHECK RUNS, NON-ZERO FOR CHECK=I OR
C     PRODUCTION RUNS WHERE THE INITIAL GUESS IS PERFORMED.
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA, NB=#NB)
C##
      PARAMETER (NA= 36, NB=200)
C###
      COMMON /A/ IOP(99)
      COMMON /A/ NATOMS,ICHARG,MULTIP,IAN(NA),NAE,NBE,NE,NBASIS,C(NA,3)
      COMMON /A/ CDUM(4),ICDUM(401)
C
      COMMON/C402A/A(NB,NB),DUMA(NB)
      COMMON/C402B/B(NB,NB)
C
      COMMON/IO/IN,IOUT,IODUM(215)
C
      DIMENSION ENEG(54,11)
C
      EQUIVALENCE (ENEG(1,1),B(1,1))
C
      DATA PT0045/0.0045D0/,PT0015/0.0015D0/,PT32/0.32D0/
      DATA PT001/0.001D0/,TENM10/1.0D-10/,ZERO/0.0D0/
      DATA C3S/-2.26D-4/,C3P/-1.63D-4/,C3D/-1.97D-6/
C     FOLLOWING DATA FUDGED PENDING A PROPER FIT FOR ELEMENTS 37-54.
      DATA C4S/-2.26D-5/,C4P/-1.63D-5/,C4D/-1.97D-7/
C
 1000 FORMAT('0REPLACEMENT HUCKEL MATRIX ELEMENTS')
 1010 FORMAT(2I4,F12.6)
 1020 FORMAT(' IAN =',I4,5X,'IAO =',I3,5X,'ENEG =',F14.6)
 1030 FORMAT(1X)
 1040 FORMAT('0IAN =',I5,5X,'IAO =',I5,5X,'ENEG =',1PD15.6,5X,
     1 'IS ILLEGAL')
 1050 FORMAT ('0ERROR IN ROUTINE HUCKEL: IBASIS =',I4,' BUT',I4,
     1 ' BASIS FUNCTIONS GENERATED INTERNALLY.')
C*
C     ENEG(I,J) ARE THE DIAGONAL ELEMENTS OF THE HUCKEL HAMILTONIAN
C     IN ATOMIC UNITS
C     I = ATOMIC NUMBER
C     J = 1 1S ORBITAL
C     J = 2 2S ORBITAL
C     J = 3 2P ORBITAL
C     J = 4 3S ORBITAL
C     J = 5 3P ORBITAL
C     J = 6 3D ORBITAL
C     J = 7 4S ORBITAL
C     J = 8 4P ORBITAL
C     J = 9 4D ORBITAL
C     J =10 5S ORBITAL
C     J =11 5P ORBITAL
C
C     INNER SHELLS
      DO 10 I=3,54
   10 ENEG(I,1)=-PT32*DFLOAT(I*I)
      DO 20 I=11,54
      XII=DFLOAT(I*I*I)
      ENEG(I,2)=-PT0045*XII
   20 ENEG(I,3)=-PT0015*XII
      DO 200 I=19,54
      XII=DFLOAT(I*I*I)
      ENEG(I,4)=C3S*XII
  200 ENEG(I,5)=C3P*XII
      DO 210 I=31,54
  210 ENEG(I,6)=C3D*DFLOAT(I*I*I*I)
      DO 220 I=37,54
      XII=DFLOAT(I*I*I)
      ENEG(I,7)=C4S*XII
  220 ENEG(I,8)=C4P*XII
      DO 230 I=39,54
  230 ENEG(I,9)=C4D*DFLOAT(I*I*I*I)
C     VALENCE SHELLS
      ENEG(1,1)=-0.537  D0
      ENEG(2,1)=-0.735  D0
C
      ENEG(3,2)=-0.300  D0
      ENEG(3,3)=-0.100  D0
      ENEG(4,2)=-0.683  D0
      ENEG(4,3)=-0.240  D0
      ENEG(5,2)=-1.10   D0
      ENEG(5,3)=-0.33   D0
      ENEG(6,2)=-1.55   D0
      ENEG(6,3)=-0.37   D0
      ENEG(7,2)=-1.86   D0
      ENEG(7,3)=-0.42   D0
      ENEG(8,2)=-2.50   D0
      ENEG(8,3)=-0.46   D0
      ENEG(9,2)=-3.001  D0
      ENEG(9,3)=-0.52   D0
      ENEG(10,2)=-3.50  D0
      ENEG(10,3)=-0.60  D0
C
      ENEG(11,4)=-0.570 D0
      ENEG(11,5)=-0.110 D0
      ENEG(12,4)=-0.787 D0
      ENEG(12,5)=-0.250 D0
      ENEG(13,4)=-0.906 D0
      ENEG(13,5)=-0.371 D0
      ENEG(14,4)=-1.300 D0
      ENEG(14,5)=-0.700 D0
      ENEG(15,4)=-1.500 D0
      ENEG(15,5)=-0.900 D0
      ENEG(16,4)=-1.800 D0
      ENEG(16,5)=-1.100 D0
      ENEG(17,4)=-2.100 D0
      ENEG(17,5)=-1.300 D0
      ENEG(18,4)=-2.40  D0
      ENEG(18,5)=-1.50  D0
C     THE FOLLOWING VSIP TAKEN FROM DOUBLE ZETA ATOMIC SCF:
C     E. CLEMENTI AND C. ROETTI, ATOMIC DATA AND NUCLEAR DATA TABLES,
C     14, 177 (1974).
C     THE 3S, 3P AND 3D VSIP FOR THE FIRST TRANSITION SERIES WERE TAKEN
C     FROM THE SAME SOURCE. MOST MISSING VALUES WERE TAKEN FROM
C     W. KLOTZBUCHER, PH.D. THESIS, UNIVERSITY OF TORONTO.
      ENEG(19,6)=-0.281D0
      ENEG(19,7)=-0.147D0
      ENEG(19,8)=-0.045D0
      ENEG(20,6)=-0.330D0
      ENEG(20,7)=-0.196D0
      ENEG(20,8)=-0.094D0
      ENEG(21,6)=-0.344D0
      ENEG(21,7)=-0.210D0
      ENEG(21,8)=-0.108D0
      ENEG(22,6)=-0.273D0
      ENEG(22,7)=-0.205D0
      ENEG(22,8)=-0.123D0
      ENEG(23,6)=-0.321D0
      ENEG(23,7)=-0.214D0
      ENEG(23,8)=-0.145D0
      ENEG(24,6)=-0.373D0
      ENEG(24,7)=-0.222D0
      ENEG(24,8)=-0.138D0
      ENEG(25,6)=-0.639D0
      ENEG(25,7)=-0.248D0
      ENEG(25,8)=-0.110D0
      ENEG(26,6)=-0.647D0
      ENEG(26,7)=-0.258D0
      ENEG(26,8)=-0.145D0
      ENEG(27,6)=-0.657D0
      ENEG(27,7)=-0.268D0
      ENEG(27,8)=-0.147D0
      ENEG(28,6)=-0.691D0
      ENEG(28,7)=-0.277D0
      ENEG(28,8)=-0.156D0
      ENEG(29,6)=-0.491D0
      ENEG(29,7)=-0.238D0
      ENEG(29,8)=-0.119D0
      ENEG(30,6)=-0.783D0
      ENEG(30,7)=-0.292D0
      ENEG(30,8)=-0.140D0
      ENEG(31,7)=-0.424D0
      ENEG(31,8)=-0.208D0
      ENEG(32,7)=-0.553D0
      ENEG(32,8)=-0.287D0
      ENEG(33,7)=-0.686D0
      ENEG(33,8)=-0.369D0
      ENEG(34,7)=-0.838D0
      ENEG(34,8)=-0.403D0
      ENEG(35,7)=-0.993D0
      ENEG(35,8)=-0.457D0
      ENEG(36,7)=-1.150D0
      ENEG(36,8)=-0.524D0
C     THE FOLLOWING VSIP TAKEN FROM PREVIOUS ROW OF THE PERIODIC
C     TABLE UNTIL PROPER VALUES ARE LOCATED.
      ENEG(37,9)=-0.281D0
      ENEG(37,10)=-0.147D0
      ENEG(37,11)=-0.045D0
      ENEG(38,9)=-0.330D0
      ENEG(38,10)=-0.196D0
      ENEG(38,11)=-0.094D0
      ENEG(39,9)=-0.344D0
      ENEG(39,10)=-0.210D0
      ENEG(39,11)=-0.108D0
      ENEG(40,9)=-0.273D0
      ENEG(40,10)=-0.205D0
      ENEG(40,11)=-0.123D0
      ENEG(41,9)=-0.321D0
      ENEG(41,10)=-0.214D0
      ENEG(41,11)=-0.145D0
      ENEG(42,9)=-0.373D0
      ENEG(42,10)=-0.222D0
      ENEG(42,11)=-0.138D0
      ENEG(43,9)=-0.639D0
      ENEG(43,10)=-0.248D0
      ENEG(43,11)=-0.110D0
      ENEG(44,9)=-0.647D0
      ENEG(44,10)=-0.258D0
      ENEG(44,11)=-0.145D0
      ENEG(45,9)=-0.657D0
      ENEG(45,10)=-0.268D0
      ENEG(45,11)=-0.147D0
      ENEG(46,9)=-0.691D0
      ENEG(46,10)=-0.277D0
      ENEG(46,11)=-0.156D0
      ENEG(47,9)=-0.491D0
      ENEG(47,10)=-0.238D0
      ENEG(47,11)=-0.119D0
      ENEG(48,9)=-0.783D0
      ENEG(48,10)=-0.292D0
      ENEG(48,11)=-0.140D0
      ENEG(49,10)=-0.424D0
      ENEG(49,11)=-0.208D0
      ENEG(50,10)=-0.553D0
      ENEG(50,11)=-0.287D0
      ENEG(51,10)=-0.686D0
      ENEG(51,11)=-0.369D0
      ENEG(52,10)=-0.838D0
      ENEG(52,11)=-0.403D0
      ENEG(53,10)=-0.993D0
      ENEG(53,11)=-0.457D0
      ENEG(54,10)=-1.150D0
      ENEG(54,11)=-0.524D0
C     DEFINE MATRIX ELEMENTS FOR POLARIZATION SHELLS.
      DO 40 I=11,18
   40 ENEG(I,6)=DFLOAT(I)
C     READ REPLACEMENT HUCKEL VALUES.
      IF(IOP(33).EQ.0)GO TO 60
      WRITE(IOUT,1000)
C     READ IAN,IAO,ENEG(IAN,IAO) IN 2I4,F12.6 FORMAT.
C     IAN IS THE ATOMIC NUMBER, IAO IS THE ATOMIC ORBITAL NUMBER (SEE
C     CODES ABOVE) AND ENEG IS THE NEW MATRIX ELEMENT.
C     TERMINATE THE LIST WITH IAN=0.
   55 READ(IN,1010)IA,J,XII
      IF(IA.LE.0)GO TO 57
C     CHECK FOR LEGAL VALUES OF IAN AND IAO.
      IF(IA.GT.54.OR.J.LE.0.OR.J.GT.11)GO TO 56
      ENEG(IA,J)=XII
      WRITE(IOUT,1020)IA,J,XII
      GO TO 55
   56 WRITE(IOUT,1040)IA,J,XII
      IOP(1)=-2
      RETURN
   57 WRITE(IOUT,1030)
C
   60 IF(IDOGU.EQ.0)RETURN
C
C     FILL IN DIAGONAL ELEMENTS OF A.
C     SET POLARIZATION FUNCTION FLAGS.
C
      I = IOP(31)
      IFPONH = I / 4
      I = I - 4*IFPONH
      IFDON1 = I / 2
      IFDON2 = I - 2*IFDON1
      IOP8=IOP(8)
C
C     ALWAYS FORCE 5D FOR PROJECTED GUESSES.
C
      IF (IOP(13) .EQ. 1) IOP8 = 1
      L=1
C
      DO 120 I=1,NATOMS
      IA=IAN(I)
      IF(IA.LE.0)GO TO 120
C     1S ORBITAL.
      A(L,L)=ENEG(IA,1)
      L=L+1
      IF(IA.LE.2)GO TO 120
C     2S/2P ORBITALS.
      A(L,L)=ENEG(IA,2)
      A(L+1,L+1)=ENEG(IA,3)
      A(L+2,L+2)=ENEG(IA,3)
      A(L+3,L+3)=ENEG(IA,3)
      L=L+4
      IF(IA.LE.10)GO TO 120
C     3S/3P ORBITALS.
      A(L,L)=ENEG(IA,4)
      A(L+1,L+1)=ENEG(IA,5)
      A(L+2,L+2)=ENEG(IA,5)
      A(L+3,L+3)=ENEG(IA,5)
      L=L+4
      IF(IFDON2.EQ.0.AND.IA.LE.18)GO TO 120
      IF(IA.EQ.19.OR.IA.EQ.20)GO TO 110
C     3D ORBITALS.
      A(L,L)=ENEG(IA,6)
      A(L+1,L+1)=ENEG(IA,6)
      A(L+2,L+2)=ENEG(IA,6)
      A(L+3,L+3)=ENEG(IA,6)
      A(L+4,L+4)=ENEG(IA,6)
      IF(IOP8.EQ.0)A(L+5,L+5)=ENEG(IA,6)
      L=L+6-IOP8
      IF(IA.LE.18)GO TO 120
C     4S/4P ORBITALS.
  110 A(L,L)=ENEG(IA,7)
      A(L+1,L+1)=ENEG(IA,8)
      A(L+2,L+2)=ENEG(IA,8)
      A(L+3,L+3)=ENEG(IA,8)
      L=L+4
      IF (IA .LE. 36) GO TO 120
C     HANDLE RB-XE, BUT NO 4D ORBITALS ON RB OR SR.
      IF (IA .LE. 38) GO TO 115
C     4D ORBITALS.
      A(L,L)=ENEG(IA,9)
      A(L+1,L+1)=ENEG(IA,9)
      A(L+2,L+2)=ENEG(IA,9)
      A(L+3,L+3)=ENEG(IA,9)
      A(L+4,L+4)=ENEG(IA,9)
      IF(IOP8.EQ.0)A(L+5,L+5)=ENEG(IA,9)
      L=L+6-IOP8
C     5S/5P ORBITALS ON RB-XE.
  115 A(L,L)=ENEG(IA,10)
      A(L+1,L+1)=ENEG(IA,11)
      A(L+2,L+2)=ENEG(IA,11)
      A(L+3,L+3)=ENEG(IA,11)
      L=L+4
  120 CONTINUE
C
      L = L - 1
      IF (L .NE. IBASIS) GO TO 900
C
      IF(IOP(15).NE.0)GO TO 150
C     SCAN THE DIAGONAL ELEMENTS OF THE H MATRIX FOR POSITIVE INTEGRAL
C     VALUES IT IS NECESSARY TO REMOVE ANY DEGENERACIES AT THIS POINT
C     THAT HAVE BEEN CAUSED BY THE EMPTY OUTER SHELLS.
      DO 140 I=1,IBASIS
      XII=A(I,I)
      IF(XII.LT.ZERO)GO TO 140
      IF(DABS(XII-DFLOAT(IDINT(XII))).LE.TENM10)A(I,I)=
     1 XII+PT001*DFLOAT(I)
  140 CONTINUE
C     READ THE OVERLAP MATRIX AND FORM THE HUCKEL MATRIX.
  150 IF(IBASIS.EQ.1)RETURN
      CALL TREAD(IOS,B,NB,NB,IBASIS,IBASIS,1)
C     AGAIN BLOCK OFF.
      IF(IOP(15).LE.1)CALL BLOCK(B,IBASIS,IOP8)
C     FORM OFF DIAGONAL H MATRIX ELEMENTS
      DO 160 I=2,IBASIS
      IM1=I-1
      DO 160 J=1,IM1
      XII=B(I,J)*(A(I,I)+A(J,J))*SCALE
      A(I,J)=XII
  160 A(J,I)=XII
      RETURN
C
C     ERROR SECTION.
C
  900 WRITE (IOUT,1050) IBASIS, L
      IOP(1) = -2
      RETURN
      END
      SUBROUTINE BLOCK(S,IBASIS,IOP8)
C*
C     --------------
C     U OF T VERSION
C     JANUARY 1987
C     --------------
C*
C     THIS SUBROUTINE BLOCKS THE OVERLAP MATRIX S SO THAT THE OUTER
C     FUNCTIONS OVERLAP WITH NOTHING BUT THEMSELVES. THERE WILL BE NO
C     EFFECT ON AN STO-NG BASIS, BUT THE D ORBITALS FOR THE ATOMS NA-AR
C     WILL BE BLOCKED FOR AN STO-NG* BASIS.
C
C     IBASIS IS THE DIMENSION OF THE OVERLAP MATRIX.
C     IOP8 IS 0 TO USE 6D, 1 TO US 5D FUNCTIONS.
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA, NB=#NB)
C##
      PARAMETER (NA= 36, NB=200)
C###
      PARAMETER (ZERO=0.0D0)
C
      COMMON /A/ IOP(99)
      COMMON /A/ NATOMS,ICHARG,MULTIP,IAN(NA),NAE,NBE,NE,NBASIS,C(NA,3)
      COMMON /A/ CDUM(4),ICDUM(401)
C
      DIMENSION S(NB,NB)
C
C     SET POLARIZATION FUNCTION FLAGS.
C
      I = IOP(31)
      IFPONH = I / 4
      I = I - 4*IFPONH
      IFDON1 = I / 2
      IFDON2 = I - 2*IFDON1
      IF(IFDON2.EQ.0)RETURN
      ND=6-IOP8
      INDEX=0
C
      DO 70 I=1,NATOMS
      IA=IAN(I)
      IF(IA.LE.0)GO TO 70
      IF(IA.GT.2)GO TO 10
C     H OR HE.
      INDEX=INDEX+1
      GO TO 70
   10 IF(IA.GT.10)GO TO 20
C     LI-NE.
      INDEX=INDEX+5
      GO TO 70
C     NA-AR.
   20 IF(IA.GT.18)GO TO 100
      INDEX=INDEX+9
      IST=INDEX+1
      INDEX=INDEX+ND
      GO TO 40
C     K-KR (STO-NG ONLY).
  100 IF (IA .GT. 36) GO TO 110
      INDEX=INDEX+13
      IF(IA.GE.21)INDEX=INDEX+ND
      GO TO 70
C     RB-XE (STO-NG ONLY).
  110 INDEX = INDEX + 17 + ND
      IF (IA .GE. 39) INDEX = INDEX + ND
      GO TO 70
C     BLOCK THE OVERLAP MATRIX.
   40 DO 60 J=IST,INDEX
      T=S(J,J)
      DO 50 K=1,IBASIS
      S(J,K)=ZERO
   50 S(K,J)=ZERO
   60 S(J,J)=T
   70 CONTINUE
      RETURN
      END
      SUBROUTINE ORTHOC(A,B,NCOMP,NBASIS,AA,BB,MAP)
C*
C     --------------
C     U OF T VERSION
C     APRIL 1987
C     --------------
C*
C     SCHMIDT ORTHOGONALIZATION OF THE COLUMN VECTORS OF A.
C     IF THE NUMBER OF VECTORS OBTAINED IS LESS THAN NBASIS, THE SET
C     IS COMPLETED BY MEANS OF THE COMPLETE SET IN B.
C     NCOMP IS THE NUMBER OF VECTORS PROVIDED IN A.
C     AA AND BB ARE WORK VECTORS.
C     MAP(I) GIVES THE CORRESPONDENCE BETWEEN THE NEW (I) AND OLD
C     (MAP(I)) VECTORS.
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NB=#NB)
C##
      PARAMETER (NB=200)
C###
      PARAMETER (ZERO=0.0D0, ONE=1.0D0)
C
      DIMENSION A(NB,NB),B(NB,NB),AA(NB),BB(NB),MAP(NB)
C
      DATA TENM10/1.0D-10/
C
C     NORMALIZE FIRST VECTOR.
      T=ZERO
      DO 10 J=1,NBASIS
   10 T=T+A(J,1)*A(J,1)
      T=ONE/DSQRT(T)
      DO 20 J=1,NBASIS
   20 A(J,1)=A(J,1)*T
      MAP(1)=1
      IF(NBASIS.EQ.1) RETURN
C     ORTHONORMALIZE EACH VECTOR WITH RESPECT TO ALL ITS PREDECESSORS.
      NN=1
      DO 90 I=2,NCOMP
C     COPY VECTOR TO BE ORTHONORMALIZED INTO BB. COLLECT PROJECTIONS
C     OF BB ONTO THE PREVIOUS VECTORS IN AA.
      DO 30 J=1,NBASIS
      AA(J)=ZERO
   30 BB(J)=A(J,I)
C     OBTAIN PROJECTION OF BB ON ALL PREDECESSORS.
      DO 50 J=1,NN
      AR=ZERO
      DO 40 K=1,NBASIS
   40 AR=AR+BB(K)*A(K,J)
      DO 50 K=1,NBASIS
   50 AA(K)=AA(K)+AR*A(K,J)
C     SUBTRACT THE PROJECTIONS FROM BB.
      T=ZERO
      DO 70 K=1,NBASIS
      BB(K)=BB(K)-AA(K)
   70 T=T+BB(K)*BB(K)
C     NORMALIZE THE NEW VECTOR.
C     WATCH OUT FOR PROJECTIONS FROM LARGER TO SMALLER, OR SP TO S,
C     BASES.
      IF(T.LE.TENM10)GO TO 90
      T=ONE/DSQRT(T)
      NN=NN+1
      MAP(NN)=I
      DO 80 K=1,NBASIS
   80 A(K,NN)=BB(K)*T
   90 CONTINUE
C*
C     COMPLETE THE MATRIX.
      NC1=NN+1
      IF(NC1.GT.NBASIS) RETURN
      DO 190 I=NC1,NBASIS
C     FIND THE VECTOR IN B WITH THE LEAST OVERLAP WITH THOSE IN A.
      SPS=ONE
      DO 120 JS=1,NBASIS
      SPP=ZERO
      DO 105 K=1,NBASIS
  105 BB(K)=B(K,JS)
      DO 110 J=1,NN
C     GET DOT PRODUCT WITH THE VECTORS IN A.
      AR=ZERO
      DO 100 K=1,NBASIS
  100 AR=AR+A(K,J)*BB(K)
  110 SPP=SPP+AR*AR
      IF(SPP.GE.SPS)GO TO 120
      SPS=SPP
      JSS=JS
  120 CONTINUE
C     ORTHONORMALIZE VECTOR JSS FROM B AS ABOVE.
      DO 130 K=1,NBASIS
      AA(K)=ZERO
  130 BB(K)=B(K,JSS)
      DO 150 J=1,NN
      AR=ZERO
      DO 140 K=1,NBASIS
  140 AR=AR+BB(K)*A(K,J)
      DO 150 K=1,NBASIS
  150 AA(K)=AA(K)+AR*A(K,J)
      T=ZERO
      DO 160 K=1,NBASIS
      BB(K)=BB(K)-AA(K)
  160 T=T+BB(K)*BB(K)
      T=ONE/DSQRT(T)
      DO 180 K=1,NBASIS
  180 A(K,I)=BB(K)*T
      NN=NN+1
  190 MAP(NN)=0
      RETURN
      END
      SUBROUTINE FGUESS(IBASIS,IOP8)
C*
C     ---------------------
C     UNIVERSITY OF TORONTO
C     JANUARY 1987
C     AUTHOR: R.A. POIRIER
C     ---------------------
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA, NB=#NB)
C##
      PARAMETER (NA= 36, NB=200)
C###
      PARAMETER (ZERO=0.0D0, ONE=1.0D0)
C
      COMMON /A/ IOP(99)
      COMMON /A/ NATOMS,ICHARG,MULTIP,IAN(NA),NAE,NBE,NE,NBASIS,C(NA,3)
      COMMON /A/ CDUM(4),ICDUM(401)
C
      COMMON/C402A/H(NB,NB),SK(NB)
      COMMON/C402B/S(NB,NB)
      COMMON/C402C/F(NB,NB)
C
      COMMON/IO/IN,IOUT,IODUM(215)
C
      DATA TENM5/1.0D-5/
      DATA PT1/0.1D0/, PT94/0.94D0/, ONEPT1/1.1D0/, PT75/0.75D0/
C
 1000 FORMAT('1INITIAL GUESS FOCK MATRIX (SCALED HAMILTONIAN) AND ',
     1 'SCALE FACTORS')
 1010 FORMAT('0ERROR OCCURED IN FGUESS: NUMBER OF BASIS FUNCTIONS ',
     1 'FOUND TO BE',I5)
C
C     READ CORE HAMILTONIAN
      CALL TREAD(13,H,NB,NB,IBASIS,IBASIS,1)
C     READ OVERLAP MATRIX
      CALL TREAD(8,S,NB,NB,IBASIS,IBASIS,1)
C     CHECK BASIS SET TYPE
      IOP6=IOP(6)
      IF(IOP6.NE.7)GO TO 10
      IOP(1)=-2
      RETURN
C     ISET=1 FOR STO-NG SETS
C     ISET=2 FOR N-21G AND N-31G SETS
C     ISET=3 FOR N-311G SETS
   10 ISET=2
      IF(IOP6.EQ.0)ISET=1
      IF(IOP6.EQ.4)ISET=3
C     INITIALIZE SK
      DO 12 I=1,IBASIS
   12 SK(I)=ONE
      IOP17=IOP(17)
      IF(IOP(34).NE.0)IOP17=-IOP17
      GO TO (20,30,40),ISET
   20 CALL KSTO(NF,IOP8)
      SCALE=PT94
      IF(IOP17.NE.0)SCALE=SCALE+PT1*DFLOAT(IOP17)
      IF(NF.EQ.IBASIS)GO TO 50
      WRITE(IOUT,1010)NF
      IOP(1)=-2
      RETURN
   30 CALL KM1G(NF,IOP8)
      SCALE=ONEPT1
      IF(IOP17.NE.0)SCALE=SCALE+PT1*DFLOAT(IOP17)
      IF(NF.EQ.IBASIS)GO TO 50
      WRITE(IOUT,1010)NF
      IOP(1)=-2
      RETURN
   40 CALL KM11G(NF,IOP8)
      SCALE=PT75
      IF(IOP17.NE.0)SCALE=SCALE+PT1*DFLOAT(IOP17)
      IF(NF.EQ.IBASIS)GO TO 50
      WRITE(IOUT,1010)NF
      IOP(1)=-2
      RETURN
C     FORM DIAGONAL ELEMENTS OF F
   50 DO 60 I=1,IBASIS
      F(I,I)=SK(I)*H(I,I)
   60 SK(I)=DABS(SK(I))
C     FORM OFF-DIAGONAL ELEMENTS OF F
      DO 70 I=1,IBASIS
      SKI=SK(I)*H(I,I)
      DO 70 J=1,I
      IF(I.EQ.J)GO TO 70
      F(I,J)=S(I,J)*(SKI+SK(J)*H(J,J))*SCALE
      IF(DABS(F(I,J)).LE.TENM5)F(I,J)=ZERO
      F(J,I)=F(I,J)
   70 CONTINUE
C     SAVE FOCK MATRIX
      CALL TWRITE(15,F,NB,NB,IBASIS,IBASIS,1)
      IF(IOP(21).EQ.0)RETURN
      WRITE(IOUT,1000)
      CALL MATOUT(F,NB,NB,IBASIS,IBASIS)
      RETURN
      END
      SUBROUTINE KSTO(NF,IOP8)
C*
C     --------------
C     U OF T VERSION
C     JANUARY 1987
C     --------------
C*
C     SCALING FACTORS FOR DIAGONAL ELEMENTS OF THE CORE HAMILTONIAN.
C     STO-NG, MINIMAL BASIS SETS
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA, NB=#NB)
C##
      PARAMETER (NA= 36, NB=200)
C###
      COMMON /A/ IOP(99)
      COMMON /A/ NATOMS,ICHARG,MULTIP,IAN(NA),NAE,NBE,NE,NBASIS,C(NA,3)
      COMMON /A/ CDUM(4),ICDUM(401)
C
      COMMON/C402A/H(NB,NB),SK(NB)
C
      NF=0
      DO 100 I=1,NATOMS
      IZ=IAN(I)
      IF(IZ.LE.0)GO TO 100
      IF(IZ.GT.2)GO TO 10
C     1S
      NF=NF+1
      SK(NF)= 0.1130D0
      GO TO 100
   10 Z=DFLOAT(IZ)
      IF(IZ.GT.10)GO TO 20
C     1S, 2SP
      SK(NF+1)= 0.433D0+2.256D-2*Z
      SK(NF+2)= 0.160D0+1.272D-2*Z
      SKP=0.05D0
      IF(IZ.LT.6)SKP=-0.1D0
      SK(NF+3)= SKP
      SK(NF+4)= SKP
      SK(NF+5)= SKP
      NF=NF+5
      GO TO 100
   20 IF(IZ.GT.18)GO TO 30
C     1S, 2SP, 3SP
      SK(NF+1)= 0.565D0+9.28D-3*Z
      SK(NF+2)= 0.113D0+2.02D-2*Z
      SK(NF+3)=-0.128D0+2.08D-2*Z
      SK(NF+4)=-0.128D0+2.08D-2*Z
      SK(NF+5)=-0.128D0+2.08D-2*Z
      SK(NF+6)=-0.027D0+9.92D-3*Z
      SKP=0.06D0
      IF(IZ.LT.14)SKP=0.02D0
      SK(NF+7)= SKP
      SK(NF+8)= SKP
      SK(NF+9)= SKP
      NF=NF+9
      IF(IOP(7).EQ.0)GO TO 100
      SK(NF+1)=0.01D0
      SK(NF+2)=0.01D0
      SK(NF+3)=0.01D0
      SK(NF+4)=0.01D0
      SK(NF+5)=0.01D0
      NF=NF+5
      IF(IOP8.EQ.1)GO TO 100
      NF=NF+1
      SK(NF)=0.01D0
      GO TO 100
   30 IF(IZ.GT.36)GO TO 100
C     1S, 2SP, 3SP, 3D, 4SP
      SK(NF+1)= 0.6733D0+3.6D-3*Z
      SK(NF+2)= 0.39D0+6.1D-3*Z
      SK(NF+3)= 0.142D0+6.96D-3*Z
      SK(NF+4)= 0.142D0+6.96D-3*Z
      SK(NF+5)= 0.142D0+6.96D-3*Z
      SK(NF+6)= 0.1244D0+4.4D-3*Z
      SK(NF+7)= 0.0499D0+4.72D-3*Z
      SK(NF+8)= 0.0499D0+4.72D-3*Z
      SK(NF+9)= 0.0499D0+4.72D-3*Z
      NF=NF+9
      IF(IOP(7).EQ.0)GO TO 40
      SKD=-0.124D0+4.64D-3*Z
      SK(NF+1)= SKD
      SK(NF+2)= SKD
      SK(NF+3)= SKD
      SK(NF+4)= SKD
      SK(NF+5)= SKD
      NF=NF+5
      IF(IOP8.EQ.1)GO TO 40
      NF=NF+1
      SK(NF)= SKD
   40 SK(NF+1)= 0.06D0
      SK(NF+2)= 0.03D0
      SK(NF+3)= 0.03D0
      SK(NF+4)= 0.03D0
      NF=NF+4
  100 CONTINUE
      RETURN
      END
      SUBROUTINE KM1G(NF,IOP8)
C*
C     --------------
C     U OF T VERSION
C     JANUARY 1987
C     --------------
C*
C     SCALING FACTORS FOR DIAGONAL ELEMENTS OF THE CORE HAMILTONIAN.
C     SPLIT VALENCE BASIS SETS
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA, NB=#NB)
C##
      PARAMETER (NA= 36, NB=200)
C###
      COMMON /A/ IOP(99)
      COMMON /A/ NATOMS,ICHARG,MULTIP,IAN(NA),NAE,NBE,NE,NBASIS,C(NA,3)
      COMMON /A/ CDUM(4),ICDUM(401)
C
      COMMON/C402A/H(NB,NB),SK(NB)
C
      NF=0
      DO 100 I=1,NATOMS
      IZ=IAN(I)
      IF(IZ.LE.0)GO TO 100
      IF(IZ.GT.2)GO TO 10
C     1S,1S'
      NF=NF+1
      SK(NF)=-0.01D0
      NF=NF+1
      SK(NF)= 0.13D0
      IF(IOP(31).LT.4)GO TO 100
      SK(NF+1)=0.01D0
      SK(NF+2)=0.01D0
      SK(NF+3)=0.01D0
      NF=NF+3
      GO TO 100
   10 Z=DFLOAT(IZ)
      IF(IZ.GT.10)GO TO 20
C     1S, 2S,2P, 2S',2P'
      SK(NF+1)= 0.436D0+2.152D-2*Z
      SK(NF+2)= 0.041D0+1.488D-2*Z
      SKP=-0.025D0
      IF(IZ.LT.6)SKP=-0.1D0
      SK(NF+3)= SKP
      SK(NF+4)= SKP
      SK(NF+5)= SKP
      SK(NF+6)= 0.158D0+1.192D-2*Z
      SKP=0.06D0
      IF(IZ.LT.6)SKP=-0.1D0
      SK(NF+7)= SKP
      SK(NF+8)= SKP
      SK(NF+9)= SKP
      NF=NF+9
      IF(IOP(7).EQ.0)GO TO 100
      SK(NF+1)=0.01D0
      SK(NF+2)=0.01D0
      SK(NF+3)=0.01D0
      SK(NF+4)=0.01D0
      SK(NF+5)=0.01D0
      NF=NF+5
      IF(IOP8.EQ.1)GO TO 100
      NF=NF+1
      SK(NF)=0.01D0
      GO TO 100
   20 IF(IZ.GT.18)GO TO 100
C     1S, 2S, 2P, 3S,3P, 3S',3P'
      SK(NF+1)= 0.616D0+9.04D-3*Z
      SK(NF+2)= 0.175D0+1.79D-2*Z
      SK(NF+3)=-0.025D0+1.76D-2*Z
      SK(NF+4)=-0.025D0+1.76D-2*Z
      SK(NF+5)=-0.025D0+1.76D-2*Z
      SK(NF+6)=-0.237D0+2.98D-2*Z
      SK(NF+7)=-0.049D0+1.168D-2*Z
      SK(NF+8)=-0.049D0+1.168D-2*Z
      SK(NF+9)=-0.049D0+1.168D-2*Z
      SK(NF+10)= 0.068D0+8.88D-3*Z
      SKP=0.04D0
      IF(IZ.LT.13)SKP=-0.015D0
      SK(NF+11)= SKP
      SK(NF+12)= SKP
      SK(NF+13)= SKP
      NF=NF+13
  100 CONTINUE
      RETURN
      END
      SUBROUTINE KM11G(NF,IOP8)
C*
C     --------------
C     U OF T VERSION
C     JANUARY 1987
C     --------------
C*
C     SCALING FACTORS FOR DIAGONAL ELEMENTS OF THE CORE HAMILTONIAN.
C     TRIPLE VALENCE BASIS SETS
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA, NB=#NB)
C##
      PARAMETER (NA= 36, NB=200)
C###
      COMMON /A/ IOP(99)
      COMMON /A/ NATOMS,ICHARG,MULTIP,IAN(NA),NAE,NBE,NE,NBASIS,C(NA,3)
      COMMON /A/ CDUM(4),ICDUM(401)
C
      COMMON/C402A/H(NB,NB),SK(NB)
C
      NF=0
      DO 100 I=1,NATOMS
      IZ=IAN(I)
      IF(IZ.LE.0)GO TO 100
      IF(IZ.GT.1)GO TO 10
C     1S,1S',1S"
      NF=NF+1
      SK(NF)=-0.10D0
      NF=NF+1
      SK(NF)= 0.10D0
      NF=NF+1
      SK(NF)= 0.10D0
      GO TO 12
   10 IF(IZ.GT.2)GO TO 20
      SK(NF+1)=-3.0577D0
      SK(NF+2)= 0.3554D0
      SK(NF+3)= 0.3070D0
      NF=NF+3
   12 IF(IOP(31).LT.4)GO TO 100
      SK(NF+1)=0.01D0
      SK(NF+2)=0.01D0
      SK(NF+3)=0.01D0
      NF=NF+3
      GO TO 100
   20 Z=DFLOAT(IZ)
      IF(IZ.GT.10)GO TO 100
C     1S, 2S,2P, 2S',2P', 2S",2P"
      SK(NF+1)= 0.373D0+2.40D-2*Z
      SK(NF+2)= 0.373D0+2.40D-2*Z
      SK(NF+3)=-0.18D0
      SK(NF+4)=-0.18D0
      SK(NF+5)=-0.18D0
      SK(NF+6)= 0.134D0+2.34D-2*Z
      SKP=0.02D0
      IF(IZ.LT.6)SKP=-0.1D0
      SK(NF+7)= SKP
      SK(NF+8)= SKP
      SK(NF+9)= SKP
      SK(NF+10)= 0.186D0+4.88D-3*Z
      SKP=0.05D0
      IF(IZ.LT.6)SKP=-0.06D0
      SK(NF+11)= SKP
      SK(NF+12)= SKP
      SK(NF+13)= SKP
      NF=NF+13
      IF(IOP(7).EQ.0)GO TO 100
      SK(NF+1)=0.01D0
      SK(NF+2)=0.01D0
      SK(NF+3)=0.01D0
      SK(NF+4)=0.01D0
      SK(NF+5)=0.01D0
      NF=NF+5
      IF(IOP8.EQ.1)GO TO 100
      NF=NF+1
      SK(NF)=0.01D0
  100 CONTINUE
      RETURN
      END
      SUBROUTINE DENSTY(MODE,IDOGU)
C*
C     --------------
C     U OF T VERSION
C     JANUARY 1987
C     --------------
C*
C     FORM THE REQUIRED DENSITY MATRICES AND PUT ON DISK.
C
C     MODE IS 0 IF EITHER THIS IS A CLOSED SHELL MOLECULE, OR BOTH
C     DENSITY MATRICES OF AN OPEN SHELL RUN ARE FORMED FROM THE SAME
C     COEFFICIENTS (A). IF MODE IS 1, FORM THE ALPHA SPIN DENSITY FOR
C     AN OPEN SHELL RUN; IF MODE IS 2, FORM THE BETA SPIN DENSITY.
C     THE ORBITAL ENERGIES ARE IN THE FIRST NBASIS POSITIONS OF AA AND
C     XN.
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA, NB=#NB)
C     PARAMETER (NF=#NF, NC=#NC, NE=2*NB)
C##
      PARAMETER (NA= 36, NB=200)
      PARAMETER (NF=120, NC=120, NE=2*NB)
C###
      PARAMETER (ZERO=0.0D0, ONE=1.0D0, TWO=2.0D0)
C
      COMMON /A/ IOP(99)
      COMMON /A/ NATOMS,ICHARG,MULTIP,IAN(NA),NAE,NBE,NED,NBASIS,C(NA,3)
      COMMON /A/ CDUM(4),ICDUM(401)
C
      COMMON/C402A/A(NB,NB),DUMA(NB)
      COMMON/C402B/B(NB,NB)
      COMMON/C402D/XN(NB),AA(NE),
     1 RN(NF),OC(9),AAA(55),BBB(55),COEF(NC),OCCA(9),OCCB(9),
     2 ICONF(NC),IRHF,NCONF,NCORE,NVAL,NOPEN,NFOCK,IMO(4),IORDER(NB)
C
      COMMON/IO/IN,IOUT,IODUM(15),NFILE(100,2)
C
      DIMENSION IXN(NB)
C
      EQUIVALENCE (IXN(1),IORDER(1))
C
      DATA THREE/3.0D0/, PT5/0.5D0/
      DATA PT0001/0.0001D0/
C
 1000 FORMAT(72I1)
 1010 FORMAT('1INITIAL GUESS DENSITY')
 1020 FORMAT('0ALTERATION OF CONFIGURATION:'/(1X,100I1))
 1030 FORMAT(' THESE MO COEFFICIENTS HAVE BEEN WRITTEN TO FILE',I3,
     $ ', RE-ORDERED BY GROUPS')
 1040 FORMAT(1X)
C*
C     REORDER THE MO FOR RHF RUNS.
      IF(IOP(9).NE.2)GO TO 280
      IF(IDOGU.EQ.0)RETURN
      NMAX=6
C     COPY ALL MO COEFFICIENTS TO B, AND EIGENVALUES TO XN.
      DO 200 I=1,NBASIS
      XN(I)=AA(I)
      DO 200 J=1,NBASIS
  200 B(J,I)=A(J,I)
      IC=0
      DO 230 K=1,NMAX
      DO 220 I=1,NBASIS
      IF(IORDER(I).NE.K)GO TO 220
C     COPY MO I BACK INTO A (COLUMN IC).
      IC=IC+1
      AA(IC)=XN(I)
      AA(NBASIS+IC)=XN(I)
      DO 210 J=1,NBASIS
  210 A(J,IC)=B(J,I)
  220 CONTINUE
  230 CONTINUE
  280 NCE=NAE
      ID=19
      OCC=TWO
      IF(IOP(9).NE.0)OCC=ONE
      IF(MODE.EQ.2)GO TO 300
C     MODE IS 0 OR 1 - SAVE EIGENVALUES AND RHF SAVE DATA.
      IF(IOP(10).NE.0)CALL TWRITE(5,AA,NFILE(5,1),1,NFILE(5,1),1,0)
      IC=25
      IF(IOP(9).NE.2)GO TO 10
      WRITE(IOUT,1040)
C     SET OCCUPANCY FOR RHF CASES - GET ALPHA DENSITY.
      DO 1 I=1,NBASIS
    1 XN(I)=ZERO
C     DOUBLY OCCUPIED ORBITALS.
      NMAX=IMO(2)-1
      IF(NMAX.LE.0)GO TO 3
      DO 2 I=1,NMAX
    2 XN(I)=ONE
C     OPEN SHELL ORBITALS.
    3 IS=IMO(3)
      NMAX=IMO(4)-1
      IF(NMAX.LT.IS)GO TO 15
      J=0
      DO 4 I=IS,NMAX
      J=J+1
    4 XN(I)=OCCA(J)
      GO TO 15
C     MODE IS 2 - DO BETA SPIN ORBITALS.
C     RESTORE BETA EIGENVALUES TO THEIR PROPER PLACE IN AA.
  300 IF(IOP(10).EQ.0)GO TO 5
      CALL TREAD(5,AA,NB,1,NBASIS,1,0)
      DO 310 I=1,NBASIS
  310 AA(NBASIS+I)=XN(I)
      CALL TWRITE(5,AA,NFILE(5,1),1,NFILE(5,1),1,0)
    5 NCE=NBE
      ID=21
      IC=27
      IF(IOP(9).NE.2)GO TO 10
C     SET OCCUPANCY FOR RHF CASES - GET BETA DENSITY.
      DO 6 I=1,NBASIS
    6 XN(I)=ZERO
C     DOUBLY OCCUPIED ORBITALS.
      NMAX=IMO(2)-1
      IF(NMAX.LE.0)GO TO 8
      DO 7 I=1,NMAX
    7 XN(I)=ONE
C     OPEN SHELL ORBITALS.
    8 IS=IMO(3)
      NMAX=IMO(4)-1
      IF(NMAX.LT.IS)GO TO 15
      J=0
      DO 9 I=IS,NMAX
      J=J+1
    9 XN(I)=OCCB(J)
      GO TO 15
   10 NMAX=1
C     SAVE COEFFICIENTS IN FILE IC.
   15 IF(IOP(10).EQ.0)GO TO 16
      CALL TWRITE(IC,A,NB,NB,NBASIS,NBASIS,0)
      IF(IOP(9).EQ.2)WRITE(IOUT,1030)IC
   16 IF(IOP(9).EQ.2)GO TO 110
      IF(IDOGU.EQ.0.AND.IOP(18).EQ.0)RETURN
      IF(IOP(18).EQ.0)GO TO 60
C     READ IN THE CONFIGURATION AND FORM THE OCCUPATION LEVEL VECTOR
      READ(IN,1000)(IXN(I),I=1,NBASIS)
      WRITE(IOUT,1020)(IXN(I),I=1,NBASIS)
      IF(IDOGU.EQ.0)GO TO 150
      DO 50 I=1,NBASIS
      IF(IXN(I)-1)20,30,40
   20 XN(I)=ZERO
      GO TO 50
   30 XN(I)=ONE
      NMAX=I
      GO TO 50
   40 XN(I)=ONE/DFLOAT(IXN(I))
      NMAX=I
   50 CONTINUE
      GO TO 110
   60 IF(NCE.EQ.0)GO TO 75
      DO 70 I=1,NCE
   70 XN(I)=ONE
      NMAX=NCE
      IF(NCE.EQ.NBASIS)GO TO 110
   75 NCE1=NCE+1
      DO 80 I=NCE1,NBASIS
   80 XN(I)=ZERO
      IF(IOP(19).EQ.0.OR.NCE.EQ.0)GO TO 110
C     ADJUST THE OCCUPATION LEVEL VECTOR SO THAT ALL OF THE ORBITALS
C     IN A DEGENERATE SET ARE EQUALLY OCCUPIED.
      A0=AA(NCE)
      A1=AA(NCE+1)
      IF(DABS(A0-A1).GE.PT0001)GO TO 110
      IF(NCE+1.EQ.NBASIS)GO TO 90
      A2=AA(NCE+2)
      IF(DABS(A2-A1).GE.PT0001)GO TO 90
      NMAX=NCE+2
      XN(NCE  )=ONE/THREE
      XN(NCE+1)=ONE/THREE
      XN(NCE+2)=ONE/THREE
      GO TO 110
   90 AM1=AA(NCE-1)
      NMAX=NCE+1
      IF(DABS(AM1-A0).GE.PT0001)GO TO 100
      XN(NCE-1)=TWO/THREE
      XN(NCE  )=TWO/THREE
      XN(NCE+1)=TWO/THREE
      GO TO 110
  100 XN(NCE  )=PT5
      XN(NCE+1)=PT5
C
C     FORM THE DENSITY MATRIX
  110 DO 130 I=1,NBASIS
      DO 130 J=1,I
      TERM=ZERO
      DO 120 K=1,NMAX
  120 TERM=TERM+A(I,K)*A(J,K)*XN(K)
      TERM=TERM*OCC
      B(I,J)=TERM
  130 B(J,I)=TERM
      IF(IOP(20).LT.2)GO TO 140
      WRITE(IOUT,1010)
      CALL GBSOUT(B,XN,NB,NB,NBASIS,0)
  140 CALL TWRITE(ID,B,NB,NB,NBASIS,NBASIS,1)
  150 IF(MODE.EQ.0.AND.IOP(9).NE.0.AND.ID.EQ.19)GO TO 5
      RETURN
      END
      SUBROUTINE NVSQRT(IBASIS,IERR)
C*
C     --------------
C     U OF T VERSION
C     JANUARY 1987
C     --------------
C*
C     THIS IS A ROUTINE WHICH CALCULATES THE INVERSE SQUARE ROOT
C     OF THE MATRIX B.  IT RETURNS WITH B**(-1/2) IN V AND THE
C     EIGENVECTORS OF B IN B.  THE EIGENVALUES OF B ARE IN VV AND
C     BB IS USED FOR SCRATCH.
C     IBASIS IS THE DIMENSION OF B.
C     IERR IS SET TO -2 IF THERE IS A DIAGONALIZATION ERROR.
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NB=#NB)
C     PARAMETER (NF=#NF, NC=#NC)
C##
      PARAMETER (NB=200)
      PARAMETER (NF=120, NC=120)
C###
      PARAMETER (ONE=1.0D0)
C
      COMMON/C402A/A(NB,NB),DUMA(NB)
      COMMON/C402B/B(NB,NB)
      COMMON/C402C/V(NB,NB)
      COMMON/C402D/VV(NB),AA(NB),BB(NB),RD1(NF),RD2(NC),RD3(137),
     1 ID1(NC),ID2(10),ID3(NB)
C
      DATA TENM10/1.0D-10/
C
      IERR=0
      CALL TRED12(IBASIS,NB,B,B,VV,BB,-2)
      DO 20 I=1,IBASIS
      IF(VV(I).GT.TENM10)GO TO 10
      IERR=-2
      RETURN
   10 TERM=ONE/DSQRT(VV(I))
      DO 20 J=1,IBASIS
   20 A(J,I)=B(J,I)*TERM
      CALL MATPAC(A,B,V,IBASIS,3)
      RETURN
      END
      SUBROUTINE READER(NBASIS,IOP)
C*
C     ROUTINE TO READ MATRIX DATA FROM CARDS AND SAVE ON DISK.
C
C=
C1MATRIX-INPUT
C     EACH MATRIX IS PRECEEDED BY A CARD CONTAINING
C     CODE . FILE . IX . IY . SEQ . NUMBER . ITITLE (A4,I4,2I8,2I4,10A4)
C     WHERE
C     CODE IS A 4 LETTER CODE IDENTIFYING THE MATRIX (EG. '***S'),
C     FILE IS THE FILE NUMBER FOR UNIT IMAT,
C     IX AND IY ARE THE DIMENSIONS OF THE MATRIX,
C     SEQ IS THE SEQUENCE NUMBER OF THIS MATRIX (IE. 1, 2 OR 3), AND
C     NUMBER IS THE TOTAL NUMBER OF MATRICES IN THE SET (EG. 1 FOR THE
C     OVERLAP, 3 FOR THE DIPOLE INTEGRALS, AND 1 OR 2 FOR THE
C     COEFFICIENTS DEPENDING WHETHER IT IS A CLOSED OR OPEN SHELL).
C     ITITLE IS THE FIRST 40 LETTERS OF THE TITLE CARD FOR THE STEP
C     THAT PUNCHED THE DECK.
C==
C*
C1
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NB=#NB)
C     PARAMETER (NF=#NF, NC=#NC, NE=2*NB)
C##
      PARAMETER (NB=200)
      PARAMETER (NF=120, NC=120, NE=2*NB)
C###
      PARAMETER (NBB=NB*(NB+1)/2, NBF1=NB*NB-NBB)
C     MAXMAT IS THE MAXIMUM NUMBER OF MATRICES TO READ.
      PARAMETER (MAXMAT=8)
C
      COMMON/C402A/A(NBB),A1(NBF1),DUMA(NB)
      COMMON/C402C/C(NB,NB)
      COMMON/C402D/VV(NB),EIG(NE),RD1(NF),RD2(NC),RD3(137),
     1 ID1(NC),ID2(10),ID3(NB)
C
      COMMON/IO/IN,IOUT,IODUM(15),NFILE(100,2)
C
      CHARACTER ID*4,IDCODE*4,ITITLE*40
C
      DIMENSION IOP(99), IDCODE(MAXMAT), NUM(MAXMAT)
C
      DATA IDCODE/'***S','***H','**DM','***C','***D','***F','***L',
     1 '***T'/
      DATA NUM/1, 1, 3, 2, 2, 2, 2, 1/
C
 1000 FORMAT(A4,I4,2I8,2I4,A40)
 1010 FORMAT(' DECK ',A4,' READ FROM UNIT',I3,' AND WRITTEN TO FILE',I3,
     1 ', TITLE: ',A40)
 1020 FORMAT(6F12.7)
 1030 FORMAT('0DECK CODE ',A4,' NOT RECOGNIZED OR OUT OF ORDER')
 1040 FORMAT('0MATRIX DIMENSION OR SEQUENCE ERROR FOR DECK ',A4,I5,2I9,
     1 2I5,1X,A40)
C*
C     GET UNIT NUMBER FOR READ OPERATIONS.
      IUNIT=IN
      IF(IOP(29).NE.0)IUNIT=IOP(29)
      NTT=NBASIS*(NBASIS+1)/2
      IOP9=IOP(9)
C     LOOP OVER THE READ OPTIONS.
C
      DO 60 L=1,MAXMAT
      IF (L.LE.7 .AND. IOP(L+21).EQ.0) GO TO 60
      IF (L.EQ.8 .AND. IOP(35).EQ.0) GO TO 60
      N=NUM(L)
      IF(IOP9.EQ.0.AND.L.GE.4)N=1
      IF(IOP9.EQ.2.AND.L.EQ.4)N=1
      IF(IOP9.EQ.2.AND.L.EQ.6)N=1
C
      DO 50 I=1,N
      READ(IUNIT,1000)ID,IFILE,IX,IY,ISEQ,INUM,ITITLE
      IF(ID.NE.IDCODE(L))GO TO 100
      IF(ISEQ.NE.I.OR.INUM.NE.N)GO TO 110
C     LOOK FOR ***C OR ***L INPUT.
      IF(L.EQ.4)GO TO 10
      IF(L.EQ.7)GO TO 30
      IF (L .EQ. 8) GO TO 45
      IF(IX.NE.NTT.OR.IY.NE.1)GO TO 110
      READ(IUNIT,1020)(A(J),J=1,NTT)
      CALL TWRITE(IFILE,A,NBB,1,NTT,1,0)
      GO TO 50
C
C     READ CMO AND ORBITAL ENERGIES.
   10 IF(IX.NE.IY.OR.IX.NE.NBASIS)GO TO 110
      DO 20 J=1,NBASIS
   20 READ(IUNIT,1020)(C(K,J),K=1,NBASIS)
      J=NBASIS*(I-1)
      READ(IUNIT,1020)(EIG(K+J),K=1,NBASIS)
      CALL TWRITE(IFILE,C,NB,NB,NBASIS,NBASIS,0)
C     DUPLICATE COEFFICIENTS FOR RHF RUNS.
      IF(IOP9.NE.2)GO TO 26
      CALL TWRITE(27,C,NB,NB,NBASIS,NBASIS,0)
      DO 25 J=1,NBASIS
   25 EIG(NBASIS+J)=EIG(J)
   26 IF(I.EQ.N)CALL TWRITE(5,EIG,NFILE(5,1),1,NFILE(5,1),1,0)
      GO TO 50
C
C     READ LMO (OCCUPIED VECTORS ONLY, NO ORBITAL ENERGIES).
   30 IF(IX.NE.NBASIS)GO TO 110
      DO 40 J=1,IY
   40 READ(IUNIT,1020)(C(K,J),K=1,NBASIS)
      CALL TWRITE(IFILE,C,NB,NB,NBASIS,IY,0)
      GO TO 50
C
C     READ LMO 'T' MATRIX (NMO BY LMO).
   45 DO 46 J=1,IY
   46 READ (IUNIT,1020) (C(K,J),K=1,IX)
      CALL TWRITE (IFILE, C, NB, NB, IX, IY, 0)
C
   50 WRITE(IOUT,1010)ID,IUNIT,IFILE,ITITLE
C
   60 CONTINUE
      RETURN
C
  100 WRITE(IOUT,1030)ID
      IOP(1)=-2
      RETURN
  110 WRITE(IOUT,1040)ID,IFILE,IX,IY,ISEQ,INUM,ITITLE
      IOP(1)=-2
      RETURN
      END
      SUBROUTINE MATREC(A,B,C,L,M,N,W,KEY)
C*
C     --------------
C     U OF T VERSION
C     JANUARY 1987
C     --------------
C*
C     ROUTINE TO MULTIPLY RECTANGULAR MATRICES.
C     A IS L X M, B IS M X N AND C IS L X N.
C     W IS A WORK VECTOR.
C     IF KEY=1, C = A*B.
C     IF KEY=2, C = A*B'.
C     IF KEY=3, B = A*B (C IS NOT USED, B IS L X N ON RETURN).
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NB=#NB)
C##
      PARAMETER (NB=200)
C###
      PARAMETER (ZERO=0.0D0)
C
      DIMENSION A(NB,NB),B(NB,NB),C(NB,NB),W(NB)
C
      IF(KEY-2)100,200,300
C     C = A*B.
  100 DO 120 I=1,L
      DO 120 J=1,N
      T=ZERO
      DO 110 K=1,M
  110 T=T+A(I,K)*B(K,J)
  120 C(I,J)=T
      RETURN
C     C = A*B'.
  200 DO 220 I=1,L
      DO 220 J=1,N
      T=ZERO
      DO 210 K=1,M
  210 T=T+A(I,K)*B(J,K)
  220 C(I,J)=T
      RETURN
C     B = A*B.
  300 DO 330 J=1,N
      DO 320 I=1,L
      T=ZERO
      DO 310 K=1,M
  310 T=T+A(I,K)*B(K,J)
  320 W(I)=T
      DO 330 I=1,L
  330 B(I,J)=W(I)
      RETURN
      END
