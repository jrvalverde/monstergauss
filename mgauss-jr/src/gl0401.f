C     GL0401       21 APR 89                                         MRP
C?IBM/GLD/GBR/VAX/UNX
      SUBROUTINE RHFIN
C??
C?CDC
C     PROGRAM RHFIN
C??
C=INITIAL GUESS
C CHAPTER 6: INITIAL GUESS.
C **********
C
C1RHF
C     LINK 0401
C
C     ******************************************************************
C     INPUT TO SPECIFY THE DESIRED STATE FOR RHF OPEN SHELL RUNS.
C     ******************************************************************
C
C     AUTHORS: M.R. PETERSON AND R.A. POIRIER, UNIVERSITY OF TORONTO,
C              DEPARTMENT OF CHEMISTRY, TORONTO.
C     VERSION: JUNE 1987.
C*
C     (1)  LEVEL GROUP VECTOR IGRP (72A1).
C     (2)  LEVEL DEGENERACY VECTOR IDGEN (72I1).
C     (3)  LEVEL ALPHA SPIN OCCUPANCY VECTOR IAOCC (72I1).
C     (4)  LEVEL BETA SPIN OCCUPANCY VECTOR IBOCC (72I1).
C     (5)  LEVEL DOUBLE OCCUPANCY VECTOR IDOCC - IF NECESSARY (72I1).
C     (6)  COULOMB COUPLING COEFFICIENTS - IF NECESSARY.
C          I1,J1, 12,J2, ...                  (36I2)
C     (7)  EXCHANGE COUPLING COEFFICIENTS - IF NECESSARY.
C          I1,J1, I2,J2, ...                  (36I2)
C     NOTE: THE COULOMB AND EXCHANGE COUPLING COEFFICIENTS ARE READ AS
C           TWO INTEGERS: A NUMERATOR (I'S) AND A DENOMINATOR (J'S).
C           COEFFICIENTS = I1/J1, I2/J2, ... NOPEN(NOPEN+1)/2 VALUES.
C           UPPER TRIANGLE ONLY, BY COLUMNS, SEE EXAMPLES BELOW.
C           NOTE THAT THE DENOMINATOR MAY NOT BE 0.
C     (8)  PAIR EXCITATION CODES IF NECESSARY - SEE BELOW.
C
C     NOTE THAT NBASIS ENTRIES IN EACH VECTOR ARE ALWAYS READ AND
C     INTERPRETED, EVEN IF THE NBASIS ORBITALS CAN BE DEFINED WITH
C     FEWER ENTRIES DUE TO LEVEL DEGENERACIES. THUS BASES WITH MORE
C     THAN 72, BUT UP TO 144, AO WILL REQUIRE 2 CARDS FOR EACH VECTOR,
C     145 TO 216 AO WILL REQUIRE 3 CARDS PER VECTOR, ETC.
C
C     IGRP, IDGEN, IAOCC, IBOCC AND IDOCC DEFINE THE MO LEVELS:
C
C     IGRP(I) IS THE GROUP CODE ('F', 'D', 'S', 'A', 'V' OR ' ')
C     FOR ALL MO OF THIS LEVEL.
C     GROUP 'F' CONTAINS THE FROZEN CORE ORBITALS, WHICH ARE ALWAYS
C     DOUBLY OCCUPIED.
C     GROUP 'D' CONTAINS THE ORBITALS THAT ARE DOUBLY OCCUPIED IN THE
C     ROOT CONFIGURATION, BUT WILL BE INVOLVED IN PAIR EXCITATIONS TO
C     THE GROUP 'S', OR IN GVB PAIRS WHERE ONE MO IN THE PAIR MUST
C     COME FROM GROUP 'D' AND THE OTHER FROM GROUP 'S'.
C     GROUP 'S' CONTAINS THE ORBITALS THAT ARE UNOCCUPIED IN THE ROOT
C     CONFIGURATION, BUT WILL BE THE RECIPIENTS OF PAIR EXCITATIONS
C     FROM GROUP 'D', OR THE OTHER HALF OF GVB PAIRS.
C     GROUP 'A' CONTAINS ALL THE OPEN SHELL ORBITALS.
C     GROUP 'V' OR ' ' CONTAINS ALL THE VIRTUAL ORBITALS.
C
C     IDGEN(I) IS THE NUMBER OF MO (0-9) IN THIS LEVEL. A 0 VALUE IS
C     INTERPRETED AS A 1, PROVIDED THIS LEVEL BELONGS TO THE VIRTUAL
C     GROUP (GROUP 'V'). TO ENSURE THE CORRECT OCCUPATION NUMBERS,
C     DEGENERATE OPEN SHELL MO SHOULD ALWAYS BE DEFINED AS ONE LEVEL.
C
C     IAOCC(I) AND IBOCC(I) GIVE THE NUMBER OF ALPHA AND BETA SPIN
C     ELECTRONS CONTAINED IN THIS LEVEL. IF BOTH ARE LEFT BLANK (OR
C     ZERO), THE FOLLOWING DEFAULTS ARE ASSUMED: FOR GROUPS 'F' AND 'D',
C     IAOCC(I) AND IBOCC(I) ARE SET TO IDGEN(I); FOR GROUP 'S', IAOCC(I)
C     AND IBOCC(I) ARE SET TO ZERO; FOR GROUP 'A', IAOCC(I) IS SET TO
C     IDGEN(I) AND IBOCC(I) IS SET TO ZERO; FOR GROUP 'V' (OR
C     GROUP ' '), IAOCC(I) AND IBOCC(I) ARE SET TO ZERO.
C     IT IS PERMISSIBLE NOT TO FILL GROUP 'A' WITH EITHER ALPHA
C     OR BETA SPIN ELECTRONS, LEADING TO FRACTIONAL OCCUPANCIES -
C     FOR EXAMPLE, A GROUP COULD CONTAIN 3 MO BUT ONLY 1 (OR 2) ALPHA
C     SPIN ELECTRONS. FOR PARTIALLY OCCUPIED LEVELS, THE DESCRIPTION
C     OF THE LEVEL IN TERMS OF THE NUMBER OF DOUBLY OCCUPIED MO,
C     ALPHA SPIN MO, BETA SPIN MO AND EMPTY MO MAY NOT BE UNIQUE BASED
C     ONLY ON IDGEN(I), IAOCC(I) AND IBOCC(I). FOR EXAMPLE, IN THE CASE
C     OF 2 ALPHA SPIN ELECTRONS PLUS 1 BETA SPIN ELECTRON IN A TRIPLY
C     DEGENERATE LEVEL, THE FOLLOWING 2 CONFIGURATIONS ARE POSSIBLE:
C        A   A    B   AND   AB  A
C        --  --  --         --  --  --
C     THIS ROUTINE WILL ALWAYS GENERATE THE STATE WHICH HAS THE
C     HIGHEST ANGULAR MOMENTUM (FEWEST DOUBLY OCCUPIED ORBITALS IN
C     THE LEVEL) - THIS WOULD BE THE STATE ON THE LEFT ABOVE. THE
C     IDOCC VECTOR (SEE BELOW) MAY BE USED (BY SETTING IOP(14) TO 1 OR
C     3) TO SPECIFY THE NUMBER OF DOUBLY OCCUPIED MO IN THE LEVEL,
C     AND THUS GENERATE THE STATE ON THE RIGHT ABOVE.
C     GENERALLY, MOLECULAR ORBITALS DECLARED AS DEGENERATE ARE NOT IN
C     FACT REQUIRED TO BE DEGENERATE - IT IS MERELY A CONVENIENT WAY OF
C     COLLECTING ADJACENT MO BELONGING TO THE SAME GROUP TOGETHER.
C     THIS IS ALWAYS TRUE FOR GROUPS 'F', 'D', 'S' AND 'V' (OR ' ').
C     HOWEVER, IF ANY OF THE 'A' LEVELS IS PARTIALLY OCCUPIED
C     (FRACTIONAL OCCUPANCY), THE DECLARED DEGENERACIES ARE VERY
C     IMPORTANT, BUT ONLY FOR THE 'A' LEVELS.
C     IN THIS REGARD, THE CASES BELOW ARE VERY DIFFERENT:
C                  B
C                  -
C
C                  A                             A  A  B
C                  -                             -  -  -
C
C                  A
C                  -
C     SINCE THE CASE ON THE LEFT WILL ENFORCE THE SPECIFIED
C     OCCUPANCY ON EACH OPEN SHELL MO (TWO WILL BE OCCUPIED WITH A
C     SINGLE ALPHA SPIN ELECTRON, ONE WILL BE OCCUPIED WITH A SINGLE
C     BETA SPIN ELECTRON), WHILE THE RIGHT HAND CASE WILL AVERAGE
C     TWO SINGLE ALPHA SPIN ELECTRONS PLUS ONE BETA SPIN ELECTRON
C     OVER THE THREE MOLECULAR ORBITALS.
C     IN ADDITION, FOR THE FOLLOWING OCCUPATION SCHEME
C                  A
C                  -  -
C
C                  A
C                  -  -
C     THE PROGRAM WILL AVERAGE THE FOLLOWING POSSIBLE CONFIGURATIONS
C     TO DETERMINE THE COUPLING CONSTANTS:
C                  A            A      A            A
C                  -  -      -  -      -  -      -  -
C
C                  A         A            A         A
C                  -  -      -  -      -  -      -  -
C     WHICH EFFECTIVELY RESULTS IN THE OCCUPATION OF EACH MO OF EACH
C     LEVEL BY HALF AN ELECTRON ON AVERAGE. THE SAME AVERAGING WILL
C     BE APPLIED TO ALL CASES WHERE THERE ARE DEGENERATE LEVELS.
C
C     IDOCC(I), READ ONLY IF IOP(14) IS SET TO 1 OR 3 WITH THE *IOP
C     INPUT COMMAND (SEE LINK 0100), ALLOWS THE USER TO SPECIFY THE
C     NUMBER OF DOUBLY OCCUPIED MO IN AN 'A' LEVEL. THE
C     VALUE OF IDOCC(I) MUST BE LESS THAN OR EQUAL TO THE SMALLER OF
C     IAOCC(I) AND IBOCC(I). NORMALLY, THE ROUTINE SELECTS THE
C     OCCUPATION SCHEME WITH THE FEWEST NUMBER OF DOUBLY OCCUPIED
C     ORBITALS IN AN OPEN SHELL LEVEL. IDOCC(I) MUST BE ZERO FOR
C     GROUPS 'F', 'D', 'S' AND 'V' (OR ' ').
C*
C     DATA INPUT REQUIRED FOR IOP(14) = 2 OR 3.
C*
C     THE ADDITIONAL INPUT CONSISTS OF THE COUPLING COEFFICIENTS.
C
C     FFFFAAVA          OR             FA A
C     11111111                         4211
C     11111101                         4201
C     11110000                         4000
C      0 2 1 2 0 2 1 2 1 2 0 2          0 2 1 2 0 2 1 2 1 2 0 2
C      0 2 1 2 0 2 1 2 1 2 0 2          0 2 1 2 0 2 1 2 1 2 0 2
C
C     NOTE: THESE COUPLING CONSTANTS ARE THE SAME AS THE INTERNALLY
C     GENERATED CONSTANTS FOR THIS STATE.
C     THE RIGHT COLUMN ABOVE GIVES THE SAME RESULT, BUT USES THE
C     DEGENERACY CARD TO FULL ADVANTAGE.
C*
C     DETERMINATION OF THE COUPLING COEFFICIENTS A(I,J) AND B(I,J).
C*
C     THEY ARE DERIVED FROM E.R. DAVIDSON, CHEM. PHYS. LETTS., 21,
C     565 (1973), AND MANY EXAMPLES ARE GIVEN IN
C     R. CARBO AND J.M. RIERA, LECTURE NOTES IN CHEMISTRY - A
C     GENERAL SCF THEORY, (SPRINGER-VERLAG, N.Y., 1978).
C     NOTE THAT SOME OF THE EXAMPLES IN THE LATTER REFERENCE ARE
C     EITHER IN ERROR, OR INVOLVE PARTICULAR CONFIGURATIONS THAT
C     SHOULD PROBABLY BE AVERAGED TOGETHER TO PRODUCE THE CORRECT
C     COUPLING COEFFICIENTS. IN PARTICULAR, THE COUPLING CONSTANTS
C     FOR THE 5 ELECTRONS IN A TRIPLY DEGENERATE LEVEL (E.G. F ATOM),
C     ARE INCORRECT (THIS ROUTINE USES THE CORRECT VALUES).
C
C     EXAMPLES
C     (1) DOUBLY DEGENERATE STATES
C     SINGLET
C     ...FA
C     ...12
C     ...11
C     ...11
C      0 1 1 2 0 1
C      0 1-1 2 0 1
C
C     (2) TRIPLY DEGENERATE STATES
C     TRIPLET
C     ...FA
C     ...13
C     ...12
C     ...10
C      0 1 1 6 0 1 1 6 1 6 0 1
C      0 1 1 6 0 1 1 6 1 6 0 1
C
C     NOTE: THESE COUPLING CONSTANTS ARE THE SAME AS THE INTERNALLY
C     GENERATED CONSTANTS FOR THESE STATES.
C*
C2MCSCF
C2GVB
C     PAIR EXCITATION CODE INPUT.
C*
C     THE FIRST CARD CONTAINS THE MC-SCF CODE AND THE NUMBER OF
C     CONFIGURATIONS TO BE READ FROM CARDS:
C     CODE, NCONF (A4, I4 FORMAT)
C     WHERE CODE IS ONE OF 'PAIR', 'INDP', 'COMP' OR 'GVB '.
C
C     'PAIR': PAIR-WISE EXCITATIONS MC-SCF. NCONF CONFIGURATIONS ARE
C     READ IN AS DESCRIBED BELOW.
C
C     'INDP': PAIR-WISE EXCITATIONS MC-SCF. THE FIRST GROUP D
C     ORBITAL IS PAIRED WITH THE FIRST GROUP S ORBITAL, THE SECOND D
C     ORBITAL WITH THE SECOND S ORBITAL, ETC. NCONF MUST BE 0.
C
C     'COMP': COMPLETE PAIR-WISE EXCITATIONS MC-SCF. ALL POSSIBLE
C     EXCITATIONS FROM THE D ORBITALS TO THE S ORBITALS ARE INCLUDED.
C     NCONF MUST BE 0.
C
C     'GVB ': GENERALIZED VALENCE BOND. IF NCONF IS 0, THE VALENCE
C     BOND PAIRS ARE TAKEN AS THE FIRST D ORBITAL WITH THE FIRST S
C     ORBITAL, THE SECOND D ORBITAL WITH THE SECOND S ORBITAL, ETC.
C     IF NCONF IS NON-ZERO, NCONF VALENCE BOND PAIRS ARE READ IN AS
C     DESCRIBED BELOW.
C
C     THE NEXT CARD(S) CONTAIN NCONF CONFIGURATIONS (IF NCONF > 0) IN
C     THE FORM (IN FREE FORMAT)
C     L - U, L - U, L - U, ...
C     WHERE L IS THE ORBITAL NUMBER EXCITED FROM, AND U IS THE ORBITAL
C     NUMBER EXCITED TO. L AND U MUST BELONG TO THE D AND S ORBITAL
C     GROUPS RESPECTIVELY, AND REFER TO THE MO NUMBERS BEFORE THE
C     MO ARE SORTED BY GROUPS. THE D-U ENTRIES ARE SEPARATED BY A
C     COMMA. FOR EXAMPLE:
C     INDP   3
C     8-11, 9 - 13 , 10 -   12
C     IF THE LIST OF PAIR EXCITATIONS DOES NOT FIT ON ONE CARD, STOP
C     THE CARD AFTER A COMMA AND CONTINUE ONTO THE NEXT CARD(S).
C
C     NOTE: THE MAXIMUM NUMBER OF CONFIGURATIONS / GVB PAIRS IS #NC,
C     INCLUDING THE ROOT CONFIGURATION FOR ALL BUT GVB RUNS.
C*
C1RHF
C     ****************
C     IMPORTANT NOTES.
C     ****************
C*
C     1) RESULTS CALCULATED FROM MO COEFFICIENTS (SPECIFICALLY LMO AND
C     OEP) WILL BE INCORRECT IN GENERAL, UNLESS EACH OPEN SHELL MO
C     CONTAINS ONLY ONE ALPHA SPIN ELECTRON, AND THERE ARE NO GROUP 'D'
C     OR 'S' ORBITALS.  ONE-ELECTRON PROPERTIES CALCULATED FROM THE
C     DENSITY (THE DEFAULT FOR RHF RUNS NOT REQUESTING INTEGRALS OVER
C     MO) ARE CORRECT FOR ALL CASES.
C
C     2) FOR ALL INITIAL GUESS TYPES EXCEPT GUESS=NONE, THE
C     EIGENVALUES AND MC-SCF COEFFICIENTS IN THE DISK FILE WILL BE
C     DESTROYED, EVEN FOR CHECK RUNS. FOR GUESS=NONE RUNS,
C     THE EIGENVALUES AND MC-SCF COEFFICIENTS ARE SAVED.
C
C     3) FOR ALL NON-CHECK RUNS, THE ORDER OF THE MO VECTORS ON DISK
C     IS ALTERED TO CONSOLIDATE THE MO BY GROUPS.
C
C     4) FOR GU=N RUNS, THE OPEN SHELL CONFIGURATION, AND THE LIST OF
C     CONFIGURATIONS FOR MC-SCF/GVB, ARE RECOVERED FROM DISK, AND
C     THEREFORE NO RHF INPUT DATA IS REQUIRED, AND NONE SHOULD BE
C     GIVEN. THE VALUE OF IOP(14) WILL BE IGNORED.
C
C     5) FOR OPEN SHELL SINGLET CALCULATIONS, THE STATE SYMMETRY
C     MUST BE DIFFERENT FROM THAT OF THE GROUND STATE. THIS GENERALLY
C     REQUIRES THE OPEN SHELL MO TO BELONG TO DIFFERENT IRREDUCIBLE
C     REPRESENTATIONS OF THE POINT GROUP (E.G. A' AND A" IN CS),
C     AND THAT THE MOLECULE MUST HAVE SOME SYMMETRY. THUS, OPEN SHELL
C     SINGLET CALCULATIONS ON ASYMMETRIC MOLECULES ARE NOT VALID.
C
C=INITIAL GUESS
C1OPTIONS
C     ******************************************************************
C     OPTIONS ... IOP()     FOR LINK 0401
C     ******************************************************************
C     IOP(13) ... TYPE OF INITIAL GUESS.
C     0  EXTENDED HUCKEL GUESS (USE ONLY FOR INTERNAL STO-NG BASES).
C     1  PROJECTED HUCKEL GUESS.
C     2  DIAGONALIZE THE CORE HAMILTONIAN.
C     3  READ THE DENSITY MATRIX - THIS SETS IOP(26)=1.
C     4  READ THE COEFFICIENT MATRIX - THIS SETS IOP(25)=1.
C     5  NONE - USE C FROM DISK.
C     6  DIAGONALIZE SCALED HAMILTONIAN.
C     7  PMO RESTART - THIS SETS IOP'S 22, 23, 25 AND 27 TO 1.
C
C     IOP(14) ... READ EXTRA CONFIGURATION DATA.
C     0  NO.
C     1  READ IDOCC(I) VECTOR.
C     2  READ COULOMB/EXCHANGE COUPLING CONSTANTS.
C     3  BOTH 1 AND 2.
C
C     IOP(15) TO IOP(60) ... NOT USED - SEE LINK 0402.
C     ******************************************************************
C==
C
C/
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
C     SET LIMITS ON OPEN SHELL MO (MAXOPN), OCCUPIED MO (NR),
C     DENSITY MATRIX ELEMENTS (NB1), FOCK MATRICES (NF) AND
C     CONFIGURATIONS (NC).
C#
C     PARAMETER (NA=#NA, NB=#NB)
C     PARAMETER (NR=#NR, NF=#NF, NC=#NC, NE=2*NB)
C##
      PARAMETER (NA= 36, NB=200)
      PARAMETER (NR=101, NF=120, NC=120, NE=2*NB)
C###
      PARAMETER (NB1=NB*(NB+1))
      PARAMETER (ZERO=0.0D0, ONE=1.0D0, TWO=2.0D0)
      PARAMETER (MAXOPN=9)
C
      COMMON /A/ IOP(99)
      COMMON /A/ NATOMS,ICHARG,MULTIP,IAN(NA),NAE,NBE,NED,NBASIS,C(NA,3)
      COMMON /A/ CDUM(4),ICDUM(401)
C
C     NMO, NALP AND NBET COUNT MO, AND ALPHA AND BETA ELECTRONS PER
C     GROUP, EXCEPT FOR GROUP 'V' (DIMENSION: 4).
C     LINE: INPUT LINE FOR CONFIGURATIONS (72).
C     IFILL: FILLER ARRAY FOR FREE FORMAT INPUT (3).
C     A,B: PRINTING ARRAYS (NOPEN+1,NOPEN+1).
C     NUMC: TOTAL NUMBER OF CONFIGURATIONS FOR LEVEL I (NOPEN).
C     NUML: DEGENERACY OF LEVEL I (NOPEN).
C     NUMD: NUMBER OF DOUBLY OCCUPIED MO IN LEVEL I (NOPEN).
C     NUMA: NUMBER OF ALPHA SPIN SINGLY OCCUPIED MO IN LEVEL I (NOPEN).
C     NUMB: NUMBER OF BETA SPIN SINGLY OCCUPIED MO IN LEVEL I (NOPEN).
C     I1,J1,K1,L1: INPUT ARRAYS FOR COUPLING CONSTANTS
C                  (NOPEN*(NOPEN+1)/2).
C     ICONF1,ICONF2: PRINTING ARRAYS FOR CONFIGURATIONS (#NC).
C     MAPNEW: SORTED MO NUMBERS IN TERMS OF THE ORIGINAL MO (#NB).
C     MAPOLD: ORIGINAL MO NUMBERS IN TERMS OF THE SORTED MO (#NB).
C     IORDER: MO ORDERING VECTOR (#NB, PASSED TO LINK 0402).
C
      COMMON/C401A/A(10,10),B(10,10),IGRP(NB),IDGEN(NB),IAOCC(NB),
     1 IBOCC(NB),IDOCC(NB),NMO(4),NALP(4),NBET(4),
     2 NUMC(9),NUML(9),NUMD(9),NUMA(9),NUMB(9),
     3 I1(45),J1(45),K1(45),L1(45),
     4 ICONF1(NC), ICONF2(NC), MAPNEW(NB), MAPOLD(NB), JFILL, IORDER(NB)
C
C     DATA REQUIRED BY THE RHF SCF PROCEDURE.
C     IRHF: METHOD CODE: 0 FOR PAIR TYPE MC-SCF, 1 FOR INDEPENDENT
C     PAIR MC-SCF, 2 FOR GENERALIZED VALENCE BOND, 3 FOR COMPLETE
C     MC-SCF.
C     NCONF: NUMBER OF PAIR EXCITED CONFIGURATIONS.
C     ICONF: LIST OF NCONF CONFIGURATIONS.
C     NCORE: NUMBER OF DOUBLY OCCUPIED FROZEN CORE ORBITALS.
C     NVAL: NUMBER OF CLOSED SHELL ORBITALS AVAILABLE FOR PAIR
C     SUBSTITUTIONS (GROUPS 'D' AND 'S').
C     NOPEN: NUMBER OF OPEN SHELL MO.
C     NFOCK: NUMBER OF FOCK MATRICES = NVAL + NOPEN + 1.
C     IMO: COUNTERS FOR VARIOUS TYPES OF MO: IMO(1) = NCORE + 1,
C     IMO(2) POINTS TO THE FIRST ORBITAL NOT DOUBLY OCCUPIED (GENERALLY
C     THE FIRST 'S' ORBITAL), IMO(3) POINTS TO THE FIRST OPEN SHELL
C     MO, AND IMO(4) POINTS TO THE FIRST VIRTUAL MO.
C     OC: TOTAL OPEN SHELL MO FRACTIONAL OCCUPANCIES (NOPEN).
C     OCCA, OCCB: ALPHA AND BETA OPEN SHELL MO OCCUPANCIES (NOPEN).
C     AAA, BBB: COULOMB AND EXCHANGE CONSTANTS ((NOPEN+1)*(NOPEN+2)/2).
C     RN: GVB EXPANSION COEFFICIENTS (NFOCK).
C     COEF: MC-SCF EXPANSION COEFFICIENTS (NCONF).
C
      COMMON/C401B/EIG(NE),
     1 RN(NF),OC(9),AAA(55),BBB(55),COEF(NC),OCCA(9),OCCB(9),
     2 ICONF(NC),IRHF,NCONF,NCORE,NVAL,NOPEN,NFOCK,IMO(4)
C
      COMMON/IO/IN,IOUT,IODUM1(3),
     1 IMOINT,IFILE,JFILE,ILABEL,ICOUPL,IFORMT,IODUM2(6),NFILE(100,2)
C
      CHARACTER*1 IDELC,IDELD,LINE,IFILL,ISEP,ZGRP,IGI,IBLANK,ICODE
      CHARACTER MCODE*4,MCSCF*4,IOPEN*4
C
      DIMENSION ZGRP(NB)
      DIMENSION ICODE(5),MCODE(4),IDELC(2),IDELD(2),LINE(72),IFILL(3)
C
      EQUIVALENCE (ORDER,IORDER(1))
C
      DATA PT5/0.5D0/
      DATA ICODE/'F' , 'D' , 'S' , 'A' , 'V'/
      DATA IBLANK/' '/,IOPEN/'OPEN'/,IDELC/',' , ','/
      DATA MCODE/'PAIR','INDP','GVB ','COMP'/,IDELD/'-' , '-'/
C?IBM/GLD/GBR/VAX/UNX
      DATA IINT/1/
C??
C?CDC
C     DATA IINT/2/
C??
 1000 FORMAT(72I1)
 1010 FORMAT(36I2)
 1020 FORMAT(/'0ORBITAL GROUP :   ',4X,A1,4(7X,A1)/'0NUMBER OF MO  :',
     1 5I8)
 1030 FORMAT('0OCCUPANCY ERROR: INCORRECT NUMBER OF ALPHA AND BETA ',
     1 'ELECTRONS OR INCORRECT MULTIPLICITY')
 1040 FORMAT('0ILLEGAL GROUP CODE')
 1050 FORMAT('0GROUP V LEVELS MUST NOT CONTAIN ANY ELECTRONS')
 1060 FORMAT(1X,72A1)
 1070 FORMAT('1RHF OPEN SHELL SPECIFICATION'/'0GROUP     : ',100A1/
     1 (13X,100A1))
 1080 FORMAT(' DEGENERACY: ',100I1/(13X,100I1))
 1090 FORMAT(' ALPHA OCC : ',100I1/(13X,100I1))
 1100 FORMAT('0TOO MANY ELECTRONS FOR SPECIFIED DEGENERACY')
 1110 FORMAT(/'0MC-SCF TYPE: ',A4,5X,'READ',I4,' CONFIGURATIONS'/)
 1120 FORMAT('0ILLEGAL DEGENERACY')
 1130 FORMAT('0ERROR OCCURED IN COLUMN',I3)
 1140 FORMAT(' BETA OCC  : ',100I1/(13X,100I1))
 1150 FORMAT(/'0COULOMB COUPLING COEFFICIENTS   A(I,J)'/'0  MO',10X,
     1 'OCCA',6X,'OCCB',9X,'CLOSED',9(3X,A4,I2))
 1160 FORMAT(72A1)
 1170 FORMAT('0YOU HAVE TRIED TO USE MORE THAN NBASIS MO')
 1180 FORMAT('0ILLEGAL NUMBER OF ELECTRONS IN A LEVEL')
 1190 FORMAT('0TOO MANY OPEN SHELL MO')
 1200 FORMAT('0CLOSED',3X,2F10.4,5X,10F9.4)
 1210 FORMAT('0RHF LIMITS EXCEEDED - PROBLEM TOO LARGE:'/
     1 ' NUMBER OF OCCUPIED MO (=',I4,') EXCEEDS LIMIT (LIMIT =',I4,
     2 '), OR'/' NUMBER OF FOCK MATRICES (=',I4,') EXCEEDS LIMIT ',
     3 '(LIMIT =',I4,'), OR'/' NUMBER OF DENSITY MATRIX ELEMENTS ',
     4 ' (= NFOCK*(NBASIS*(NBASIS+1)/2) =',I6,') EXCEEDS LIMIT ',
     5 '(LIMIT =',I6,')')
 1220 FORMAT(' OPEN',I2,3X,2F10.4,5X,10F9.4)
 1230 FORMAT(/'0EXCHANGE COUPLING COEFFICIENTS   B(I,J)'/'0  MO',10X,
     1 'OCCA',6X,'OCCB',9X,'CLOSED',9(3X,A4,I2))
 1240 FORMAT(A4,I4)
 1250 FORMAT('0ILLEGAL MC-SCF CODE: ',A4,' OR VALUE FOR NCONF:',I4)
 1260 FORMAT('0ILLEGAL CONFIGURATIONS CARD: ',72A1)
 1270 FORMAT('0NUMBER OF GROUP D AND S ORBITALS IS NOT THE SAME FOR ',
     1 A4,' MC-SCF')
 1280 FORMAT('0NO ORBITALS IN EITHER GROUP D OR S FOR MC-SCF')
 1290 FORMAT('0MO',I4,' USED TWICE IN GVB')
 1300 FORMAT('0MO',I4,' NOT USED IN ',A4,' MC-SCF')
 1310 FORMAT('0MO',I4,' DOES NOT BELONG TO GROUP ',A1,' FOR ',A4,
     1 ' MC-SCF')
 1320 FORMAT('0CONFIGURATION',I4,'-',I3,' ALREADY USED')
 1330 FORMAT('0ERROR IN COUPLING COEFFICIENTS, A DENOMINATOR IS ZERO: ',
     1 I2,'/',I2,2X,I2,'/',I2)
 1340 FORMAT ('0COULOMB COUPLING COEFFICIENTS:'/(1X,20(I3,'/',I2)))
 1350 FORMAT ('0EXCHANGE COUPLING COEFFICIENTS:'/(1X,20(I3,'/',I2)))
 1360 FORMAT (/'0NOTE: THE CONFIGURATIONS ARE SPECIFIED IN TERMS OF ',
     1 'THE MO NUMBERS BEFORE THE MO ARE SORTED BY GROUPS.'/
     2 '0MAP BETWEEN INITIAL MO NUMBERS AND RE-ORDERED MO NUMBERS:'/
     3 ' INITIAL MO: ',25I4)
 1370 FORMAT ('0TOO MANY MCSCF/GVB CONFIGURATIONS - LIMIT IS',I4)
 1380 FORMAT (1X,I4,' CONFIGURATIONS WILL BE USED:'/
     1 (1X,10(I3,' -',I3,3X)))
 1390 FORMAT (' DOUBLE OCC: ',100I1/(13X,100I1))
 1400 FORMAT ('0ILLEGAL NUMBER OF DOUBLY OCCUPIED ORBITALS')
 1410 FORMAT ('1RHF OPEN SHELL SPECIFICATION DATA RECOVERED FROM DISK')
 1420 FORMAT (13X,25I4)
 1430 FORMAT (' ORDERED MO: ',25I4)
C
C     INITIALIZATION.
C
      IF (IOP(4).EQ.1 .OR. IOP(4).GE.5) RETURN
      IF (IOP(13) .EQ. 5) GO TO 2000
      MAXOP2 = ((MAXOPN+1)*(MAXOPN+2)) / 2
      DO 1 I=1,MAXOP2
      AAA(I) = ZERO
    1 BBB(I) = ZERO
      K = NB + NB
      DO 5 I=1,K
    5 EIG(I) = ZERO
      COEF(1) = ONE
      DO 6 I=2,NC
    6 COEF(I) = ZERO
      DO 7 I=1,NBASIS
    7 IDOCC(I) = 0
C
      READ (IN,1160) (ZGRP(I),I=1,NBASIS)
      WRITE (IOUT,1070) (ZGRP(I),I=1,NBASIS)
      READ (IN,1000) (IDGEN(I),I=1,NBASIS)
      WRITE (IOUT,1080) (IDGEN(I),I=1,NBASIS)
      READ (IN,1000) (IAOCC(I),I=1,NBASIS)
      WRITE (IOUT,1090) (IAOCC(I),I=1,NBASIS)
      READ (IN,1000) (IBOCC(I),I=1,NBASIS)
      WRITE (IOUT,1140) (IBOCC(I),I=1,NBASIS)
      IF (IOP(14).NE.1 .AND. IOP(14).NE.3) GO TO 9
      READ (IN,1000) (IDOCC(I),I=1,NBASIS)
      WRITE (IOUT,1390) (IDOCC(I),I=1,NBASIS)
C
    9 K = 0
C     COUNT ALPHA AND BETA ELECTRONS.
      DO 10 I=1,4
      NALP(I) = 0
      NBET(I) = 0
   10 NMO(I) = 0
      NOPEN = 0
      NLEVEL = 0
C
C     INTERPRET LEVEL DATA.
C
      DO 110 I=1,NBASIS
      IGI = ZGRP(I)
C     ASSIGN GROUP NUMBERS 1='F', 2='D', 3='S', 4='A', 5='V'.
      IG = 5
      IF (IGI .EQ. IBLANK) GO TO 30
      CALL UPPER (IGI)
      DO 20 IG=1,5
      IF (IGI .EQ. ICODE(IG)) GO TO 30
   20 CONTINUE
      GO TO 900
   30 ID = IDGEN(I)
      IA = IAOCC(I)
      IB = IBOCC(I)
      IDOUB = IDOCC(I)
      IF (IG .EQ. 5) GO TO 50
      IF (ID .LE. 0) GO TO 930
      IF (IA.GT.ID .OR. IB.GT.ID) GO TO 920
      DO 40 J=1,ID
      K = K + 1
      IF (K .GT. NBASIS) GO TO 960
   40 IORDER(K) = IG
      NMO(IG) = NMO(IG) + ID
      IF (IG .EQ. 4) GO TO 70
C
C     GROUP IS 'F', 'D' OR 'S'.
C
      IF (IDOUB .NE. 0) GO TO 975
      IF (IG.EQ.3 .AND. IA.EQ.0 .AND. IB.EQ.0) GO TO 100
      IF (IG .EQ. 3) GO TO 970
      IF (IA.EQ.ID .AND. IB.EQ.ID) GO TO 100
      IF (IA.NE.0 .OR. IB.NE.0) GO TO 970
      IA = ID
      IB = ID
      GO TO 100
C
C     GROUP 'V'.
C
   50 IF (ID .LE. 0) ID = 1
      IDGEN(I) = ID
      IF (IA.GT.0 .OR. IB.GT.0) GO TO 910
      IF (IDOUB .NE. 0) GO TO 975
      DO 60 J=1,ID
      K = K + 1
      IF (K .GT. NBASIS) GO TO 110
   60 IORDER(K) = IG
      GO TO 110
C
C     GROUP 'A'.
C
   70 IF (IA.EQ.ID .AND. IB.EQ.ID) GO TO 970
      NLEVEL = NLEVEL + 1
      IF (NLEVEL .GT. MAXOPN) GO TO 950
      IF (IA.NE.0 .OR. IB.NE.0) GO TO 75
      IA = ID
      IB = 0
      IAOCC(I) = IA
      IBOCC(I) = IB
C     ASSIGN LEVEL OCCUPANCIES.
   75 IF (IDOUB .GT. MIN0(IA,IB)) GO TO 975
C     IF IDOCC(I) WAS 0, CALCULATE THE REQUIRED VALUE.
      IF (IDOUB.EQ.0 .AND. IA+IB.GT.ID) IDOUB = IA + IB - ID
      NUML(NLEVEL) = ID
      NUMD(NLEVEL) = IDOUB
      NUMA(NLEVEL) = IA - IDOUB
      NUMB(NLEVEL) = IB - IDOUB
      NOPEN = NOPEN + ID
      IF (NOPEN .GT. MAXOPN) GO TO 950
C
  100 NALP(IG) = NALP(IG) + IA
      NBET(IG) = NBET(IG) + IB
  110 CONTINUE
C
      I = NBASIS - NMO(1) - NMO(2) - NMO(3) - NMO(4)
      WRITE (IOUT,1020) ICODE,NMO,I
C
C     GET COULOMB AND EXCHANGE COUPLING CONSTANTS.
C
      NNA = 0
      NNB = 0
      IAB = 1
      AAA(1) = TWO
      BBB(1) = ONE
C
      IREAD = 0
      IF (IOP(14).NE.2 .AND. IOP(14).NE.3) GO TO 310
C
C     READ THE INTEGERS TO FORM AAA AND BBB.
C
      NIA = NOPEN * (NOPEN+1) / 2
      READ (IN,1010) (I1(I),J1(I),I=1,NIA)
      WRITE (IOUT,1340) (I1(I),J1(I),I=1,NIA)
      READ (IN,1010) (K1(I),L1(I),I=1,NIA)
      WRITE (IOUT,1350) (K1(I),L1(I),I=1,NIA)
      IREAD = 1
      GO TO 320
C
C     CALCULATE THE COUPLING CONSTANTS.
C
  310 IF (NLEVEL .GT. 0) CALL AKLBKL (NUML, NUMD, NUMA, NUMB, NUMC,
     1 NLEVEL, AAA, BBB, MAXOP2, IOP(1))
      IF (IOP(1) .NE. 0) RETURN
C
  320 NOPEN = 0
      NIA = 0
      INEW = 0
C
C     LOOP OVER GROUPS.
C
      DO 390 I=1,5
C
C     SET MAP VECTORS TO CONVERT BETWEEN OLD AND NEW NUMBERING SCHEMES.
C
      DO 340 J=1,NBASIS
      IF (IORDER(J) .NE. I) GO TO 340
      INEW = INEW + 1
      MAPNEW(J) = INEW
      MAPOLD(INEW) = J
  340 CONTINUE
C
      IF (I .EQ. 5) GO TO 390
      NNA = NNA + NALP(I)
      NNB = NNB + NBET(I)
      IF (I .NE. 4) GO TO 390
C
C     OPEN SHELL MO.
C
      IF (NLEVEL .EQ. 0) GO TO 390
      DO 380 J=1,NLEVEL
      ID = NUML(J)
      IA = NUMA(J) + NUMD(J)
      IB = NUMB(J) + NUMD(J)
      T = DFLOAT(ID)
      DO 370 K=1,ID
      NOPEN = NOPEN + 1
      OCCA(NOPEN) = DFLOAT(IA) / T
      OCCB(NOPEN) = DFLOAT(IB) / T
      OC(NOPEN) = PT5 * DFLOAT(IA+IB) / T
C     GET COUPLING COEFFICIENTS INTO AAA AND BBB - FIRST CLOSED-OPEN.
      IAB = IAB + 1
      AAA(IAB) = OC(NOPEN) + OC(NOPEN)
      BBB(IAB) = OC(NOPEN)
      DO 360 L=1,NOPEN
      IAB = IAB + 1
      IF (IREAD .EQ. 0) GO TO 360
      NIA = NIA + 1
      IF (J1(NIA).EQ.0 .OR. L1(NIA).EQ.0) GO TO 990
      AAA(IAB) = DFLOAT(I1(NIA)) / DFLOAT(J1(NIA))
      BBB(IAB) = DFLOAT(K1(NIA)) / DFLOAT(L1(NIA))
  360 CONTINUE
  370 CONTINUE
  380 CONTINUE
  390 CONTINUE
C
      NCORE = NMO(1)
      NVAL = NMO(2) + NMO(3)
      NFOCK = NVAL + NOPEN + 1
      IMO(1) = NCORE + 1
      IMO(2) = NCORE + NMO(2) + 1
      IMO(3) = NCORE + NVAL + 1
      IMO(4) = IMO(3) + NOPEN
      IRHF = 0
      NCONF = 0
      ICONF(1) = 0
      IF (IMO(4)-1 .GT. NR) GO TO 980
      IF (NFOCK .GT. NF) GO TO 980
      IF (NFOCK*(NBASIS*(NBASIS+1)/2) .GT. NB1) GO TO 980
      IF (NNA.NE.NAE .OR. NNB.NE.NBE) GO TO 890
      IF (NVAL .EQ. 0) GO TO 800
      IF (NMO(2).EQ.0 .OR. NMO(3).EQ.0) GO TO 870
C
C     PAIR-WISE EXCITATIONS MC-SCF.
C
      READ (IN,1240) MCSCF,MCONF
      WRITE (IOUT,1110) MCSCF,MCONF
C     GET CODE NUMBER.
      CALL UPPER (MCSCF)
      DO 400 I=1,4
      IF (MCSCF .EQ. MCODE(I)) GO TO 420
  400 CONTINUE
  410 WRITE (IOUT,1250) MCSCF,MCONF
      IOP(1) = -2
      RETURN
C
  420 IRHF = I - 1
      GO TO (450,430,460,510),I
C
C     INDP - GENERATE THE CONFIGURATIONS.
C
  430 IF (MCONF .NE. 0) GO TO 410
      IF (NMO(2) .NE. NMO(3)) GO TO 880
      NCONF = 1
      L = NMO(2)
      K = NCORE + L
      DO 440 I=1,L
      NCONF = NCONF + 1
      IF (NCONF .GT. NC) GO TO 985
  440 ICONF(NCONF) = 1000*(K+I) + NCORE + I
      GO TO 530
C
C     PAIR.
C
  450 IF (MCONF .LE. 0) GO TO 410
      NCONF = 1
      GO TO 600
C
C     GVB - GENERATE OR READ THE GVB PAIRS.
C
C     INITIALIZE THE GVB COEFFICIENTS.
  460 NCONF = 0
      T = DSQRT(PT5)
      DO 470 I=1,NC
  470 COEF(I) = T
      IF (MCONF) 410,490,600
C     GENERATE THE CONFIGURATIONS.
  490 IF (NMO(2) .NE. NMO(3)) GO TO 880
      L = NMO(2)
      K = NCORE + L
      DO 500 I=1,L
      NCONF = NCONF + 1
      IF (NCONF .GT. NC) GO TO 985
  500 ICONF(NCONF) = 1000*(K+I) + NCORE + I
      GO TO 530
C
C     COMP - GENERATE ALL POSSIBLE CONFIGURATIONS.
C
  510 IF (MCONF .NE. 0) GO TO 410
      NCONF = 1
      K = NMO(2)
      ID = NCORE + K
      L = NMO(3)
      DO 520 J=1,L
      DO 520 I=1,K
      NCONF = NCONF + 1
      IF (NCONF .GT. NC) GO TO 985
  520 ICONF(NCONF) = 1000*(ID+J) + NCORE + I
C
C     PRINT THE LIST OF CONFIGURATIONS (IF GENERATED INTERNALLY).
C
  530 DO 540 I=1,NCONF
      ICONF1(I) = 0
      ICONF2(I) = 0
      J = ICONF(I) / 1000
      IF (J .NE. 0) ICONF2(I) = MAPOLD(J)
      K = ICONF(I) - 1000*J
  540 IF (K .NE. 0) ICONF1(I) = MAPOLD(K)
C
      WRITE (IOUT,1380) NCONF, (ICONF1(I),ICONF2(I),I=1,NCONF)
      GO TO 790
C
C     READ CONFIGURATIONS / GVB PAIRS FROM CARDS (FREE FORMAT).
C
C     KEEP TRACK OF MO USED BY ARRAY IGRP.
  600 DO 610 I=1,NBASIS
  610 IGRP(I) = 0
C
  620 READ (IN,1160) LINE
      WRITE (IOUT,1060) LINE
      ICOL = 1
  630 IERR = 0
C     GET THE FIRST INTEGER IN L, DELIMITED BY A DASH.
      CALL FREEFM (LINE,ICOL,72,3,IDELD,1,IFILL,1,I,L,T,LAST,ISEP,IERR)
      IF (IERR .EQ. -2) RETURN
      IF (IERR .EQ. 2) GO TO 620
      IF (IERR .NE. 0) GO TO 860
      ICOL = LAST + 1
      IF (ICOL .GT. 72) GO TO 860
C     GET THE SECOND INTEGER IN K, DELIMITED BY A COMMA.
      CALL FREEFM (LINE,ICOL,72,3,IDELC,1,IFILL,1,I,K,T,LAST,ISEP,IERR)
      IF (IERR .EQ. -2) RETURN
      IF (IERR.EQ.1 .OR. IERR.EQ.2) GO TO 860
C     PACK THIS CONFIGURATION AWAY IF IT IS LEGAL.
      NCONF = NCONF + 1
      IF (NCONF .GT. NC) GO TO 985
C
C     ENSURE L AND K BELONG TO GROUPS D AND S RESPECTIVELY.
C
      KMAP = 0
      IF (K.GT.0 .AND. K.LE.NBASIS) KMAP = MAPNEW(K)
      LMAP = 0
      IF (L.GT.0 .AND. L.LE.NBASIS) LMAP = MAPNEW(L)
C
      IF (LMAP.GE.IMO(1) .AND. LMAP.LT.IMO(2)) GO TO 640
      WRITE (IOUT,1310) L,ICODE(2),MCSCF
      IOP(1) = -2
C
  640 IF (KMAP.GE.IMO(2) .AND. KMAP.LT.IMO(3)) GO TO 650
      WRITE (IOUT,1310) K,ICODE(3),MCSCF
      IOP(1) = -2
C
C     OMIT THE REST OF THE CHECKING IF K OR L WAS INVALID.
C
  650 IF (KMAP.EQ.0 .OR. LMAP.EQ.0) GO TO 680
      ICONF(NCONF) = 1000*KMAP + LMAP
      IGRP(KMAP) = IGRP(KMAP) + 1
      IGRP(LMAP) = IGRP(LMAP) + 1
      IF (IRHF .NE. 2) GO TO 670
      IF (IGRP(KMAP) .EQ. 1) GO TO 660
      WRITE (IOUT,1290) K
      IOP(1) = -2
  660 IF (IGRP(LMAP) .EQ. 1) GO TO 680
      WRITE (IOUT,1290) L
      IOP(1) = -2
C
C     ENSURE THIS CONFIGURATION NOT ALREADY PRESENT.
C
  670 IF (NCONF .EQ. 1) GO TO 680
      J = NCONF - 1
      DO 675 I=1,J
      IF (ICONF(I) .EQ. ICONF(NCONF)) GO TO 850
  675 CONTINUE
C
  680 MCONF = MCONF - 1
C
C     ENSURE A COMMA WAS FOUND IF NOT ALL CONFIGURATIONS READ.
C
      IF (MCONF .EQ. 0) GO TO 690
      IF (IERR .NE. 0) GO TO 860
      ICOL = LAST + 1
      IF (ICOL .GT. 72) GO TO 620
      GO TO 630
C     END OF CONFIGURATIONS - ENSURE NO COMMA WAS FOUND.
  690 IF (IERR .EQ. 0) GO TO 860
C     ENSURE NO MO OMITTED.
      DO 700 I=1,NVAL
      K = NCORE + I
      IF (IGRP(K) .NE. 0) GO TO 700
      WRITE (IOUT,1300) MAPOLD(K),MCSCF
      IOP(1) = -2
  700 CONTINUE
C
  790 K = MIN0(NBASIS,25)
      L = K + 1
      WRITE (IOUT,1360) (I,I=1,K)
      IF (NBASIS .GT. K) WRITE (IOUT,1420) (I,I=L,NBASIS)
      WRITE (IOUT,1430) (MAPNEW(I),I=1,K)
      IF (NBASIS .GT. K) WRITE (IOUT,1420) (MAPNEW(I),I=L,NBASIS)
C
C     TEST I/O UNITS BY REWINDING THEM.
C
  800 REWIND IFILE
      REWIND JFILE
      CALL TWRITE (5,EIG,NFILE(5,1),1,NFILE(5,1),1,0)
C
C     SAVE MO ORDERING INFORMATION IN FILE 32 (PASSED TO LINK 0402).
C
      I = (NBASIS*IINT+2-IINT) / 2
      CALL TWRITE (32, ORDER, I, 1, I, 1, 0)
C
C     CHECK FOR AN OPEN SHELL SINGLET.
C
      IF (MULTIP.EQ.1 .AND. NOPEN.GT.0) IOP(11) = 1
C
C     PRINT COUPLING COEFFICIENTS.
C
      IAB = 0
      K = NOPEN + 1
      DO 810 J=1,K
      DO 810 I=1,J
      IAB = IAB + 1
      A(I,J) = AAA(IAB)
      A(J,I) = AAA(IAB)
      B(I,J) = BBB(IAB)
  810 B(J,I) = BBB(IAB)
      T = DFLOAT(NMO(1)+NMO(2))
      IF (NOPEN .EQ. 0) WRITE (IOUT,1150)
      IF (NOPEN .GT. 0) WRITE (IOUT,1150) (IOPEN,I,I=1,NOPEN)
      WRITE (IOUT,1200) T,T,(A(J,1),J=1,K)
      IF (NOPEN .EQ. 0) GO TO 830
      DO 820 I=1,NOPEN
  820 WRITE (IOUT,1220) I,OCCA(I),OCCB(I),(A(J,I+1),J=1,K)
  830 IF (NOPEN .EQ. 0) WRITE (IOUT,1230)
      IF (NOPEN .GT. 0) WRITE (IOUT,1230) (IOPEN,I,I=1,NOPEN)
      WRITE (IOUT,1200) T,T,(B(J,1),J=1,K)
      IF (NOPEN .EQ. 0) RETURN
      DO 840 I=1,NOPEN
  840 WRITE (IOUT,1220) I,OCCA(I),OCCB(I),(B(J,I+1),J=1,K)
      RETURN
C
C     GUESS=NONE SECTION.
C
 2000 WRITE (IOUT,1410)
      CALL TREAD (5,EIG,NFILE(5,1),1,NFILE(5,1),1,0)
C
C     SET IORDER VECTOR FOR LINK 0402.
C
      DO 2010 I=1,NBASIS
 2010 IORDER(I) = 1
C
      IF (NFOCK*(NBASIS*(NBASIS+1)/2) .GT. NB1) GO TO 980
C
C     SET NMO (FOR PRINTING COUPLING COEFFICIENTS).
C
      NMO(1) = NCORE
      NMO(2) = IMO(2) - IMO(1)
      NMO(3) = IMO(3) - IMO(2)
      NMO(4) = NOPEN
      GO TO 800
C*
C     ERROR EXITS.
C*
C     CONFIGURATION REPEATED.
  850 WRITE (IOUT,1320) L,K
      IOP(1) = -2
      RETURN
C     ILLEGAL CONFIGURATIONS CARD.
  860 WRITE (IOUT,1260) LINE
      IOP(1) = -2
      RETURN
C     NO D OR S MO FOR MC-SCF.
  870 WRITE (IOUT,1280)
      IOP(1) = -2
      RETURN
C     NUMBER OF D AND S MO NOT THE SAME FOR MC-SCF.
  880 WRITE (IOUT,1270) MCSCF
      IOP(1) = -2
      RETURN
C     OCCUPANCY ERROR.
  890 WRITE (IOUT,1030)
      IOP(1) = -2
      RETURN
C     ILLEGAL GROUP CODE.
  900 WRITE (IOUT,1040)
      GO TO 940
C     LEVEL V CONTAINS SOME ELECTRONS.
  910 WRITE (IOUT,1050)
      GO TO 940
C     TOO MANY ELECTRONS FOR THE DEGENERACY.
  920 WRITE (IOUT,1100)
      GO TO 940
C     ILLEGAL DEGENERACY.
  930 WRITE (IOUT,1120)
C
  940 WRITE (IOUT,1130) I
      IOP(1) = -2
      RETURN
C     TOO MANY OPEN SHELLS.
  950 WRITE (IOUT,1190)
      GO TO 940
C     TOO MANY MO.
  960 WRITE (IOUT,1170)
      GO TO 940
C     ILLEGAL NUMBER OF ELECTRONS IN A LEVEL.
  970 WRITE (IOUT,1180)
      GO TO 940
C     ILLEGAL VALUE FOR IDOCC.
  975 WRITE (IOUT,1400)
      GO TO 940
C     PROBLEM TOO LARGE - PRINT LIMITS.
  980 I = IMO(4) - 1
      J = NFOCK * (NBASIS*(NBASIS+1)/2)
      WRITE (IOUT,1210) I, NR, NFOCK, NF, J, NB1
      IOP(1) = -2
      RETURN
C     TOO MANY CONFIGURATIONS.
  985 WRITE (IOUT,1370) NC
      IOP(1) = -2
      RETURN
C     COUPLING COEFFICIENT ERROR.
  990 WRITE (IOUT,1330) I1(NIA),J1(NIA),K1(NIA),L1(NIA)
      IOP(1) = -2
      RETURN
      END
      SUBROUTINE AKLBKL (NUML, NUMD, NUMA, NUMB, NUMC, NLEVEL,
     1 AAA, BBB, MAXOP2, IOP1)
C
C     THIS ROUTINE CALCULATES THE COULOMB AND EXCHANGE COUPLING
C     CONSTANTS FOR THE OPEN SHELL LEVELS SPECIFIED.
C
C     SUBROUTINE ARGUMENTS:
C     NUML   - LEVEL DEGENERACIES.
C     NUMD   - NUMBER OF DOUBLY OCCUPIED MO IN EACH LEVEL.
C     NUMA   - NUMBER OF ALPHA SPIN SINGLY OCCUPIED MO IN EACH LEVEL.
C     NUMB   - NUMBER OF BETA SPIN SINGLY OCCUPIED MO IN EACH LEVEL.
C     NUMC   - NUMBER OF CONFIGURATIONS FOR EACH LEVEL.
C     NLEVEL - NUMBER OF LEVELS.
C     AAA    - COULOMB COUPLING CONSTANTS.
C     BBB    - EXCHANGE COUPLING CONSTANTS.
C     MAXOP2 - DIMENSION OF AAA AND BBB.
C     IOP1   - ERROR FLAG, SET TO -2 IF AN ERROR IS FOUND.
C
C     NUMC, AAA AND BBB ARE CALCULATED BY THIS ROUTINE.
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      CHARACTER*1 LCONF,LALPHA,LBETA,LUNDER,LBLANK
C
      DIMENSION NUMC(NLEVEL), NUML(NLEVEL), NUMD(NLEVEL), NUMA(NLEVEL),
     1 NUMB(NLEVEL), AAA(MAXOP2), BBB(MAXOP2), LCONF(2,9)
C
      COMMON /IO/ IN, IOUT, IODUM(215)
C
      DATA LALPHA/'A'/, LBETA/'B'/, LBLANK/' '/, LUNDER/'_'/
      DATA PT5/0.5D0/
C
 1000 FORMAT (/'0LEVEL    DEGENERACY    DOUBLE OCC    SINGLE ALPHA',
     1 '    SINGLE BETA    CONFIGURATIONS    SAMPLE CONFIGURATION')
 1010 FORMAT ('0',I3,I12,I14,I15,I16,I16,8X,9(2X,2A1))
 1020 FORMAT ('+',84X,9(2X,2A1))
 1030 FORMAT (/'0*** WARNING: INTERACTION TERMS INVOLVING DEGENERATE',
     1 ' LEVELS MAY HAVE BEEN OMITTED'/' IN THE CALCULATION OF THE',
     2 ' COUPLING COEFFICIENTS FOR THIS STATE. ***')
C
C     CHECK THE PARAMETERS FOR EACH LEVEL, AND
C     GET THE NUMBER OF CONFIGURATIONS FOR EACH LEVEL.
C
      WRITE (IOUT,1000)
C     NDGEN COUNTS THE NUMBER OF DEGENERATE LEVELS.
      NDGEN = 0
C
C     PRINT LEVEL DATA.
C
      DO 170 II=1,NLEVEL
      I = NLEVEL + 1 - II
      NLI = NUML(I)
      NDI = NUMD(I)
      NAI = NUMA(I)
      NBI = NUMB(I)
      NI = ICOMB (NLI, NDI, NAI, NBI)
      NUMC(I) = NI
C
      DO 100 J=1,NLI
      LCONF(1,J) = LBLANK
  100 LCONF(2,J) = LBLANK
C
      K = 0
      IF (NDI .EQ. 0) GO TO 120
      DO 110 J=1,NDI
      K = K + 1
      LCONF(1,K) = LALPHA
  110 LCONF(2,K) = LBETA
C
  120 IF (NAI .EQ. 0) GO TO 140
      DO 130 J=1,NAI
      K = K + 1
  130 LCONF(1,K) = LALPHA
C
  140 IF (NBI .EQ. 0) GO TO 160
      DO 150 J=1,NBI
      K = K + 1
  150 LCONF(2,K) = LBETA
C
  160 WRITE (IOUT,1010) I, NLI, NDI, NAI, NBI, NI, (LCONF(1,J),
     1 LCONF(2,J),J=1,NLI)
      WRITE (IOUT,1020) (LUNDER, LUNDER, J=1,NLI)
  170 IF (NLI .GT. 1) NDGEN = NDGEN + 1
C
      IF (NDGEN .GT. 1) WRITE (IOUT,1030)
C
C     LOOP OVER OPEN SHELL LEVELS - LEVEL I.
C
      IOFF = 1
C
      DO 350 I=1,NLEVEL
      NLI = NUML(I)
      NDI = NUMD(I)
      NAI = NUMA(I)
      NBI = NUMB(I)
      NI = NUMC(I)
C
C     COMPUTE AKK AND BKK:
C
C     MDI = ICOMB (L-1, D-1, A, B)
C     MAI = ICOMB (L-1, D, A-1, B)
C     MBI = ICOMB (L-1, D, A, B-1)
C     AKK = (2*MDI+MAI+MBI) / NI
C     BKK = (MDI+MAI+MBI) / NI
C     THEN AKK AND BKK ARE ADJUSTED SUCH THAT:
C     AKKNEW = 2 * BKKNEW
C     BKKNEW = AKK - BKK
C     WHERE ICOMB(L,I,J,K) = L! / (I! J! K! (L-I-J-K)!).
C
      MDI = 0
      IF (NDI .GT. 0) MDI = ICOMB (NLI-1, NDI-1, NAI, NBI)
      MAI = 0
      IF (NAI .GT. 0) MAI = ICOMB (NLI-1, NDI, NAI-1, NBI)
      MBI = 0
      IF (NBI .GT. 0) MBI = ICOMB (NLI-1, NDI, NAI, NBI-1)
      IAKK = 2*MDI + MAI + MBI
      IBKK = MDI + MAI + MBI
      IBKK = IAKK - IBKK
      BKK = DFLOAT(IBKK) / DFLOAT(NI)
      AKK = BKK + BKK
C
C     COMPUTE INTERACTION TERMS AKL AND BKL:
C
C     AKL = (4*MDD+2*MDA+2*MDB+MAA+MAB+MBB) * MIJ / (2*N)
C     BKL = (2*MDD+MDA+MDB+MAA-MAB+MBB) * MIJ / (2*N)
C     N = PRODUCT OF ALL NI
C
      IF (I .EQ. 1) GO TO 300
C
C     LOOP OVER DIFFERENT OPEN SHELL LEVELS J.
C
C     FORMULAE:
C
C     MDD =
C      ICOMB (NLI-1, NDI-1, NAI, NBI) * ICOMB (NLJ-1, NDJ-1, NAJ, NBJ)
C     MDA =
C      ICOMB (NLI-1, NDI-1, NAI, NBI) * ICOMB (NLJ-1, NDJ, NAJ-1, NBJ) +
C      ICOMB (NLI-1, NDI, NAI-1, NBI) * ICOMB (NLJ-1, NDJ-1, NAJ, NBJ)
C     MDB =
C      ICOMB (NLI-1, NDI-1, NAI, NBI) * ICOMB (NLJ-1, NDJ, NAJ, NBJ-1) +
C      ICOMB (NLI-1, NDI, NAI, NBI-1) * ICOMB (NLJ-1, NDJ-1, NAJ, NBJ)
C     MAA =
C      ICOMB (NLI-1, NDI, NAI-1, NBI) * ICOMB (NLJ-1, NDJ, NAJ-1, NBJ)
C     MAB =
C      ICOMB (NLI-1, NDI, NAI-1, NBI) * ICOMB (NLJ-1, NDJ, NAJ, NBJ-1) +
C      ICOMB (NLI-1, NDI, NAI, NBI-1) * ICOMB (NLJ-1, NDJ, NAJ-1, NBJ)
C     MBB =
C      ICOMB (NLI-1, NDI, NAI, NBI-1) * ICOMB (NLJ-1, NDJ, NAJ, NBJ-1)
C     MIJ = N / (NI*NJ)
C
      I1 = I - 1
      DO 240 J=1,I1
      NLJ = NUML(J)
      NDJ = NUMD(J)
      NAJ = NUMA(J)
      NBJ = NUMB(J)
      NJ = NUMC(J)
      MDD = 0
      IF (NDI.GT.0 .AND. NDJ.GT.0) MDD =
     1 ICOMB (NLI-1, NDI-1, NAI, NBI) * ICOMB (NLJ-1, NDJ-1, NAJ, NBJ)
      MDA = 0
      IF (NDI.GT.0 .AND. NAJ.GT.0) MDA =
     1 ICOMB (NLI-1, NDI-1, NAI, NBI) * ICOMB (NLJ-1, NDJ, NAJ-1, NBJ)
      IF (NAI.GT.0 .AND. NDJ.GT.0) MDA = MDA +
     1 ICOMB (NLI-1, NDI, NAI-1, NBI) * ICOMB (NLJ-1, NDJ-1, NAJ, NBJ)
      MDB = 0
      IF (NDI.GT.0 .AND. NBJ.GT.0) MDB =
     1 ICOMB (NLI-1, NDI-1, NAI, NBI) * ICOMB (NLJ-1, NDJ, NAJ, NBJ-1)
      IF (NBI.GT.0 .AND. NDJ.GT.0) MDB = MDB +
     1 ICOMB (NLI-1, NDI, NAI, NBI-1) * ICOMB (NLJ-1, NDJ-1, NAJ, NBJ)
      MAA = 0
      IF (NAI.GT.0 .AND. NAJ.GT.0) MAA =
     1 ICOMB (NLI-1, NDI, NAI-1, NBI) * ICOMB (NLJ-1, NDJ, NAJ-1, NBJ)
      MAB = 0
      IF (NAI.GT.0 .AND. NBJ.GT.0) MAB =
     1 ICOMB (NLI-1, NDI, NAI-1, NBI) * ICOMB (NLJ-1, NDJ, NAJ, NBJ-1)
      IF (NBI.GT.0 .AND. NAJ.GT.0) MAB = MAB +
     1 ICOMB (NLI-1, NDI, NAI, NBI-1) * ICOMB (NLJ-1, NDJ, NAJ-1, NBJ)
      MBB = 0
      IF (NBI.GT.0 .AND. NBJ.GT.0) MBB =
     1 ICOMB (NLI-1, NDI, NAI, NBI-1) * ICOMB (NLJ-1, NDJ, NAJ, NBJ-1)
      ZMIJN = PT5 / DFLOAT(NI*NJ)
C
      AKL = DFLOAT(4*MDD+2*MDA+2*MDB+MAA+MAB+MBB) * ZMIJN
      BKL = DFLOAT(2*MDD+MDA+MDB+MAA-MAB+MBB) * ZMIJN
C
C     INSERT COUPLING CONSTANTS INTO AAA AND BBB.
C     NOTE THAT THE FIRST ROW AND COLUMN OF AAA AND BBB ARE RESERVED
C     FOR THE CLOSED-OPEN COUPLING COEFFICIENTS (NOT CALCULATED HERE),
C     AND THAT AAA AND BBB ARE UPPER TRIANGULAR MATRICES.
C
      DO 230 K=1,NLI
      IAB = IOFF + K
      IAB = (IAB*(IAB-1))/2 + 1
C
      IF (J .EQ. 1) GO TO 220
      J1 = J - 1
      DO 210 L=1,J1
  210 IAB = IAB + NUML(L)
C
  220 DO 230 L=1,NLJ
      IAB = IAB + 1
      IF (IAB .GT. MAXOP2) GO TO 900
      AAA(IAB) = AKL
  230 BBB(IAB) = BKL
  240 CONTINUE
C
C     LEVEL I WITH ITSELF.
C
C     FORMULAE:
C
C     MDD = ICOMB (NLI-2, NDI-2, NAI, NBI)
C     MDA = 2 * ICOMB (NLI-2, NDI-1, NAI-1, NBI)
C     MDB = 2 * ICOMB (NLI-2, NDI-1, NAI, NBI-1)
C     MAA = ICOMB (NLI-2, NDI, NAI-2, NBI)
C     MAB = 2 * ICOMB (NLI-2, NDI, NAI-1, NBI-1)
C     MBB = ICOMB (NLI-2, NDI, NAI, NBI-2)
C     MIJ = N / NI
C
  300 MDD = 0
      IF (NDI .GT. 1) MDD = ICOMB (NLI-2, NDI-2, NAI, NBI)
      MDA = 0
      IF (NDI.GT.0 .AND. NAI.GT.0)
     1 MDA = 2 * ICOMB (NLI-2, NDI-1, NAI-1, NBI)
      MDB = 0
      IF (NDI.GT.0 .AND. NBI.GT.0)
     1 MDB = 2 * ICOMB (NLI-2, NDI-1, NAI, NBI-1)
      MAA = 0
      IF (NAI .GT. 1) MAA = ICOMB (NLI-2, NDI, NAI-2, NBI)
      MAB = 0
      IF (NAI.GT.0 .AND. NBI.GT.0)
     1 MAB = 2 * ICOMB (NLI-2, NDI, NAI-1, NBI-1)
      MBB = 0
      IF (NBI .GT. 1) MBB = ICOMB (NLI-2, NDI, NAI, NBI-2)
      ZMIJN = PT5 / DFLOAT(NI)
C
      AKL = DFLOAT(4*MDD+2*MDA+2*MDB+MAA+MAB+MBB) * ZMIJN
      BKL = DFLOAT(2*MDD+MDA+MDB+MAA-MAB+MBB) * ZMIJN
      J = I
C
C     INSERT COUPLING CONSTANTS INTO AAA AND BBB.
C     NOTE THAT THE FIRST ROW AND COLUMN OF AAA AND BBB ARE RESERVED
C     FOR THE CLOSED-OPEN COUPLING COEFFICIENTS (NOT CALCULATED HERE),
C     AND THAT AAA AND BBB ARE UPPER TRIANGULAR MATRICES.
C
      DO 330 K=1,NLI
      IAB = IOFF + K
      IAB = (IAB*(IAB+1))/2 - K
C
      DO 320 L=1,K
      IAB = IAB + 1
      IF (IAB .GT. MAXOP2) GO TO 900
      IF (K .EQ. L) GO TO 310
      AAA(IAB) = AKL
      BBB(IAB) = BKL
      GO TO 320
C
  310 AAA(IAB) = AKK
      BBB(IAB) = BKK
  320 CONTINUE
C
  330 CONTINUE
C
  350 IOFF = IOFF + NLI
      RETURN
C
C     ERROR EXIT.
C
  900 WRITE (IOUT,901) I, J, K, L, IAB, MAXOP2
  901 FORMAT ('0INDEXING ERROR IN ARRAYS AAA/BBB IN ROUTINE AKLBKL -',
     1 ' SEND OUTPUT TO MONSTERGAUSS AUTHORS'/
     2 ' LEVELS (I,J):',2I3,',  MO (K,L):',2I3,',  IAB =',I5,
     3 ',  MAXOP2 =',I5)
      IOP1 = -2
      RETURN
      END
      INTEGER FUNCTION ICOMB (L, I, J, K)
C
C     THIS FUNCTION RETURNS THE NUMBER OF COMBINATIONS OF L OBJECTS,
C     TAKEN IN SUBGROUPS OF SIZE I, J AND K:
C        ICOMB (L, I, J, K) = L! / (I! J! K! (L-I-J-K)!)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA)
C##
      PARAMETER (NA= 36)
C###
      COMMON /A/ IOP(99)
      COMMON /A/ ICDUM1(7),IAN(NA),C(NA,3),CDUM1(4),ICDUM2(401)
C
      COMMON /IO/ IN, IOUT, IODUM(215)
C
      IF (I.LT.0 .OR. I.GT.L) GO TO 900
      IF (J.LT.0 .OR. J.GT.L) GO TO 900
      IF (K.LT.0 .OR. K.GT.L) GO TO 900
      IF (I+J+K .GT. L) GO TO 900
C
      ICOMB = IFACT(L) / (IFACT(I)*IFACT(J)*IFACT(K)*IFACT(L-I-J-K))
      RETURN
C
C     ERROR EXIT.
C
  900 WRITE (IOUT,910) L, I, J, K
  910 FORMAT ('0INVALID VALUE(S) FOR L =',I4,', I =',I4,', J =',I4,
     1 ' OR K =',I4,' IN ICOMB.')
      IOP(1) = -2
      RETURN
      END
      INTEGER FUNCTION IFACT (I)
C
C     THIS FUNCTION RETURN I! (I FACTORIAL) WHERE I IS A POSITIVE
C     INTEGER. NOTE THAT FOR I LESS THAN OR EQUAL TO ZERO, IFACT
C     IS RETURNED AS 1.
C
      IFACT = 1
      IF (I .LE. 1) RETURN
C
      DO 10 J=2,I
   10 IFACT = IFACT * J
      RETURN
      END
