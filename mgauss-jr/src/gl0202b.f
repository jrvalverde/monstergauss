C/    GL0202B      14 JUL 88                                         MRP
      SUBROUTINE FREEZ
C*
C     FREE FORMAT Z MATRIX INPUT ROUTINE.
C
C     AUTHOR: MIKE PETERSON, U OF T CHEMISTRY DEPARTMENT, TORONTO.
C     VERSION: JULY 1988.
C
C     THE LABELS, IELEM AND NAMES ARRAYS IN COMMON /ZMAT/ ARE USED
C     AS FOLLOWS:
C     LABELS(I,J): I REFERS TO AN ATOM, J TO THE PARAMETER TYPE (1=BL,
C     2=ALPHA AND 3=BETA). THE VALUE OF LABELS(I,J) IS 100*K+L+M, WHERE
C     K IS THE VARIABLE NUMBER TO BE SUBSTITUTED IN THIS Z MATRIX
C     POSITION (0 IF NO VARIABLE WAS USED), L IS A FLAG THAT IS 0
C     IF THE VARIABLE IS TO OPTIMIZED AND 2 IF THE VARIABLE IS TO
C     BE HELD CONSTANT (BUT L IS 0 IF K IS 0),  AND M IS A FLAG FOR THE
C     TYPE OF VALUE USED FOR THE ATOM NUMBER PRECEEDING THE VALUE
C     (0 MEANS A STRING WAS USED, 1 MEANS THE ACTUAL ATOM NUMBER WAS
C     GIVEN IN THE N1/N2/N3 FIELD FOR J=1/2/3 RESPECTIVELY). IF THE
C     NEGATIVE OF PARAMETER K IS TO BE SUBSTITUTED, THE SUM 100*K+L+M
C     IS NEGATED.
C
C     AND ARRAYS IN COMMON /ZMATC/:
C     TITLE: A CHARACTER VARIABLE CONTAINING THE TITLE OF THIS RUN.
C     IELEM(I) CONTAINS THE ATOMIC SYMBOL STRING FOR ATOM I, OR
C     BLANKS IF AN INTEGER VALUE WAS USED.
C     NAMES(I) CONTAINS THE VARIABLE NAMES REFERRED TO BY THE LABELS
C     ARRAY.
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA)
C##
      PARAMETER (NA= 36)
C###
      PARAMETER (NA3=3*NA, NZ=NA3-6)
      PARAMETER (ZERO=0.0D0, TWO=2.0D0)
C
      COMMON /A/ IOP(99),NATOMS,ICHARG,MULTIP,IAN(NA),IC1(4),CD1(NA,3),
     1 CD2(4),IC2(401)
      COMMON/ZMAT/IZ(NA,4),ZPARAM(NA,3),IPAR(15,3),NIPAR(3),NPAR,
     1 NSTEP,DX(3),NUM,NUMB,LABELS(NA,3),IZMASS(NA),ZMASS(NA)
      COMMON/ZMATC/TITLE,IELEM(NA),NAMES(NZ)
      COMMON/IO/IN,IOUT,IODUM(215)
C
C     USE OF LOCAL VARIABLES :
C     LINE: INPUT LINE (DIMENSION 72).
C     ICH: ARRAY TO GET ONE VARIABLE NAME (72).
C     IFOUND: COUNTER FOR VARIABLES DEFINED (NZ).
C
      CHARACTER*1 LINE(72), ICH(72), IAZ(27), IDEL(2), IDELEQ(2),
     1 ITETRA(5), ISEP, IBL, IPLUS, MINUS
      CHARACTER TITLE*72, IELEM*4, NAMES*8, IERRS(8)*20
C
      DIMENSION ICODE(56), IFOUND(NZ)
C
      DATA IAZ/'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',
     1  'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q',
     2  'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '*'/
C
C     ICODE CONTAINS THE CHEMICAL SYMBOLS, CODED AS 100*I1+I2 WHERE
C     I1 AND I2 REPRESENT THE LETTERS OF THE SYMBOL (1 IS A, 2 IS B,
C     ETC). I2 IS 0 FOR ONE LETTER SYMBOLS, AND A * IS LETTER 27.
C
      DATA ICODE/800,805,1209,205,200,300,1400,1500,600,1405,1401,1307,
     1 112,1909,1600,1900,312,118,1100,301,1903,2009,2200,318,1314,605,
     2 315,1409,321,2614,701,705,119,1905,218,1118,1802,1918,2500,2618,
     3 1402,1315,2003,1821,1808,1604,107,304,914,1914,1902,2005,900,
     4 2405,2400,217/
C
      DATA IERRS/'ATOM LABEL          ',
     1           'ATTACHMENT ATOM     ',
     2           'BOND LENGTH         ',
     3           'BOND ANGLE ATOM     ',
     4           'BOND ANGLE          ',
     5           'DIHEDRAL ANGLE      ',
     6           'DIHEDRAL ANGLE ATOM ',
     7           'ANGLE CODE          '/
      DATA IBL/' '/, IPLUS/'+'/, MINUS/'-'/
      DATA IDEL/' ', ','/,IDELEQ/'=', '='/
      DATA ITETRA/'T', 'E', 'T', 'R', 'A'/
      DATA TORAD/1.74532925199433D-2/
C
 1000 FORMAT(72A1)
 1010 FORMAT(1X,72A1)
 1020 FORMAT('0FREE FORMAT Z MATRIX:'/)
 1030 FORMAT('0ERROR IN ',A20,'FIELD OF ABOVE Z MATRIX CARD -',
     1 ' TOO MANY OR UNRECOGNIZABLE CHARACTERS')
 1040 FORMAT('0TOO MANY ATOMS (MAXIMUM IS',I4,').')
 1050 FORMAT('0CHARACTER STRING ',4A1,' IN THE ',A20,'FIELD DOES NOT ',
     1 'MATCH A PREVIOUSLY DEFINED ATOM LABEL')
 1060 FORMAT('0VARIABLES (OPTIMIZED ON GOPT RUNS):')
 1070 FORMAT('0VARIABLE ',8A1,' NOT USED IN Z MATRIX OR SPECIFIED TWICE'
     1 )
 1080 FORMAT('1')
 1090 FORMAT('0ILLEGAL VARIABLES CARD: ',72A1/' NAME NOT RECOGNIZED OR',
     1 ' NO LEGAL VALUE GIVEN')
 1100 FORMAT('0LIST OF VARIABLES NOT TERMINATED BY A BLANK CARD,',
     1 ' LAST LINE READ WAS:'/1X,72A1)
 1110 FORMAT('0*** ERROR: FIRST Z MATRIX CARD IS BLANK')
 1120 FORMAT('0END OF VARIABLES LIST FOUND BEFORE ALL VARIABLES DEFINED'
     1 /' LIST OF UNDEFINED VARIABLES:')
 1130 FORMAT ('0NO VARIABLES USED - SWITCHING TO STANDARD Z MATRIX ',
     1 'FORMAT FOR OUTPUT')
 1140 FORMAT ('0EXTRA CHARACTERS FOUND ON THE ABOVE Z MATRIX CARD',
     1 ' FOLLOWING THE ',A20,'FIELD')
 1150 FORMAT (1X,A8)
 1160 FORMAT('0CONSTANTS (NOT OPTIMIZED ON GOPT RUNS):')
C*
C     CLEAR EVERYTHING FIRST.
C
      NATOMS=0
      NVAR=0
      DO 20 I=1,NA
      IELEM(I) = IBL
      DO 10 J=1,4
   10 IZ(I,J)=0
      DO 20 J=1,3
      LABELS(I,J)=0
   20 ZPARAM(I,J)=ZERO
      DO 30 I=1,NZ
      IFOUND(I)=0
   30 NAMES(I) = IBL
      TETRA=TWO*DATAN(DSQRT(TWO))/TORAD
      WRITE (IOUT,1020)
C*
C     GET NEXT CARD, THEN THE ELEMENT FIELD.
C*
   50 READ(IN,1000)LINE
      WRITE (IOUT,1010) LINE
      ITYPE=3
      IERR=2
      ICOL=1
      IFIELD=1
      CALL FREEFM(LINE,ICOL,72,ITYPE,IDEL,2,ICH,5,NCHAR,INTEGR,REALNO,
     1 LAST,ISEP,IERR)
      IF(IERR.EQ.-2)RETURN
      IF(IERR.EQ.1)GO TO 900
      IF(IERR.EQ.2)GO TO 300
      NATOMS=NATOMS+1
      IF(NATOMS.GT.NA)GO TO 920
      IF(ITYPE.EQ.3)GO TO 100
C     STRING FOUND - SAVE IT IN IELEM.
      IF(NCHAR.EQ.0.OR.NCHAR.GT.4)GO TO 900
      DO 70 I=1,NCHAR
   70 IELEM(NATOMS)(I:I)=ICH(I)
C     GET THE ATOMIC NUMBER - CODE THE CHARACTERS USING IAZ.
      CALL UPPER (ICH(1))
      CALL UPPER (ICH(2))
      I1=0
      I2=0
      DO 80 I=1,27
      IF(ICH(1).EQ.IAZ(I))I1=I
   80 IF(ICH(2).EQ.IAZ(I))I2=I
      IF(I1.EQ.0)GO TO 900
      I1=100*I1+I2
C     LOOK UP THE CODE - ALLOW 'D*' AND 'F*' FOR 'X' AND 'BQ' RESP.
      DO 90 INTEGR=1,56
      IF(I1.EQ.ICODE(INTEGR))GO TO 95
   90 CONTINUE
      IF (I1 .EQ. 427) THEN
         INTEGR = 55
         GO TO 95
      END IF
      IF (I1 .EQ. 627) THEN
         INTEGR = 56
         GO TO 95
      END IF
      GO TO 900
C
   95 IF(INTEGR.EQ.55)INTEGR=0
      IF(INTEGR.EQ.56)INTEGR=-1
  100 IAN(NATOMS)=INTEGR
      IF(NATOMS.EQ.1)GO TO 250
C*
C     LOOP OVER THE BL, ALPHA AND BETA FIELDS.
C*
      DO 230 L=1,3
C     GET AN ATOM NUMBER.
      IFIELD=IFIELD+1
      ICOL=LAST+1
      IF(ICOL.GT.72)GO TO 900
      ITYPE=3
      IERR=2
      CALL FREEFM(LINE,ICOL,72,ITYPE,IDEL,2,ICH,5,NCHAR,INTEGR,REALNO,
     1 LAST,ISEP,IERR)
      IF(IERR.EQ.-2)RETURN
      IF(IERR.NE.0)GO TO 900
      IF(ITYPE.EQ.3)GO TO 130
C     STRING FOUND - MATCH IT AGAINST IELEM.
      IF(NCHAR.EQ.0.OR.NCHAR.GT.4)GO TO 900
      K=NATOMS-1
      MATCH=0
      DO 120 I=1,K
      DO 110 J=1,4
      IF(IELEM(I)(J:J).NE.ICH(J))GO TO 120
  110 CONTINUE
      MATCH=MATCH+1
      INTEGR=I
  120 CONTINUE
      IF(MATCH.NE.1)GO TO 930
  130 IZ(NATOMS,L)=INTEGR
      LABELS(NATOMS,L)=ITYPE-2
C     GET A VALUE.
      IFIELD=IFIELD+1
      ICOL=LAST+1
      IF(ICOL.GT.72)GO TO 900
      ITYPE=4
      IERR=2
      CALL FREEFM(LINE,ICOL,72,ITYPE,IDEL,2,ICH,10,NCHAR,INTEGR,
     1 REALNO,LAST,ISEP,IERR)
      IF(IERR.EQ.-2)RETURN
      IF(IERR.EQ.1.OR.IERR.EQ.2)GO TO 900
      IF(ITYPE.EQ.4)GO TO 210
C     STRING FOUND - LOOK FOR A SIGN CHARACTER.
      IF(NCHAR.EQ.0)GO TO 900
      ISIGN=1
      IF(ICH(1).EQ.IPLUS)GO TO 140
      IF(ICH(1).NE.MINUS)GO TO 160
      ISIGN=-1
  140 IF(NCHAR.EQ.1)GO TO 900
      DO 150 I=2,NCHAR
  150 ICH(I-1)=ICH(I)
      ICH(NCHAR)=IBL
      NCHAR=NCHAR-1
C     LOOK UP THE STRING IN NAMES.
  160 IF(NCHAR.EQ.0.OR.NCHAR.GT.8)GO TO 900
      IF(NVAR.EQ.0)GO TO 190
      DO 180 I=1,NVAR
      DO 170 J=1,8
      IF(NAMES(I)(J:J).NE.ICH(J))GO TO 180
  170 CONTINUE
C     FOUND THE NAME - SET LABELS APPROPRIATELY.
      LABELS(NATOMS,L)=ISIGN*(100*I+LABELS(NATOMS,L))
      GO TO 220
  180 CONTINUE
C     NEW VARIABLE.
  190 NVAR=NVAR+1
      DO 200 I=1,NCHAR
  200 NAMES(NVAR)(I:I)=ICH(I)
      LABELS(NATOMS,L)=ISIGN*(100*NVAR+LABELS(NATOMS,L))
      GO TO 220
C     VALUE ACTUALLY FOUND.
  210 ZPARAM(NATOMS,L)=REALNO
  220 IF(NATOMS.EQ.2)GO TO 250
      IF(NATOMS.EQ.3.AND.L.EQ.2)GO TO 250
  230 CONTINUE
C*
C     GET N4, AN INTEGER.
C*
      IFIELD=8
      ICOL=LAST+1
      IF(ICOL.GT.72.OR.IERR.EQ.3)GO TO 50
      IERR=0
      CALL FREEFM(LINE,ICOL,72,3,IDEL,1,ICH,5,NCHAR,INTEGR,REALNO,
     1 LAST,ISEP,IERR)
      IF(IERR.EQ.-2)RETURN
      IF(IERR.EQ.1)GO TO 900
      IF(IERR.EQ.2)GO TO 50
      IZ(NATOMS,4)=INTEGR
C*
C     ENSURE THE REMAINDER OF THE LINE IS BLANK.
C*
  250 ICOL = LAST + 1
      IF (ICOL .GT. 72) GO TO 50
      IERR = 0
      CALL FREEFM (LINE,ICOL,72,1,IDEL,1,ICH,5,NCHAR,INTEGR,REALNO,
     1 LAST,ISEP,IERR)
      IF (IERR .EQ. -2) RETURN
      IF (IERR .EQ. 2) GO TO 50
C
      WRITE (IOUT,1140) IERRS(IFIELD)
      IOP(1) = -2
      RETURN
C*
C     VARIABLES SECTION.
C*
  300 IF(NATOMS.EQ.0)GO TO 970
C     IF NO VARIABLES USED, SWITCH TO STANDARD FORMAT.
      IF(NVAR.GT.0)GO TO 310
      WRITE (IOUT,1130)
      WRITE (IOUT,1080)
      IOP(5)=1
      RETURN
C
C     GET VARIABLES TO BE OPTIMIZED.
C
  310 WRITE(IOUT,1060)
      NLEFT = NVAR
      NGOT = 0
      IVTYPE = 0
      GO TO 330
C
C     GET CONSTANTS.
C
  320 WRITE (IOUT,1160)
      NLEFT = NVAR - NGOT
      IVTYPE = 2
C
  330 DO 490 N=1,NLEFT
      READ(IN,1000)LINE
      WRITE(IOUT,1010)LINE
C
C     GET VARIABLE NAME, DELIMITED BY AN = SIGN.
C
      CALL FREEFM(LINE,1,72,2,IDELEQ,2,ICH,72,NCHAR,INTEGR,REALNO,
     1 LAST,ISEP,IERR)
      IF(IERR.EQ.-2)RETURN
      IF (IERR .EQ. 2) THEN
         IF (IVTYPE .EQ. 0) THEN
            GO TO 320
         ELSE
            GO TO 980
         END IF
      END IF
      IF(IERR.NE.0.OR.NCHAR.EQ.0)GO TO 950
C     STRIP OFF ANY TRAILING BLANKS.
  340 IF(ICH(NCHAR).NE.IBL)GO TO 350
      NCHAR=NCHAR-1
      GO TO 340
  350 IF(NCHAR.GT.8)GO TO 950
C     FIND NAME IN NAMES.
      DO 380 I=1,NVAR
      IF(IFOUND(I).NE.0)GO TO 380
      DO 370 J=1,8
      IF(NAMES(I)(J:J).NE.ICH(J))GO TO 380
  370 CONTINUE
      GO TO 390
  380 CONTINUE
      GO TO 940
  390 IFOUND(I)=1
      NGOT = NGOT + 1
C     GET A VALUE OR TETRA.
      ITYPE=4
      IERR=2
      ICOL=LAST+1
      IF(ICOL.GT.72)GO TO 950
      CALL FREEFM(LINE,ICOL,72,ITYPE,IDEL,1,ICH,6,NCHAR,INTEGR,REALNO,
     1 LAST,ISEP,IERR)
      IF(IERR.EQ.-2)RETURN
      IF(IERR.EQ.1.OR.IERR.EQ.2)GO TO 950
      IF(ITYPE.EQ.4)GO TO 460
C     STRING FOUND - BETTER BE TETRA.
      IF(NCHAR.NE.5)GO TO 950
      DO 440 K=1,5
      CALL UPPER (ICH(K))
      IF(ICH(K).NE.ITETRA(K))GO TO 950
  440 CONTINUE
      REALNO=TETRA
C
C     SET THE OPTIMIZE/CONSTANT FLAG, AND INSERT THE VALUE IN THE Z
C     MATRIX.
C
  460 DO 480 L=1,3
      DO 480 K=1,NATOMS
      KL=LABELS(K,L)
      KLABS=IABS(KL)/100
      IF(KLABS.NE.I)GO TO 480
      IF (KL .GT. 0) THEN
         LABELS(K,L) = KL + IVTYPE
         ZPARAM(K,L) = REALNO
      ELSE
         LABELS(K,L) = KL - IVTYPE
         ZPARAM(K,L) = -REALNO
      END IF
  480 CONTINUE
  490 CONTINUE
C     GET A BLANK CARD.
      READ(IN,1000)LINE
      CALL FREEFM(LINE,1,72,1,IDEL,1,ICH,2,NCHAR,INTEGR,REALNO,LAST,
     1 ISEP,IERR)
      IF(IERR.NE.2)GO TO 960
      WRITE(IOUT,1080)
      RETURN
C*
C     ERROR SECTION.
C*
C     ILLEGAL FIELD.
  900 WRITE (IOUT,1030) IERRS(IFIELD)
  910 IOP(1)=-2
      RETURN
C     TOO MANY ATOMS.
  920 WRITE(IOUT,1040)NA
      GO TO 910
C     MATCH NOT FOUND IN IELEM, OR FOUND TOO OFTEN.
  930 WRITE (IOUT,1050) (ICH(I),I=1,4), IERRS(IFIELD)
      GO TO 910
C     VARIABLE SPECIFIED TWICE.
  940 WRITE(IOUT,1070)(ICH(I),I=1,8)
      GO TO 910
C     ILLEGAL VARIABLES CARD.
  950 WRITE(IOUT,1090)LINE
      GO TO 910
C     NO TERMINATING BLANK CARD.
  960 WRITE(IOUT,1100)LINE
      GO TO 910
C     NO ATOMS.
  970 WRITE(IOUT,1110)
      GO TO 910
C     BLANK CARD FOUND BEFORE ALL VARIABLES DEFINED.
  980 WRITE(IOUT,1120)
      DO 990 I=1,NVAR
  990 IF(IFOUND(I).EQ.0)WRITE(IOUT,1150) NAMES(I)
      GO TO 910
      END
      SUBROUTINE BUILDZ
C*
C     --------------
C     U OF T VERSION
C     APRIL 1987
C     --------------
C*
C     SUBROUTINE TO BUILD A MOLECULE FROM ITS Z MATRIX
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA)
C##
      PARAMETER (NA= 36)
C###
      PARAMETER (ZERO=0.0D0, ONE=1.0D0, TWO=2.0D0)
C
      COMMON /A/ IOP(99)
      COMMON /A/ NATOMS,ICHARG,MULTIP,IAN(NA),NAE,NBE,NE,NBASIS,CZ(NA,3)
      COMMON /A/ ANTOAU,CDUM(3),ICDUM(401)
      COMMON/ZMAT/IZ(NA,4),BL(NA),ALPH(NA),BET(NA),IZDUM(52),
     1 ZDUM(3),LBL(NA),LALPHA(NA),LBETA(NA),IZMASS(NA),ZMASS(NA)
      COMMON/IO/IN,IOUT,IODUM(215)
C
      DIMENSION ALPHA(NA),BETA(NA)
      DIMENSION U1(3),U2(3),U3(3),U4(3),VP(3),V3(3)
C
      DATA A180/180.0D0/
      DATA PI/3.14159265358979D0/
      DATA TENM5/1.0D-5/,TENM6/1.0D-6/
      DATA TORAD/1.74532925199433D-2/
C
 1000 FORMAT(//1X,132('-')/
     1 20X,'COORDINATES IN ANGSTROMS',31X,'COORDINATES IN BOHR',
     2 20X,'ATOMIC ISOTOPE/MASS'/
     3 '   I   AN',8X,'X',13X,'Y',13X,'Z',24X,'X',13X,'Y',13X,'Z',
     4 15X,'MASS#    MASS (AMU)'/
     5 1X,132('-'))
 1010 FORMAT(1X,I3,I5,F13.7,2F14.7,11X,3F14.7,12X,'AVE',F15.8)
 1020 FORMAT ('0',99('-')/
     1 45X,'Z MATRIX'/'0  I   AN   Z1      BL',18X,
     2 'Z2     ALPHA',16X,'Z3      BETA',16X,'Z4'/1X,99('-'))
 1030 FORMAT('0ATOM 3 CANNOT LIE ON THE Z AXIS')
 1040 FORMAT('0ILLEGAL BOND LENGTH ON Z MATRIX CARD',I4)
 1050 FORMAT (1X,132('-'))
 1060 FORMAT(1X,I3,2I5,F12.7,'   (',I3,')   ',I5,F12.5,'   (',I3,
     1  ')   ',I5,F12.5,'   (',I3,')   ',I5)
 1070 FORMAT (1X,99('-'))
 1080 FORMAT('0Z MATRIX CARD',I4,' REFERS TO UNDEFINED ATOM NUMBER',I5)
 1090 FORMAT('0Z MATRIX CARD',I4,' USES AN ILLEGAL Z4 CODE')
 1100 FORMAT('0RUN TERMINATED DUE TO Z MATRIX ERROR(S)')
 1110 FORMAT('0ON Z MATRIX CARD',I4,' TORSION ANGLE NOT DEFINED SINCE ',
     1 'THE VALENCE ANGLE Z1-Z2-Z3 AT ATOM',I4,' (Z2) IS 180 DEGREES')
 1120 FORMAT('0ON Z MATRIX CARD',I4,' Z1, Z2 AND Z3 ARE NOT ALL ',
     1 'DIFFERENT')
 1130 FORMAT('0ON Z MATRIX CARD',I4,' FOR EULER ANGLES AT ATOM',I4,
     1 ' (Z1) THE ATOMS Z2-Z1-Z3 ARE COLINEAR')
 1140 FORMAT('0ON Z MATRIX CARD',I4,' THE EULER ANGLE TO ATOM',I4,
     1 ' IS LESS THAN 0.0 OR GREATER THAN 180.0')
 1150 FORMAT (' YOU MIGHT CONSIDER DEFINING THE GEOMETRY DIFFERENTLY ',
     1 'IF THERE IS NO OBVIOUS Z MATRIX ERROR.')
 1160 FORMAT('0ERROR ON Z MATRIX CARD 2 - Z1 MUST BE 1')
 1170 FORMAT ('0ERROR ON Z MATRIX CARD',I4,' - NO GEOMETRY CAN ',
     1 'EXIST FOR THE GIVEN EULER ANGLES')
 1180 FORMAT(1X,I3,I5,F13.7,2F14.7,11X,3F14.7,12X,I3,F15.8)
C*
C     NO PRINTING IF IOP(21)=1.
      IPRINT=IOP(21)-1
C     IER IS SET TO 1 IF AN ERROR IS FOUND IN THE Z MATRIX
      IER=0
      IF(IOP(5).GT.1)GO TO 260
C
C     CHECK FOR TETRAHEDRAL ANGLE SUBSTITUTION.
C
      TETRA=TWO*DATAN(DSQRT(TWO))/TORAD
      DO 1 I=1,NATOMS
      IF(IZ(I,2).LT.0)ALPH(I)=TETRA
    1 IF(IZ(I,3).LT.0)BET(I)=TETRA
C
C     PRINT Z MATRIX
C
      IF(IPRINT.EQ.0)GO TO 6
      WRITE (IOUT,1020)
      I=1
      WRITE (IOUT,1060) I,IAN(1)
C
      IF(NATOMS.LE.1) GO TO 5
      I=2
      I1=1
      WRITE (IOUT,1060) I,IAN(2),IZ(2,1),BL(2),I1
C
      IF(NATOMS.LE.2) GO TO 5
      I=3
      I1=I1+1
      I2=NATOMS
      WRITE (IOUT,1060) I,IAN(3),IZ(3,1),BL(3),I1,IZ(3,2),ALPH(3),I2
C
      IF(NATOMS.LE.3) GO TO 5
      I3=2*NATOMS-3
      DO 4 I=4,NATOMS
      I1=I1+1
      I2=I2+1
      I3=I3+1
    4 WRITE (IOUT,1060) I,IAN(I),IZ(I,1),BL(I),I1,IZ(I,2),ALPH(I),I2,
     1 IZ(I,3),BET(I),I3,IZ(I,4)
C
    5 WRITE (IOUT,1070)
C
C     ZERO COORDINATE ARRAY CZ.
C
    6 DO 10 J=1,3
      DO 10 I=1,NATOMS
   10 CZ(I,J)=ZERO
      IF(NATOMS.EQ.1)GO TO 260
C
C     CONVERT ANGLES FROM DEGREES TO RADIANS.
C
      DO 20 I=1,NATOMS
C     REMOVE TETRAHEDRAL ANGLE SUBSTITUTION INDICATORS.
      IZ(I,2)=IABS(IZ(I,2))
      IZ(I,3)=IABS(IZ(I,3))
      ALPHA(I)=ALPH(I)*TORAD
      BETA(I)=BET(I)*TORAD
      IF(I.EQ.1.OR.BL(I).GE.TENM6)GO TO 20
      WRITE(IOUT,1040)I
      IER=1
   20 CONTINUE
C
      CZ(2,3)=BL(2)
      ITEMP=IZ(2,1)
      IF(ITEMP.EQ.1)GO TO 25
      WRITE(IOUT,1160)
      IER=1
C
   25 IF(NATOMS.EQ.2)GO TO 260
      CALL SINCOS(ALPHA(3),DSAJ,DCAJ)
      CZ(3,1)=BL(3)*DSAJ
      J=3
      ITEMP=IZ(3,1)
      JTEMP=IZ(3,2)
      IF(ITEMP.EQ.1)GO TO 30
      IF(ITEMP.EQ.2)GO TO 50
      WRITE(IOUT,1080)J,ITEMP
      IER=1
C
   30 CZ(3,3)=BL(3)*DCAJ
      IF(JTEMP.EQ.2)GO TO 60
      WRITE(IOUT,1080)J,JTEMP
      IER=1
      GO TO 60
C
   50 CZ(3,3)=CZ(2,3)-BL(3)*DCAJ
      IF(JTEMP.EQ.1)GO TO 60
      WRITE(IOUT,1080)J,JTEMP
      IER=1
C
   60 IF(NATOMS.EQ.3)GO TO 260
      IF(DABS(CZ(3,1)).GE.TENM5)GO TO 100
      WRITE(IOUT,1030)
      IER=1
C
  100 DO 250 J=4,NATOMS
      ITEMP=IZ(J,1)
      IF(ITEMP.GT.0.AND.ITEMP.LT.J)GO TO 102
      WRITE(IOUT,1080)J,ITEMP
      IER=1
C
  102 JTEMP=IZ(J,2)
      IF(JTEMP.GT.0.AND.JTEMP.LT.J)GO TO 104
      WRITE(IOUT,1080)J,JTEMP
      IER=1
C
  104 KTEMP=IZ(J,3)
      IF(KTEMP.GT.0.AND.KTEMP.LT.J)GO TO 106
      WRITE(IOUT,1080)J,KTEMP
      IER=1
C
  106 IF(ITEMP.NE.JTEMP.AND.ITEMP.NE.KTEMP.AND.JTEMP.NE.KTEMP)GO TO 110
      WRITE(IOUT,1120)J
      IER=1
C
C     GET ALL REQUIRED SINES AND COSINES.
C
  110 CALL SINCOS(ALPHA(J),DSAJ,DCAJ)
      CALL SINCOS(BETA(J),DSBJ,DCBJ)
      IF(IZ(J,4).NE.0)GO TO 135
C
C     BOND ANGLE AND DIHEDRAL ANGLE.
C
      CALL VEC(U1,CZ,JTEMP,KTEMP)
      CALL VEC(U2,CZ,ITEMP,JTEMP)
      CALL VPROD(VP,U1,U2)
      ZETA=U1(1)*U2(1)+U1(2)*U2(2)+U1(3)*U2(3)
      T=ONE-ZETA*ZETA
      IF(T.GT.TENM5)GO TO 115
      WRITE(IOUT,1110)J,JTEMP
      IER=1
      GO TO 250
C
  115 R=DSQRT(T)
C
      DO 120 I=1,3
  120 U3(I)=VP(I)/R
C
      CALL VPROD(U4,U3,U2)
      DO 130 I=1,3
      VJ=BL(J)*(-U2(I)*DCAJ+U4(I)*DSAJ*DCBJ+U3(I)*DSAJ*DSBJ)
  130 CZ(J,I)=VJ+CZ(ITEMP,I)
      GO TO 250
C
  135 IF(IABS(IZ(J,4)).NE.1)GO TO 210
C
C     TWO EULER (BOND) ANGLES.
C
      CALL VEC(U1,CZ,ITEMP,KTEMP)
      CALL VEC(U2,CZ,JTEMP,ITEMP)
      ZETA=-(U1(1)*U2(1)+U1(2)*U2(2)+U1(3)*U2(3))
      T=ONE-ZETA*ZETA
      IF(T.GT.TENM5)GO TO 142
      WRITE(IOUT,1130)J,ITEMP
      IER=1
      GO TO 250
C
C     CHECK THAT BOTH EULER ANGLES ARE BETWEEN 0 AND 180 DEGREES.
C
  142 IF(ALPH(J).GE.ZERO.AND.ALPH(J).LE.A180)GO TO 144
      WRITE(IOUT,1140)J,JTEMP
      IER=1
      GO TO 250
C
  144 IF(BET(J).GE.ZERO.AND.BET(J).LE.A180)GO TO 146
      WRITE(IOUT,1140)J,KTEMP
      IER=1
      GO TO 250
C
  146 A=(-DCBJ+ZETA*DCAJ)/T
      B=(DCAJ-ZETA*DCBJ)/T
      T=DSQRT(T)
      R=ZERO
      GAMMA=PI/TWO
C
      IF(ZETA)150,170,160
  150 R=PI
  160 GAMMA=DATAN(T/ZETA)+R
  170 D=ZERO
      IF(DABS(GAMMA+ALPHA(J)+BETA(J)-TWO*PI)-TENM6)190,180,180
C
  180 VJ = ONE + A*DCBJ - B*DCAJ
      IF (VJ .GE. ZERO) GO TO 185
      WRITE (IOUT,1170) J
      IER = 1
      GO TO 250
C
  185 D = DFLOAT(IZ(J,4)) * DSQRT(VJ) / T
  190 CALL VPROD(V3,U1,U2)
C
      DO 200 I=1,3
      VJ=(A*U1(I)+B*U2(I)+D*V3(I))*BL(J)
  200 CZ(J,I)=VJ+CZ(ITEMP,I)
      GO TO 250
C
  210 WRITE(IOUT,1090)J
      IER=1
C
  250 CONTINUE
C
C     PRINT COORDINATES AND CONVERT TO ATOMIC UNITS.
C
  260 IF(IPRINT.NE.0)WRITE (IOUT,1000)
      DO 320 I=1,NATOMS
      DO 310 J=1,3
      T=CZ(I,J)
      IF(IOP(5).LE.2)GO TO 300
      V3(J)=T/ANTOAU
      GO TO 310
  300 V3(J)=T
      CZ(I,J)=T*ANTOAU
  310 CONTINUE
      IF (IPRINT .NE. 0) THEN
         IF (IZMASS(I).EQ.0 .AND. IAN(I).GT.0) THEN
            WRITE (IOUT,1010) I, IAN(I), V3, (CZ(I,J),J=1,3), ZMASS(I)
         ELSE
            WRITE (IOUT,1180) I, IAN(I), V3, (CZ(I,J),J=1,3), IZMASS(I),
     1       ZMASS(I)
         END IF
      END IF
  320 CONTINUE
C
      IF (IPRINT .NE. 0) WRITE (IOUT,1050)
      IF(IER.EQ.0)RETURN
      WRITE(IOUT,1100)
      IF (((IOP(10).EQ.2.OR.IOP(10).EQ.3) .AND. IOP(13).EQ.1) .OR.
     1 (IOP(10).EQ.4.AND.IOP(13).EQ.2)) WRITE (IOUT,1150)
      IOP(1)=-2
      RETURN
      END
      SUBROUTINE SINCOS(A,ASIN,ACOS)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      PARAMETER (ZERO=0.0D0, ONE=1.0D0)
C
      DATA TENM6/1.D-6/
C
      ASIN=DSIN(A)
      ACOS=DCOS(A)
C     CHECK FOR SIN OR COS CLOSE TO ZERO.
      IF(DABS(ASIN).GT.TENM6)GO TO 10
C     ANGLE IS 0 OR 180 DEGREES.
      ASIN=ZERO
      ACOS=DSIGN(ONE,ACOS)
      RETURN
   10 IF(DABS(ACOS).GT.TENM6)RETURN
C     ANGLE IS 90 OR 270 DEGREES.
      ASIN=DSIGN(ONE,ASIN)
      ACOS=ZERO
      RETURN
      END
      SUBROUTINE VEC(U,C,J,K)
C*
C     --------------
C     U OF T VERSION
C     JANUARY 1987
C     --------------
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA)
C##
      PARAMETER (NA= 36)
C###
      PARAMETER (ZERO=0.0D0)
C
      DIMENSION C(NA,3),U(3)
C
      R2=ZERO
      DO 10 I=1,3
      T=C(J,I)-C(K,I)
      U(I)=T
   10 R2=R2+T*T
      IF(R2.EQ.ZERO)RETURN
      R2=DSQRT(R2)
      DO 20 I=1,3
   20 U(I)=U(I)/R2
      RETURN
      END
      SUBROUTINE VPROD(VP,X,Y)
C*
C     --------------
C     QCPE VERSION
C     DECEMBER 1971
C     --------------
C*
C     VP=X CROSS Y
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C*
      DIMENSION VP(3),X(3),Y(3)
C*
      VP(1)=X(2)*Y(3)-X(3)*Y(2)
      VP(2)=X(3)*Y(1)-X(1)*Y(3)
      VP(3)=X(1)*Y(2)-X(2)*Y(1)
      RETURN
      END
      SUBROUTINE ZPARAM(KEY,IZFREE)
C*
C     --------------
C     U OF T VERSION
C     JANUARY 1987
C     --------------
C*
C     SUBROUTINE TO READ IN Z MATRIX VARIATION CARDS AND CHECK FOR
C     ERRORS.
C
C     KEY IS USED ON INPUT TO CONTROL THE USE OF VARIATIONS OF 0.0.
C     KEY = 0  DO NOT ALLOW ZERO VARIATIONS.
C     KEY = 1  ALLOW ZERO VARIATIONS.
C
C     KEY IS USED ON OUTPUT TO SIGNAL THE END OF THE VARIATION CARDS
C     KEY = 0  VARIATION CARDS READ
C     KEY = 1  NO FURTHER VARIATION CARDS
C     KEY =-1  INPUT ERROR.
C
C     IZFREE IS USED TO RETURN A FLAG INDICATING WHETHER THE CURRENT
C     OPTIMIZATION VARIATION CARDS AGREE WITH THE VARIABLES USED IN
C     THE FREE FORMAT Z MATRIX INPUT.
C     IZFREE = 0  CONSTRAINTS ACCEPTABLE, OR FIXED FORMAT USED.
C     IZFREE = 1  CONSTRAINTS NOT ACCEPTABLE.
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA)
C##
      PARAMETER (NA= 36)
C###
      PARAMETER (ZERO=0.0D0)
C
      COMMON /A/ IOP(99),NATOMS,IC1(6),IC2(NA),CD1(NA,3),CD2(4),IC3(401)
      COMMON/ZMAT/IZ(NA,4),BL(NA),ALPHA(NA),BETA(NA),
     1 IPAR(15,3),NIPAR(3),NPAR,NSTEP,DX(3),NUM,NUMB,
     2 LABELS(NA,3),IZMASS(NA),ZMASS(NA)
      COMMON/IO/IN,IOUT,IODUM(215)
C
      DATA MAXCD/3/,MAXPAR/15/
C
 1000 FORMAT(15I3,F10.0)
 1010 FORMAT('0END OF VARIATION CARDS FOUND BUT THERE WERE',I4,
     1 ' INTERVENING CARDS')
 1020 FORMAT('0OPTIMIZATION/SCAN ERROR - MORE THAN',I3,' PARAMETER ',
     1 'CARDS FOR SIMULTANEOUS VARIATION')
 1030 FORMAT('0OPTIMIZATION/SCAN ERROR - VARIATION CARD CONTAINS AN ',
     1 'ILLEGAL PARAMETER NUMBER OR INCREMENT IS 0.0 :'/1X,15I4,F12.5)
 1040 FORMAT('0EMPTY VARIATION CARD FOUND')
 1050 FORMAT('0PARAMETER',I4,' OCCURS TWICE ON THE CURRENT SET OF ',
     1 'VARIATION CARDS:'/1X,15I4,F12.5)
C*
      IDX=KEY
      KEY=0
      IZFREE=0
C     NZZ HAS 3*NATOMS-6, THE NUMBER OF VARIATIONAL PARAMETERS
      NZZ=3*NATOMS-6
      IF(NATOMS.EQ.1)NZZ=0
      IF(NATOMS.EQ.2)NZZ=1
C
C     READ IN PARAMETERS TO BE VARIED AND SIZE OF VARIATION
C     ORDER OF PARAMETERS IS AS FOLLOWS
C     BL(I),I=2,NATOMS
C     ALPHA(I),I=3,NATOMS
C     BETA(I),I=4,NATOMS
C     NOTE THAT
C     BL(1), ALPHA(1), ALPHA(2), BETA(1), BETA(2) AND BETA(3) ARE
C     NOT INCLUDED.
C
      DO 20 J=1,MAXCD
      NIPAR(J)=0
      READ(IN,1000)(IPAR(I,J),I=1,MAXPAR),DX(J)
C     TEST FOR COMPLETION OF OPTIMIZATION
      IF(IPAR(1,J).LE.0)GO TO 40
      NUM=J
      IF(DX(J).EQ.ZERO.AND.IDX.EQ.0)GO TO 50
      DO 10 I=1,MAXPAR
      IPARIJ=IPAR(I,J)
      IF(IPARIJ.EQ.999)GO TO 15
      IF(IPARIJ.GT.NZZ)GO TO 50
      IF(IPARIJ)50,30,1
C     CHECK THAT THIS PARAMETER HAS NOT BEEN USED YET.
    1 DO 5 JJ=1,J
      NPARJJ=NIPAR(JJ)
      IF(JJ.EQ.J)NPARJJ=I-1
      IF(NPARJJ.EQ.0)GO TO 10
      DO 5 II=1,NPARJJ
      IF(IPARIJ.EQ.IPAR(II,JJ))GO TO 80
    5 CONTINUE
   10 CONTINUE
C     VARIATION CARD FILLED EXACTLY.
      NIPAR(J)=MAXPAR
      IF(IOP(5).EQ.0)GO TO 100
      RETURN
C     CONTINUATION CODE (999) FOUND.
   15 IF(I.EQ.1)GO TO 70
   20 NIPAR(J)=I-1
C     TOO MANY VARIATION CARDS
      WRITE(IOUT,1020)MAXCD
      GO TO 60
C     END OF THIS SET OF VARIATION CARDS.
   30 NIPAR(J)=I-1
      IF(I.EQ.1)GO TO 70
      IF(IOP(5).EQ.0)GO TO 100
      RETURN
C     END OF VARIATION CARDS
   40 KEY=1
      J=J-1
      IF(J.EQ.0)RETURN
      WRITE(IOUT,1010)J
      GO TO 60
C     PARAMETER NUMBER NEGATIVE OR TOO LARGE
   50 WRITE(IOUT,1030)(IPAR(I,J),I=1,MAXPAR),DX(J)
   60 KEY=-1
      IOP(1)=-2
      RETURN
C     EMPTY VARIATION CARD.
   70 WRITE(IOUT,1040)
      GO TO 60
C     PARAMETER REPEATED.
   80 WRITE(IOUT,1050)IPARIJ,(IPAR(II,JJ),II=1,15),DX(JJ)
      GO TO 60
C*
C     CHECK VARIATION CARDS FOR FREE FORMAT ACCEPTABILITY.
C*
  100 NBETA=2*NATOMS-2
      DO 230 J=1,NUM
      NPARJ=NIPAR(J)
      DXJ=DX(J)
      DO 230 I=1,NPARJ
C     IJ IS THE PARAMETER NUMBER TO BE CHECKED.
      IJ=IPAR(I,J)
C     BOND LENGTH.
      IF(IJ.GE.NATOMS)GO TO 110
      LIJ=LABELS(IJ+1,1)
      GO TO 140
C     ALPHA BOND ANGLE.
  110 IF(IJ.GE.NBETA)GO TO 130
      LIJ=LABELS(IJ-NATOMS+3,2)
      GO TO 140
C     BETA ANGLE.
  130 LIJ=LABELS(IJ-2*NATOMS+6,3)
C     SKIP IF THIS PARAMETER WAS NOT A VARIABLE.
  140 LIJABS=IABS(LIJ)/100
      IF(LIJABS.EQ.0)GO TO 230
C     SCAN ALL THE LABELS FOR USES OF THIS VARIABLE.
      DO 220 L=1,3
      DO 220 K=2,NATOMS
      KL=LABELS(K,L)
      KLABS=IABS(KL)/100
C     SKIP IF THIS PARAMETER NOT A VARIABLE, OR NOT THE SAME AS LIJ.
      IF(KLABS.NE.LIJABS)GO TO 220
C     MATCH FOUND - ENSURE THIS NEW VARIABLE OCCURS ON THE CURRENT SET
C     OF VARIATION CARDS.
C     GET A PARAMETER NUMBER FOR KL.
      IF(L-2)150,160,170
C     BOND LENGTH.
  150 KLPAR=K-1
      GO TO 180
C     ALPHA BOND ANGLE.
  160 KLPAR=K+NATOMS-3
      GO TO 180
C     BETA ANGLE.
  170 KLPAR=K+2*NATOMS-6
C     LOOK FOR THIS PARAMETER NUMBER ON THE CURRENT VARIATION CARDS.
  180 DO 200 JJ=1,NUM
      NPARJJ=NIPAR(JJ)
      DXJJ=DX(JJ)
      DO 200 II=1,NPARJJ
      IIJJ=IPAR(II,JJ)
      IF(IIJJ.NE.KLPAR)GO TO 200
C     FOUND THE DESIRED PARAMETER - CHECK THAT THE VARIATIONS MATCH.
      IF(LIJ*KL.GT.0)GO TO 190
C     OPPOSITE SIGNS OF THE SAME VARIABLE - EXPECT OPPOSITE VARIATIONS.
      IF(DXJJ.EQ.-DXJ)GO TO 220
      GO TO 210
C     SAME SIGNS OF THE SAME VARIABLE - EXPECT SAME VARIATION.
  190 IF(DXJJ.EQ.DXJ)GO TO 220
      GO TO 210
  200 CONTINUE
C     VARIATIONS DO NOT MATCH, OR PARAMETER NOT FOUND.
  210 IZFREE=1
      RETURN
  220 CONTINUE
  230 CONTINUE
      RETURN
      END
      SUBROUTINE ZSCALE(T)
C*
C     --------------
C     U OF T VERSION
C     JANUARY 1987
C     --------------
C*
C     SUBROUTINE TO INTRODUCE GEOMETRICAL VARIATIONS INTO THE Z MATRIX
C
C     T CONTAINS THE INCREMENT FOR THE Z MATRIX PARAMETERS
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA)
C##
      PARAMETER (NA= 36)
C###
      COMMON /A/ IOP(99),NATOMS,IC1(6),IC2(NA),CD1(NA,3),CD2(4),IC3(401)
      COMMON/ZMAT/IZ(NA,4),BL(NA),ALPHA(NA),BETA(NA),
     1 IPAR(15,3),NIPAR(3),NPAR,NSTEP,DX(3),NUM,NUMB,
     2 LBL(NA),LALPHA(NA),LBETA(NA),IZMASS(NA),ZMASS(NA)
C
      DO 60 J=1,NUM
      NPARR=NIPAR(J)
      DO 60 I=1,NPARR
      K=IPAR(I,J)
      IF(K.GE.NATOMS)GO TO 20
      BL(K+1)=BL(K+1)+T*DX(J)
      GO TO 60
   20 IF(K.GE.2*NATOMS-2)GO TO 40
      ALPHA(K-NATOMS+3)=ALPHA(K-NATOMS+3)+T*DX(J)
      GO TO 60
   40 BETA(K-2*NATOMS+6)=BETA(K-2*NATOMS+6)+T*DX(J)
   60 CONTINUE
      RETURN
      END
      SUBROUTINE ZPRINT
C*
C     ROUTINE TO PRINT/PUNCH FREE FORMAT Z MATRICES.
C
C     AUTHOR: MIKE PETERSON, U OF T CHEMISTRY DEPARTMENT, TORONTO.
C     VERSION: OCTOBER 1987.
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA)
C##
      PARAMETER (NA= 36)
C###
      PARAMETER (NA3=3*NA, NZ=NA3-6)
C
      COMMON /A/ IOP(99),NATOMS,ICHARG,MULTIP,IAN(NA),IC1(4)
      COMMON /A/ CD1(NA,3),CD2(4),IC2(401)
      COMMON/ZMAT/IZ(NA,4),ZPARAM(NA,3),IZ1(52),Z1(3),LABELS(NA,3),
     1 IZMASS(NA),ZMASS(NA)
      COMMON/ZMATC/TITLE,IELEM(NA),NAMES(NZ)
      COMMON/IO/IN,IPRINT,IPUNCH,IODUM(214)
C
      DIMENSION IUSED(NZ)
C
      LOGICAL GOTCON
C
      CHARACTER TITLE*72, IELEM*4, NAMES*8,
     1 IFMT*40, IPRTF*40, IPUNF*40, IVFMT*40, IPRTVF*40, IPUNVF*40,
     2 IEL*4, IS(3)*4, IVAL(3)*14, IZ4*5, IBL*1, MINUS*1
C
      DATA IPRTF/'(1X,A4,3(3X,A4,A14),A5,T85,''ATOM'',I4)'/
      DATA IPUNF/'(A4,3(3X,A4,A14),A5,''FZ'',I6)'/
      DATA IPRTVF/'(1X,A8,'' = '',F12.7)'/
      DATA IPUNVF/'(   A8,'' = '',F12.7,T73,''FZ'',I6)'/
      DATA IBL/' '/, MINUS/'-'/
C
 1000 FORMAT ('**FZ',A68,'FZ     0')
 1010 FORMAT ('1FREE FORMAT Z MATRIX FOR: ',A72/)
 1020 FORMAT (/'0VARIABLES (OPTIMIZED):'/)
 1030 FORMAT (T73,'FZ',I6)
 1040 FORMAT (I4)
 1050 FORMAT (F14.7)
 1060 FORMAT (F14.5)
 1070 FORMAT (I5)
 1080 FORMAT (/'0CONSTANTS:'/)
C*
C     ENTRY FOR PRINTING - SET FORMATS APPROPRIATELY.
C
      IFMT = IPRTF
      IVFMT = IPRTVF
      IOUT=IPRINT
      WRITE(IOUT,1010) TITLE
      GO TO 10
C
C     ENTRY FOR PUNCHING - SET FORMATS APPROPRIATELY.
C
      ENTRY ZPUNCH
      IFMT = IPUNF
      IVFMT = IPUNVF
      IOUT=IPUNCH
      WRITE(IOUT,1000) TITLE(1:68)
C
   10 DO 200 N=1,NATOMS
C*
C     GET ELEMENT FIELD - STRING OR NUMBER.
C*
      IF(IELEM(N).EQ.IBL)GO TO 30
C     STRING - COPY IT TO IEL.
      IEL=IELEM(N)
      GO TO 40
C     ATOMIC NUMBER GIVEN - PUT IT IN IEL.
   30 WRITE (IEL,1040) IAN(N)
C*
C     LOOP OVER THE BL, ALPHA AND BETA FIELDS.
C*
   40 DO 100 L=1,3
      LABEL=LABELS(N,L)
      LABS=IABS(LABEL)
      ITYPE=LABS-2*(LABS/2)
      LABS=LABS/100
C     GET ATOMIC NUMBER FOR THIS Z MATRIX PARAMETER.
      IZZ=IZ(N,L)
      IF(ITYPE.EQ.1)GO TO 60
C     A STRING WAS ORIGINALLY SPECIFIED - COPY IT FROM IELEM.
      IF(IZZ.EQ.0)GO TO 55
      IS(L)=IELEM(IZZ)
      GO TO 70
C     NO VALUE OF IZZ ON THIS Z MATRIX CARD.
   55 IS(L)=IBL
      GO TO 70
C     AN ATOM NUMBER WAS ORIGINALLY SPECIFIED - SET IS(L).
   60 WRITE (IS(L),1040) IZZ
C
C     GET A VARIABLE NAME OR PARAMETER VALUE FOR THIS FIELD.
C
   70 IF(LABS.EQ.0.AND.IZZ.NE.0)GO TO 90
C     VARIABLE WAS USED - CHECK SIGN, THEN COPY THE NAME.
      IVAL(L)=IBL
      IF(LABS.EQ.0)GO TO 100
      IF(LABEL.LT.0)IVAL(L)(6:6)=MINUS
      IVAL(L)(7:14) = NAMES(LABS)
      GO TO 100
C     VALUE WAS USED - COPY IT.
   90 IF (L .EQ. 1) THEN
         WRITE (IVAL(L),1050) ZPARAM(N,L)
      ELSE
         WRITE (IVAL(L),1060) ZPARAM(N,L)
      END IF
  100 CONTINUE
C*
C     N4 FIELD.
C*
      IZZ=IZ(N,4)
      IF(N.LE.3)GO TO 105
C     INTEGER VALUE.
      WRITE (IZ4,1070) IZZ
      GO TO 110
C     BLANK OUT THE FIELD.
  105 IZ4=IBL
C
  110 WRITE(IOUT,IFMT) IEL, (IS(I),IVAL(I),I=1,3), IZ4, N
  200 CONTINUE
C
      NCARD=NATOMS+1
      IF(IOUT.EQ.IPRINT)WRITE(IOUT,1020)
      IF(IOUT.EQ.IPUNCH)WRITE(IOUT,1030)NCARD
C*
C     WRITE OUT VARIABLE VALUES: OPTIMIZED THEN CONSTANTS.
C*
C     KEEP TRACK OF VARIABLES ALREADY OUTPUT WITH THE ARRAY IUSED.
      DO 310 I=1,NZ
  310 IUSED(I)=0
C
      GOTCON = .FALSE.
      IVTYPE = 0
C
  320 IVFMT(18:18) = '7'
C
      DO 330 L=1,3
      IF (L .EQ. 2) IVFMT(18:18) = '5'
      DO 330 N=2,NATOMS
      LABS=IABS(LABELS(N,L))/100
      IF(LABS.EQ.0)GO TO 330
      IF(IUSED(LABS).NE.0)GO TO 330
      I = IABS(LABELS(N,L)) / 2
      I = I - 2*(I/2)
      IF (I .NE. 0) GOTCON = .TRUE.
      IF (I .NE. IVTYPE) GO TO 330
      IUSED(LABS)=1
      NCARD=NCARD+1
      IF(IOUT.EQ.IPRINT)
     1 WRITE (IOUT,IVFMT) NAMES(LABS), ZPARAM(N,L)
      IF(IOUT.EQ.IPUNCH)
     1 WRITE (IOUT,IVFMT) NAMES(LABS), ZPARAM(N,L), NCARD
  330 CONTINUE
C
      NCARD=NCARD+1
      IF(IOUT.EQ.IPUNCH)WRITE(IOUT,1030)NCARD
C
C     CHECK IF ANY CONSTANTS WERE USED - EXIT IF THERE ARE NONE.
C
      IF (.NOT.GOTCON .OR. IVTYPE.NE.0) RETURN
      IF (IOUT .EQ. IPRINT) WRITE (IOUT,1080)
      IVTYPE = 1
      GO TO 320
      END
      SUBROUTINE FILMAS (IOP, IN, IOUT, IAN, NATOMS, IZMASS, ZMASS)
C
C     ASSIGN MASSES TO ATOMS (ADAPTED FROM GAUSSIAN 82).
C     ISOTOPIC MASSES FOR RB-XE, AND ATOMIC WEIGHTS ADDED.
C
C     ARGUMENT DESCRIPTIONS:
C     IOP    ... OPTIONS ARRAY.
C     IN     ... INPUT UNIT.
C     IOUT   ... OUTPUT UNIT.
C     IAN    ... VECTOR OF ATOMIC NUMBERS.
C     NATOMS ... NUMBER OF ATOMS.
C     IZMASS ... RETURNS ISOTOPIC MASS NUMBER (OR 0 IF ABUNDANCE
C                AVERAGED MASS WAS USED). DUMMY/FLOATING ATOMS ALWAYS
C                HAVE MASS NUMBERS OF ZERO.
C     ZMASS  ... RETURNS ATOMIC MASSES IN AMU. DUMMY/FLOATING ATOMS
C                ALWAYS HAVE MASSES OF ZERO.
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      PARAMETER (ZERO=0.0D0)
C
      CHARACTER*1 LINE(72), ICH(3), IDEL(2)
      CHARACTER*2 IEL(54), IC2
C
      DIMENSION IOP(99), IAN(NATOMS), IZMASS(NATOMS), ZMASS(NATOMS),
     1 AMASS(4,54), MN(4,54), AMASS1(4,1:2), AMASS2(4,3:10),
     2 AMASS3(4,11:18), AMASS4(4,19:36), AMASS5(4,37:54),
     3 AVMASS(54)
C
      EQUIVALENCE (AMASS(1,1),AMASS1(1,1)), (AMASS(1,3),AMASS2(1,3)),
     1 (AMASS(1,11),AMASS3(1,11)), (AMASS(1,19),AMASS4(1,19)),
     2 (AMASS(1,37),AMASS5(1,37))
C
      DATA IDEL/' ', ' '/
C
      DATA IEL/' H', 'HE', 'LI', 'BE', ' B', ' C', ' N', ' O',
     1 ' F', 'NE', 'NA', 'MG', 'AL', 'SI', ' P', ' S', 'CL',
     2 'AR', ' K', 'CA', 'SC', 'TI', ' V', 'CR', 'MN', 'FE',
     3 'CO', 'NI', 'CU', 'ZN', 'GA', 'GE', 'AS', 'SE', 'BR',
     4 'KR', 'RB', 'SR', ' Y', 'ZR', 'NB', 'MO', 'TC', 'RU',
     5 'RH', 'PD', 'AG', 'CD', 'IN', 'SN', 'SB', 'TE', ' I',
     6 'XE'/
C
C     MASSES ARE STORED IN AMASS: AMASS(I,J) IS THE MASS FOR THE JTH
C     MOST ABUNDANT ISOTOPE FOR ATOMIC NUMBER I.  THE CORRESPONDING MASS
C     NUMBERS (# OF PROTONS + # OF NEUTRONS) ARE STORED IN THE ARRAY MN.
C     THE MASSES ARE FROM A. H. WAPSTRA AND K. BOS, ATOMIC AND
C     NUCLEAR DATA TABLES, 1977, 19, 185.  THE ISOTOPIC ABUNDANCES FROM
C     THE 1981-82 CRC TABLES WERE USED FOR ELEMENTS H-KR, AND THE
C     1982-83 CRC TABLES WERE USED FOR ELEMENTS RB-XE.
C     FOR TECHNETIUM, THE ISOTOPES WERE ORDERED BASED ON THEIR
C     LIFE-TIMES SINCE THE NATURAL ABUNDANCES ARE ZERO (SEE REFERENCE
C     FROM ATOMIC WEIGHTS BELOW).
C
      DATA AMASS1/
C       H-1             H-2             H-3
     1   1.007825037D0,  2.014101787D0,  3.016049286D0,  0.0D0,
C       HE-4            HE-3
     2   4.00260325D0,   3.016029297D0,  0.0D0,          0.0D0/
C
      DATA AMASS2/
C       LI-7            LI-6
     1   7.0160045D0,    6.0151232D0,    0.0D0,          0.0D0,
C       BE-9
     2   9.0121825D0,    0.0D0,          0.0D0,          0.0D0,
C        B-11            B-10
     3  11.0093053D0,   10.0129380D0,    0.0D0,          0.0D0,
C        C-12            C-13
     4  12.000000000D0, 13.003354839D0,  0.0D0,          0.0D0,
C        N-14            N-15
     5  14.003074008D0, 15.000108978D0,  0.0D0,          0.0D0,
C        O-16            O-18            O-17
     6  15.99491464D0,  17.99915939D0,  16.9991306D0,    0.0D0,
C        F-19
     7  18.99840325D0,   0.0D0,          0.0D0,          0.0D0,
C       NE-20           NE-22           NE-21
     8  19.9924391D0,   21.9913837D0,   20.9938453D0,    0.0D0/
C
      DATA AMASS3/
C       NA-23
     1  22.9897697D0,    0.0D0,          0.0D0,          0.0D0,
C       MG-24           MG-26           MG-25
     2  23.9850450D0,   25.9825954D0,   24.9858392D0,    0.0D0,
C       AL-27
     3  26.9815413D0,    0.0D0,          0.0D0,          0.0D0,
C       SI-28           SI-29           SI-30
     4  27.9769284D0,   28.9764964D0,   29.9737717D0,    0.0D0,
C        P-31
     5  30.9737634D0,    0.0D0,          0.0D0,          0.0D0,
C        S-32            S-34            S-33            S-36
     6  31.9720718D0,   33.96786774D0,  32.9714591D0,   35.9670790D0,
C       CL-35           CL-37
     7  34.968852729D0, 36.965902624D0,  0.0D0,          0.0D0,
C       AR-40           AR-36           AR-38
     8  39.9623831D0,   35.967545605D0, 37.9627322D0,    0.0D0/
C
      DATA AMASS4/
C        K-39            K-41            K-40
     1  38.9637079D0,   40.9618254D0,   39.9639988D0,    0.0D0,
C       CA-40           CA-44           CA-42           CA-48
     2  39.9625907D0,   43.9554848D0,   41.9586218D0,   47.952532D0,
C       SC-45
     3  44.9559136D0,    0.0D0,          0.0D0,          0.0D0,
C       TI-48           TI-46           TI-47           TI-49
     4  47.9479467D0,   45.9526327D0,   46.9517649D0,   48.9478705D0,
C        V-51            V-50
     5  50.9439625D0,   49.9471613D0,    0.0D0,          0.0D0,
C       CR-52           CR-53           CR-50           CR-54
     6  51.9405097D0,   52.9406510D0,   49.9460463D0,   53.9388822D0,
C       MN-55
     7  54.9380463D0,    0.0D0,          0.0D0,          0.0D0,
C       FE-56           FE-54           FE-57           FE-58
     8  55.9349393D0,   53.9396121D0,   56.9353957D0,   57.9332778D0,
C       CO-59
     9  58.9331978D0,    0.0D0,          0.0D0,          0.0D0,
C       NI-58           NI-60           NI-62           NI-61
     A  57.9353471D0,   59.9307890D0,   61.9283464D0,   60.9310586D0,
C       CU-63           CU-65
     B  62.9295992D0,   64.9277924D0,    0.0D0,          0.0D0,
C       ZN-64           ZN-66           ZN-68           ZN-67
     C  63.9291454D0,   65.9260352D0,   67.9248458D0,   66.9271289D0,
C       GA-69           GA-71
     D  68.9255809D0,   70.9247006D0,    0.0D0,          0.0D0,
C       GE-74           GE-72           GE-70           GE-73
     E  73.9211788D0,   71.9220800D0,   69.9242498D0,   72.9234639D0,
C       AS-75
     F  74.9215955D0,    0.0D0,          0.0D0,          0.0D0,
C       SE-80           SE-78           SE-82           SE-76
     G  79.9165205D0,   77.9173040D0,   81.916709D0,    75.9192066D0,
C       BR-79           BR-81
     H  78.9183361D0,   80.916290D0,     0.0D0,          0.0D0,
C       KR-84           KR-86           KR-82           KR-83
     I  83.9115064D0,   85.910614D0,    81.913483D0,    82.914134D0/
C
      DATA AMASS5/
C       RB-85           RB-87
     1  84.9117996D0,   86.9091836D0,    0.0D0,          0.0D0,
C       SR-88           SR-86           SR-87           SR-84
     2  87.9056249D0,   85.9092732D0,   86.9088902D0,   83.913428D0,
C        Y-89
     3  88.9058560D0,    0.0D0,          0.0D0,          0.0D0,
C       ZR-90           ZR-94           ZR-92           ZR-91
     4  89.9047080D0,   93.9063191D0,   91.9050392D0,   90.9056442D0,
C       NB-93
     5  92.9063780D0,    0.0D0,          0.0D0,          0.0D0,
C       MO-98           MO-96           MO-95           MO-92
     6  97.9054050D0,   95.9046755D0,   94.9058379D0,   91.906809D0,
C       TC-98           TC-97           TC-99
     7  97.9072D0,      96.9064D0,      98.9063D0,       0.0D0,
C       RU-102          RU-104          RU-101          RU-99
     8 101.9043475D0,  103.905422D0,   100.9055808D0,   98.9059371D0,
C       RH-103
     9 102.905503D0,     0.0D0,          0.0D0,          0.0D0,
C       PD-106          PD-108          PD-105          PD-110
     A 105.903475D0,   107.903894D0,   104.905075D0,   109.905169D0,
C       AG-107          AG-109
     B 106.905095D0,   108.904754D0,     0.0D0,          0.0D0,
C       CD-114          CD-112          CD-111          CD-110
     C 113.9033607D0,  111.9027614D0,  110.904182D0,   109.903007D0,
C       IN-115          IN-113
     D 114.903875D0,   112.904056D0,     0.0D0,          0.0D0,
C       SN-120          SN-118          SN-116          SN-119
     E 119.9021990D0,  117.9016066D0,  115.9017435D0,  118.9033102D0,
C       SB-121          SB-123
     F 120.9038237D0,  122.904222D0,     0.0D0,          0.0D0,
C       TE-130          TE-128          TE-126          TE-125
     G 129.906229D0,   127.904464D0,   125.903310D0,   124.904435D0,
C        I-127
     H 126.904477D0,     0.0D0,          0.0D0,          0.0D0,
C       XE-132          XE-129          XE-131          XE-134
     I 131.904148D0,   128.9047801D0,  130.905076D0,   133.905395D0/
C
      DATA MN/ 1,  2,  3,  0,     4,  3,  0,  0,     7,  6,  0,  0,
     1         9,  0,  0,  0,    11, 10,  0,  0,    12, 13,  0,  0,
     2        14, 15,  0,  0,    16, 18, 17,  0,    19,  0,  0,  0,
     3        20, 22, 21,  0,    23,  0,  0,  0,    24, 26, 25,  0,
     4        27,  0,  0,  0,    28, 29, 30,  0,    31,  0,  0,  0,
     5        32, 34, 33, 36,    35, 37,  0,  0,    40, 36, 38,  0,
     6        39, 41, 40,  0,    40, 44, 42, 48,    45,  0,  0,  0,
     7        48, 46, 47, 49,    51, 50,  0,  0,    52, 53, 50, 54,
     8        55,  0,  0,  0,    56, 54, 57, 58,    59,  0,  0,  0,
     9        58, 60, 62, 61,    63, 65,  0,  0,    64, 66, 68, 67,
     A        69, 71,  0,  0,    74, 72, 70, 73,    75,  0,  0,  0,
     B        80, 78, 82, 76,    79, 81,  0,  0,    84, 86, 82, 83,
     C        85, 87,  0,  0,    88, 86, 87, 84,    89,  0,  0,  0,
     D        90, 94, 92, 91,    93,  0,  0,  0,    98, 96, 95, 92,
     E        98, 97, 99,  0,   102,104,101, 99,   103,  0,  0,  0,
     F       106,108,105,110,   107,109,  0,  0,   114,112,111,110,
     G       115,113,  0,  0,   120,118,116,119,   121,123,  0,  0,
     H       130,128,126,125,   127,  0,  0,  0,   132,129,131,134/
C
C     ARRAY AVMASS CONTAINS THE 1985 ABUNDANCE-AVERAGED ATOMIC WEIGHTS,
C     FROM: PURE AND APPLIED CHEMISTRY, 58, 1677-1692 (1986).
C     NOTE THAT THE VALUE FOR TECHNETIUM IS THE AVERAGE OF THE THREE
C     KNOWN RADIO-ISOTOPES FROM THE ABOVE PAPER.
C
      DATA AVMASS/
     1   1.00794D0,      4.002602D0,     6.941D0,        9.012182D0,
     2  10.811D0,       12.011D0,       14.00674D0,     15.9994D0,
     3  18.9984032D0,   20.1797D0,      22.989768D0,    24.3050D0,
     4  26.981539D0,    28.0855D0,      30.973762D0,    32.066D0,
     5  35.4527D0,      39.948D0,       39.0983D0,      40.078D0,
     6  44.955910D0,    47.88D0,        50.9415D0,      51.9961D0,
     7  54.93805D0,     55.847D0,       58.93320D0,     58.69D0,
     8  63.546D0,       65.39D0,        69.723D0,       72.61D0,
     9  74.92159D0,     78.96D0,        79.904D0,       83.80D0,
     A  85.4678D0,      87.62D0,        88.90585D0,     91.224D0,
     B  92.90638D0,     95.94D0,        97.9066D0,     101.07D0,
     C 102.90550D0,    106.42D0,       107.8682D0,     112.411D0,
     D 114.82D0,       118.710D0,      121.75D0,       127.60D0,
     E 126.90447D0,    131.29D0/
C
 1000 FORMAT ('0DUMP OF ATOMIC MASS TABLES'/
     1 '1ATOM',5X,'AVERAGE',8X,'ISOTOPIC MASSES',83('-')/)
 1010 FORMAT (2X,A2,F15.8,4(6X,A2,'-',I3,F14.8))
 1020 FORMAT ('1')
 1030 FORMAT (/'0REPLACEMENT ISOTOPIC MASS DATA:'/)
 1040 FORMAT (72A1)
 1050 FORMAT (' SELECT MASS NUMBER',I4,' FOR ATOM NUMBER',I3)
 1060 FORMAT (' USE MASS NUMBER',I4,' FOR ALL ',A2,' ATOMS')
 1070 FORMAT ('0*** ATOM NUMBER',I8,' IS NOT VALID.'/
     1 ' INPUT LINE: ',72A1/)
 1080 FORMAT ('0*** ATOM NUMBER',I8,' IS A DUMMY/FLOATING ATOM -',
     1 ' NO REPLACEMENT MASS IS PERMITTED.'/)
 1090 FORMAT ('0*** MASS NUMBER',I8,' NOT FOUND FOR ATOM NUMBER',I8,
     1 ' (ATOMIC NUMBER',I4,').')
 1100 FORMAT ('0*** ATOMIC SYMBOL ',A2,' IS NOT VALID:'/
     1 ' INPUT LINE: ',72A1/)
 1110 FORMAT ('0*** MASS NUMBER',I8,' NOT FOUND FOR ATOMIC SYMBOL ',A2)
 1120 FORMAT ('0*** MASS NUMBER ',I8,' IS NOT VALID:'/
     1 ' INPUT LINE: ',72A1/)
 1130 FORMAT (5X,'VALID MASS NUMBERS ARE:',4I4)
 1140 FORMAT (1X)
C
C
C     SET ATOMIC MASS NUMBERS AND MASSES.
C
      IF (IOP(22) .EQ. 1) GO TO 800
C
C     SELECT MOST ABUNDANT ISOTOPE.
C
      DO 100 I=1,NATOMS
      IANI = IAN(I)
      IF (IANI.GT.0 .AND. IANI.LE.54) THEN
         IZMASS(I) = MN(1,IANI)
         ZMASS(I) = AMASS(1,IANI)
      ELSE
         IZMASS(I) = 0
         ZMASS(I) = ZERO
      END IF
  100 CONTINUE
C
C     ARE CHANGES TO BE READ.
C
      IF (IOP(22) .NE. 2) GO TO 900
      WRITE (IOUT,1030)
C
C     READ AN INPUT LINE.
C
  200 READ (IN,1040,END=990) LINE
C
C     SCAN FOR THE ATOMIC SYMBOL/NUMBER, AND THE REPLACEMENT ISOTOPE.
C
      ITYPE = 3
      IERR = 1
      ICOL = 1
      CALL FREEFM (LINE, ICOL, 72, ITYPE, IDEL, 2, ICH, 3, NCHAR,
     1 INTEGR, REALNO, LAST, ISEP, IERR)
      IF (IERR .EQ. -2) GO TO 200
      IF (IERR .EQ. 2) THEN
         WRITE (IOUT,1140)
         GO TO 900
      END IF
C
      IF (ITYPE .EQ. 1) THEN
C
C     FOUND AN ATOM SYMBOL - EXTRACT IT AND LOOK UP THE ATOMIC NUMBER.
C
         IF (NCHAR.LT.1 .OR. NCHAR.GT.2) GO TO 980
         IF (NCHAR .EQ. 1) THEN
            IC2 = ' ' // ICH(1)
         ELSE
            IC2 = ICH(1) // ICH(2)
         END IF
         DO 210 I=1,54
         IF (IC2 .EQ. IEL(I)) THEN
            IATOM = -I
            GO TO 220
         END IF
  210    CONTINUE
         WRITE (IOUT,1100) IC2, LINE
         IOP(1) = -2
         GO TO 200
      ELSE
C
C     GOT AN ATOM NUMBER.
C
         IATOM = INTEGR
         IF (IATOM.LE.0 .OR. IATOM.GT.NATOMS) THEN
            WRITE (IOUT,1070) IATOM, LINE
            IOP(1) = -2
            GO TO 200
         END IF
      END IF
C
  220 ITYPE = 3
      IERR = 0
      ICOL = LAST + 1
      IF (ICOL .GT. 72) GO TO 980
      CALL FREEFM (LINE, ICOL, 72, ITYPE, IDEL, 2, ICH, 3, NCHAR,
     1 INTEGR, REALNO, LAST, ISEP, IERR)
      IF (IERR .EQ. -2) GO TO 200
      IF (IERR .EQ. 2) GO TO 980
      IMASS = INTEGR
      IF (IMASS .LE. 0) THEN
         WRITE (IOUT,1120) IMASS, LINE
         IOP(1) = -2
         GO TO 200
      END IF
      IF (IATOM .LT. 0) GO TO 300
C
C     USE MASS NUMBER IMASS FOR ATOM NUMBER IATOM.
C
      WRITE (IOUT,1050) IMASS, IATOM
      IANI = IAN(IATOM)
      IF (IANI .LE. 0) THEN
         WRITE (IOUT,1080) IATOM
         IOP(1) = -2
         GO TO 200
      END IF
C
      DO 250 J=1,4
      IF (MN(J,IANI) .EQ. IMASS) GO TO 260
  250 CONTINUE
C
      WRITE (IOUT,1090) IMASS, IATOM, IANI
  270 DO 280 J=1,4
  280 IF (MN(J,IANI) .NE. 0) JMAX = J
      WRITE (IOUT,1130) (MN(J,IANI),J=1,JMAX)
      WRITE (IOUT,1140)
      IOP(1) = -2
      GO TO 200
C
  260 IZMASS(IATOM) = IMASS
      ZMASS(IATOM) = AMASS(J,IANI)
      GO TO 200
C
C     USE MASS NUMBER IMASS FOR ALL ATOMS WITH ATOMIC NUMBER IATOM.
C
  300 IATOM = -IATOM
      WRITE (IOUT,1060) IMASS, IEL(IATOM)
C
      DO 310 J=1,4
      IF (MN(J,IATOM) .EQ. IMASS) GO TO 320
  310 CONTINUE
C
      WRITE (IOUT,1110) IMASS, IEL(IATOM)
      IANI = IATOM
      GO TO 270
C
  320 DO 330 I=1,NATOMS
      IANI = IAN(I)
      IF (IANI .EQ. IATOM) THEN
         IZMASS(I) = IMASS
         ZMASS(I) = AMASS(J,IATOM)
      END IF
  330 CONTINUE
      GO TO 200
C
C     SELECT ABUNDANCE-AVERAGED ATOMIC WEIGHTS.
C
  800 DO 810 I=1,NATOMS
      IZMASS(I) = 0
      IANI = IAN(I)
      IF (IANI.GT.0 .AND. IANI.LE.54) THEN
         ZMASS(I) = AVMASS(IANI)
      ELSE
         ZMASS(I) = ZERO
      END IF
  810 CONTINUE
C
C     DUMP CONTENTS OF MASS TABLES.
C
  900 IF (IOP(23) .NE. 1) RETURN
C
      WRITE (IOUT,1000)
      DO 920 I=1,54
      DO 910 J=1,4
  910 IF (MN(J,I) .NE. 0) JMAX = J
  920 WRITE (IOUT,1010) IEL(I), AVMASS(I),
     1 (IEL(I),MN(J,I),AMASS(J,I),J=1,JMAX)
      WRITE (IOUT,1020)
      RETURN
C
C     ERROR SECTION.
C
  980 WRITE (IOUT,981) LINE
  981 FORMAT ('0*** INVALID INPUT FOUND WHILE READING',
     1 ' REPLACEMENT ATOMIC MASS NUMBERS:'/' INPUT LINE: ',72A1/
     2 ' POSSIBILITIES: MISSING MASS NUMBER, INVALID ATOMIC',
     3 ' SYMBOL OR NUMBER.'/)
      IOP(1) = -2
      GO TO 200
C
  990 WRITE (IOUT,991) IN
  991 FORMAT ('0*** END-OF-FILE ON UNIT',I3,' WHILE READING',
     1 ' REPLACEMENT ATOMIC MASS NUMBERS')
      IOP(1) = -2
      RETURN
      END
