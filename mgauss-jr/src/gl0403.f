C/    GL0403       04 DEC 88                                         MRP
C?GLD/GBR/IBM/VAX/UNX
      SUBROUTINE SECORT
C??
C?CDC
C     PROGRAM SECORT
C??
C     LINK 0403
C
C     --------------
C     U OF T VERSION
C     DECEMBER 1988
C     --------------
C
C     ROUTINE TO GENERATE THE INITIAL COEFFICIENT MATRIX FOR
C     ENERGY DECOMPOSITION / BSSE.
C
C     ORIGINAL VERSION: K. MOROKUMA, APRIL 1973.
C     MODIFIED: R. CAMMI, U. OF PARMA, DECEMBER 1985.
C     RE-WRITTEN: M. PETERSON, U. OF TORONTO CHEMISTRY DEPARTMENT,
C     JUNE 1987.
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA, NB=#NB)
C     PARAMETER (NF=#NF, NC=#NC)
C##
      PARAMETER (NA= 36, NB=200)
      PARAMETER (NF=120, NC=120)
C###
      PARAMETER (ZERO=0.0D0, ONE=1.0D0, TWO=2.0D0)
C
      COMMON /A/ IOP(99)
      COMMON /A/ NATOMS,ICHARG,MULTIP,IAN(NA),NAE,NBE,NE,NBASIS,C(NA,3)
      COMMON /A/ DUMC(4),IDUMC(401)
C
      COMMON /C0403/ NEWMO(NB),NEWAO(NB),
     1 IBMAP(NB),IAMAP(NA),IANSAV(NA),ICHSAV(3),IMUSAV(3),NAESAV(3),
     2 NBESAV(3),NESAV(3),NBASAV(3),NOCCAS(2),NVACAS(2),NOCCBS(2),
     3 NVACBS(2),NBACPC(2),ZEN(12,2),
     4 RHFEIG(NB,2),RN(NF),RFILL1(119),COEF(NC),RFILL2(18),ICOEF(NC),
     5 IRHF,NCONF,NCORE,NVAL,NOPEN,NFOCK,IMO(4),
     6 CM(NB,NB),C12(NB,NB)
C
      COMMON/IO/IN,IOUT,IODUM(15),NFILE(100,2)
C
      DIMENSION S(NB,NB)
C
      EQUIVALENCE (AIBMAP,IBMAP(1)), (S(1,1),C12(1,1))
C
      DATA TENM10/1.0D-10/
C
 1000 FORMAT ('0ENERGY DECOMPOSITION / BSSE RUN ABORTED - CAN NOT',
     1 ' HANDLE MC-SCF/GVB WAVEFUNCTIONS IN SECORT (LINK 0403)')
 1010 FORMAT ('0CONSISTENCY CHECK FAILED IN SECORT (LINK 0403):'/
     1 ' NDOTOT =',I5,', BUT LASTDO =',I5/
     2 ' NSOTOT =',I5,', BUT LASTSO =',I5)
 1020 FORMAT('0UNABLE TO SCHMIDT ORTHONORMALIZE THE MO - FAILURE ',
     1 'OCCURRED FOR MO',I4,' IN SECORT (LINK 0403)')
 1030 FORMAT ('1MERGED COEFFICIENTS IN SECORT')
 1040 FORMAT ('0CONSISTENCY CHECK FAILED IN SECORT (LINK 0403):'/
     1 ' NDOTOT =',I5,', NSOTOT =',I5,', NVOTOT =',I5/
     2 ' BUT NBATOT =',I5,' AND NBASIS =',I5)
C
C     EXIT IF THIS LINK NOT REQUIRED.
C
      IF (IOP(10) .EQ. 0) RETURN
      IF (IOP(4) .LE. 3) RETURN
C
C     RECOVER THE MAP BETWEEN BASIS FUNCTIONS AND MOLECULES.
C
      CALL TREAD (44, AIBMAP, NFILE(44,1), 1, NFILE(44,1), 1, 0)
C
C     NPASS IS 0 FOR CLOSED SHELL, ALPHA SPIN UHF AND RHF; 1 FOR
C     BETA SPIN UHF.
C
      NPASS = 0
C
C     ZERO THE CM MATRIX, WHERE THE MERGED COEFFICIENTS WILL BE PUT.
C
   10 DO 100 J=1,NBASIS
      DO 100 I=1,NBASIS
  100 CM(I,J) = ZERO
C
C     NDOTOT IS THE NUMBER OF THE LAST DOUBLY OCCUPIED MO USED SO FAR.
C     NSOTOT IS THE NUMBER OF THE LAST SINGLY OCCUPIED MO USED SO FAR.
C     NVOTOT IS THE NUMBER OF THE LAST VIRTUAL MO USED SO FAR.
C     NBATOT IS THE NUMBER OF BASIS FUNCTIONS USED SO FAR.
C
      NDOTOT = 0
      NSOTOT = 0
      NVOTOT = 0
      NBATOT = 0
      ICMAT = 40
C
C     GET LASTDO: NUMBER OF LAST DOUBLY OCCUPIED MO IN A+B.
C     GET LASTSO: NUMBER OF LAST SINGLY OCCUPIED MO IN A+B.
C
      IF (IOP(4) .GE. 7) GO TO 200
C
C     CLOSED SHELL.
C
      IF (IOP(9) .EQ. 0) THEN
         LASTDO = NAE
         LASTSO = 0
C
C     UHF - TWO CASES (ALPHA AND BETA).
C
      ELSE IF (IOP(9) .EQ. 1) THEN
         LASTDO = 0
         IF (NPASS .EQ. 0) THEN
            LASTSO = NAE
         ELSE
            LASTSO = NBE
         END IF
C
C     RHF - READ AUXILIARY DATA.
C
      ELSE
         CALL TREAD (5, RHFEIG, NFILE(5,1), 1, NFILE(5,1), 1, 0)
         IF (NVAL .NE. 0) THEN
            WRITE (IOUT,1000)
            IOP(1) = -2
            RETURN
         END IF
         LASTDO = NCORE
         LASTSO = NOPEN
      END IF
C
C     OFFSET LASTSO TO AN ABSOLUTE MO NUMBER.
C
      LASTSO = LASTDO + LASTSO
C
C     LOOP OVER THE MOLECULES, MERGING THE COEFFICIENT MATRICES INTO CM.
C     ******************************************************************
C
  200 DO 390 IFRAG=1,2
      NBA = NBASAV(IFRAG)
C
C     GET COEFFICIENTS FROM PARTITION ICMAT (OR ICMAT+1 IF UHF BETA MO).
C
      CALL TREAD (ICMAT+NPASS, C12, NB, NB, NBA, NBA, 0)
C
C     SET MAP BETWEEN CM AND C12.
C     ***************************
C
      IF (IOP(4) .GE. 7) GO TO 290
C
C     A+B SUPERMOLECULE ENERGY DECOMPOSITION.
C     ***************************************
C
C     REQUIRED MO ORDER: DOUBLE OCCUPIED A, DOUBLE OCCUPIED B,
C     SINGLE OCCUPIED A, SINGLE OCCUPIED B, VIRTUAL A, VIRTUAL B.
C
      IF (IOP(9)-1) 210,220,230
C     CLOSED SHELL.
  210 NDO = NAESAV(IFRAG)
      NSO = 0
      GO TO 250
C     UHF - TWO CASES (ALPHA OR BETA SPIN).
  220 NDO = 0
      IF (NPASS .EQ. 0) THEN
         NSO = NAESAV(IFRAG)
      ELSE
         NSO = NBESAV(IFRAG)
      END IF
      GO TO 250
C     RHF - GET EXTRA DATA FROM DISK.
  230 CALL TREAD (45+IFRAG, RHFEIG, NFILE(5,1), 1, NFILE(5,1), 1, 0)
      IF (NVAL .NE. 0) THEN
         WRITE (IOUT,1000)
         IOP(1) = -2
         RETURN
      END IF
      NDO = NCORE
      NSO = NOPEN
C
C     GENERATE THE MAP BETWEEN MOLECULE MO'S AND A+B MO'S.
C
C     DOUBLY OCCUPIED MO.
  250 DO 260 I=1,NDO
  260 NEWMO(I) = NDOTOT + I
C     SINGLY OCCUPIED MO.
      DO 270 I=1,NSO
  270 NEWMO(NDO+I) = LASTDO + NSOTOT + I
C     VIRTUAL MO.
      NVO = NBA - NDO - NSO
      DO 280 I=1,NVO
  280 NEWMO(NDO+NSO+I) = LASTSO + NVOTOT + I
C
C     SAVE OCCUPIED AND VIRTUAL MO COUNTS FOR LATER.
C
      IF (IFRAG .EQ. 1) THEN
         NOCCAS(NPASS+1) = NDO + NSO
         NVACAS(NPASS+1) = NVO
      ELSE
         NOCCBS(NPASS+1) = NDO + NSO
         NVACBS(NPASS+1) = NVO
      END IF
      GO TO 360
C
C     BASIS SET SUPERPOSITION ERROR CORRECTION.
C     *****************************************
C
C     NEW MO ORDER IS DEPENDENT ON THE ED/BSSE PHASE:
C
C      7: NOCCA ! NVACB !! NVACA NOCCB.
C      8: NOCCA ! NOCCB !! NVACA NVACB.
C      9: NOCCA ! NOCCB NVACA NVACB !!.
C     10: NOCCB ! NVACA !! NVACB NOCCA.
C     11: NOCCB ! NOCCA !! NVACB NVACA.
C     12: NOCCB ! NOCCA NVACB NVACA.
C
C     WHERE '!' INDICATES THE END OF THE OCCUPIED (DOUBLE + SINGLE)
C     MO, AND '!!' INDICATES THE END OF THE ACTIVE MO SPACE.
C
C     GET NDO: NUMBER OF OCCUPIED MO FOR THIS MOLECULE.
C     GET NVO: NUMBER OF VIRTUAL MO FOR THIS MOLECULE.
C     GET LASTDO: START POSITION FOR NEW OCCUPIED MO.
C     GET LASTVO: START POSITION FOR NEW VIRTUAL MO.
C
  290 NDOA = NOCCAS(NPASS+1)
      NVOA = NVACAS(NPASS+1)
      NDOB = NOCCBS(NPASS+1)
      NVOB = NVACBS(NPASS+1)
      NSO = 0
C
C     CONSIDER MOLECULE A RE-ORDERING FOR EACH PHASE.
C     ALSO SET NBACPC (ACTIVE MO SPACE DIMENSION).
C
      IF (IFRAG .EQ. 1) THEN
         NDO = NDOA
         NVO = NVOA
         IF (IOP(4) .EQ. 7) THEN
            LASTDO = 0
            LASTVO = NDOA + NVOB
            NBACPC(NPASS+1) = LASTVO
         ELSE IF (IOP(4) .EQ. 8) THEN
            LASTDO = 0
            LASTVO = NDOA + NDOB
            NBACPC(NPASS+1) = LASTVO
         ELSE IF (IOP(4) .EQ. 9) THEN
            LASTDO = 0
            LASTVO = NDOA + NDOB
            NBACPC(NPASS+1) = NBASIS
         ELSE IF (IOP(4) .EQ. 10) THEN
            LASTDO = NDOB + NVOA + NVOB
            LASTVO = NDOB
            NBACPC(NPASS+1) = NDOB + NVOA
         ELSE IF (IOP(4) .EQ. 11) THEN
            LASTDO = NDOB
            LASTVO = NDOB + NDOA + NVOB
            NBACPC(NPASS+1) = NDOB + NDOA
         ELSE
            LASTDO = NDOB
            LASTVO = NDOB + NDOA + NVOB
            NBACPC(NPASS+1) = NBASIS
         END IF
C
C     CONSIDER MOLECULE B RE-ORDERING FOR EACH PHASE.
C
      ELSE
         NDO = NDOB
         NVO = NVOB
         IF (IOP(4) .EQ. 7) THEN
            LASTDO = NDOA + NVOB + NVOA
            LASTVO = NDOA
         ELSE IF (IOP(4) .EQ. 8) THEN
            LASTDO = NDOA
            LASTVO = NDOA + NDOB + NVOA
         ELSE IF (IOP(4) .EQ. 9) THEN
            LASTDO = NDOA
            LASTVO = NDOA + NDOB + NVOA
         ELSE IF (IOP(4) .EQ. 10) THEN
            LASTDO = 0
            LASTVO = NDOB + NVOA
         ELSE IF (IOP(4) .EQ. 11) THEN
            LASTDO = 0
            LASTVO = NDOB + NDOA
         ELSE
            LASTDO = 0
            LASTVO = NDOB + NDOA
         END IF
      END IF
C
C     GENERATE THE MAP BETWEEN THE MOLECULE'S MO'S AND THE BSSE MO'S.
C
      DO 300 I=1,NDO
  300 NEWMO(I) = LASTDO + I
      DO 310 I=1,NVO
  310 NEWMO(NDO+I) = LASTVO + I
C
C     GENERATE THE MAP BETWEEN MOLECULE AO'S AND A+B AO'S.
C     ****************************************************
C
  360 J = 0
      DO 370 I=1,NBASIS
      IF (IBMAP(I) .EQ. IFRAG) THEN
         J = J + 1
         NEWAO(J) = I
         NBATOT = NBATOT + 1
      END IF
  370 CONTINUE
C
C     COPY COLUMNS OF C12 INTO PROPER COLUMNS OF CM.
C     **********************************************
C
      DO 380 I=1,NBA
      NEWMOI = NEWMO(I)
      DO 380 J=1,NBA
      NEWAOJ = NEWAO(J)
  380 CM(NEWAOJ,NEWMOI) = C12(J,I)
C
C     UPDATE THE POINTERS.
C     ********************
C
      NDOTOT = NDOTOT + NDO
      NSOTOT = NSOTOT + NSO
      NVOTOT = NVOTOT + NVO
  390 ICMAT = ICMAT + 2
C
C     END OF LOOP OVER MOLECULES.
C     ***************************
C
      IF (IOP(20).EQ.1 .OR. IOP(20).EQ.2) THEN
         WRITE (IOUT,1030)
         CALL GBSOUT (CM, CM, NB, NB, NBASIS, 0)
      END IF
C
C     CONSISTENCY CHECKS.
C
      IF (NDOTOT+NSOTOT+NVOTOT.NE.NBASIS .OR. NBATOT.NE.NBASIS) THEN
         WRITE (IOUT,1040) NDOTOT, NSOTOT, NVOTOT, NBATOT, NBASIS
         IOP(1) = -2
         RETURN
      END IF
      IF (IOP(4) .LE. 6) THEN
         LASTSO = LASTSO - LASTDO
         IF (NDOTOT.NE.LASTDO .OR. NSOTOT.NE.LASTSO) THEN
            WRITE (IOUT,1010) NDOTOT, LASTDO, NSOTOT, LASTSO
            IOP(1) = -2
            RETURN
         END IF
      END IF
C
C     SCHMIDT ORTHOGONALIZE THE MO VECTORS IN CM, IF NECESSARY.
C
      IF (IOP(4) .NE. 4) GO TO 500
C     GET THE OVERLAP MATRIX FROM FILE 8.
      CALL TREAD (8, S, NB, NB, NBASIS, NBASIS, 1)
C
      DO 470 I=1,NBASIS
      DO 440 J=1,I
      OVLP = ZERO
C     CALCULATE OVERLAP BETWEEN MO I AND MO J.
      DO 420 K=1,NBASIS
      T = ZERO
      DO 410 L=1,NBASIS
  410 T = T + S(K,L)*CM(L,I)
  420 OVLP = OVLP + T*CM(K,J)
      IF (I .EQ. J) GO TO 450
C     PROJECT COMPONENT OF MO J OUT OF MO I.
      DO 430 K=1,NBASIS
  430 CM(K,I) = CM(K,I) - OVLP*CM(K,J)
  440 CONTINUE
C     NORMALIZE MO I.
  450 IF (OVLP .LE. TENM10) THEN
         WRITE (IOUT,1020) I
         IOP(1) = -2
         RETURN
      END IF
      OVLP = ONE/DSQRT(OVLP)
      DO 460 K=1,NBASIS
  460 CM(K,I) = CM(K,I)*OVLP
  470 CONTINUE
C
C     WRITE OUT MO VECTORS INTO PROPER PLACE.
C
  500 CALL TWRITE (25+2*NPASS, CM, NB, NB, NBASIS, NBASIS, 0)
C
C     SAVE THE UPDATED MAP BETWEEN BASIS FUNCTIONS AND MOLECULES.
C
      CALL TWRITE (44, AIBMAP, NFILE(44,1), 1, NFILE(44,1), 1, 0)
C
C     FORM DENSITY MATRIX IN S, IF NECESSARY (CLOSED SHELL OR UHF).
C
      IF (IOP(9) .EQ. 2) RETURN
C
      IF (IOP(9) .EQ. 0) THEN
         L = NAE
         FAC = TWO
      ELSE
         IF (NPASS .EQ. 0) THEN
            L = NAE
         ELSE
            L = NBE
         END IF
         FAC = ONE
      END IF
C
      DO 520 I=1,NBASIS
      DO 520 J=1,I
      SUM = ZERO
      DO 510 K=1,L
  510 SUM = SUM + CM(I,K)*CM(J,K)
      SUM = SUM * FAC
      S(I,J) = SUM
  520 S(J,I) = SUM
C     WRITE OUT DENSITY MATRIX ON THE DISK ... FILE 19 OR 21.
      CALL TWRITE (19+2*NPASS, S, NB, NB, NBASIS, NBASIS, 1)
C
C     RETURN, UNLESS UHF BETA SPIN IS REQUIRED.
C
      IF (IOP(9).NE.1 .OR. NPASS.NE.0) RETURN
      NPASS = 1
      GO TO 10
      END
