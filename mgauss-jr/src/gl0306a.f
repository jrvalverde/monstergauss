C     GL0306A      04 MAY 89                                         MRP
C?IBM/GLD/GBR/VAX/UNX
      SUBROUTINE SHELL
C??
C?CDC
C     PROGRAM SHELL
C??
C1INTRODUCTION
C     LINK 0306
C*
C     --------------
C     U OF T VERSION
C     FEBRUARY 1987
C     --------------
C*
C     GAUSSIAN TWO ELECTRON INTEGRAL PACKAGE FOR S AND P FUNCTIONS.
C
C1
C     MAIN LOOP OVER SHELLS ... SEE EXPLANATION IN PROGRAM GINPUT ...
C     LINK 0301
C     ACCEPTS NUMBERS OF FOUR SHELLS
C     ISHELL  JSHELL  KSHELL  LSHELL
C     FINDS THEIR ANGULAR QUANTUM NUMBERS
C     AND
C     BASED ON THIS ORDERS SHELLS IN A STANDARD MANNER
C     INEW  JNEW  KNEW  LNEW
C     ONLY POSSIBILITIES ALLOWED FOR ANGULAR QUANTUM NUMBERS ARE THEN
C     0000  0001  0011  0101  0111  1111
C     DETERMINES TYPE OF INTEGRAL SET BASED ON THE ABOVE NUMBERS
C     CALLS THE FOLLOWING ROUTINES IN THE ORDER GIVEN
C     SHLOUT
C     FIRST TIME TO PRESET OUTPUT ROUTINES
C     FILMAX
C     TO PRESET INTEGRAL ACCURCY LIMITS
C     SINFO
C     OBTAINS GEOMETRICAL INFORMATION ABOUT THE FOUR CENTERS
C     FINDS TWO SETS OF LOCAL AXES
C     FOR CENTERS
C     A AND B  P SET
C     C AND D  Q SET
C     PINF
C     OBTAINS INFORMATION ABOUT GAUSSIAN FUNCTIONS CONNECTED WITH THE P
C     SET OF AXES
C     AT THIS POINT
C     SHELL OBTAINS INFORMATION ABOUT THE GAUSSIAN FUNCTIONS CONNECTED
C     WITH THE Q SET OF AXES
C     SP0000 TO SP1111
C     OBTAINS UP TO 88 INTEGRALS REFERRED TO AXES A B AND Q
C     ROT2
C     ROTATES THESE INTEGRALS TO UP TO 160 INTEGRALS ON A B AND Q
C     TQ0011 TO TQ1111
C     TRANSLATES THESE INTEGRALS ON A B AND Q TO UP TO 256 INTEGRALS ON
C     A B C AND D
C     R30001 TO R31111
C     ROTATES UP TO 256 INTEGRALS ON A B C AND D TO THE SAME NUMBER
C     REFERRED TO THE FIXED SPACE AXES
C     SHELL DETECTS SHELL COINCIDENCES AND ELIMINATES DUPLICATES
C     INTEGRALS ARE TRANSFERRED TO ROUTINE SHLOUT TO BE PUT ON DISK
C     OR TAPE
C     A FINAL CALL TO SHLOUT CLOSES THE OUTPUT BUFFER
C*
C1OPTIONS
C     ******************************************************************
C     OPTIONS ... IOP( )     SEE PROGRAM GINPUT ... SEGMENT 301
C     *****************************************************************
C*
C/
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA)
C     PARAMETER (NS=#NS, NP=#NP)
C##
      PARAMETER (NA= 36)
      PARAMETER (NS=120, NP=300)
C###
      PARAMETER (ZERO=0.0D0, ONE=1.0D0)
C
      INTEGER SHELLA,SHELLN,SHELLT,AOS,SHELLC
C
      COMMON /A/ IOP(99)
      COMMON /A/ NATOMS,ICHARG,MULTIP,IAN(NA),NAE,NBE,NE,NBASIS,CO(NA,3)
      COMMON /A/ CDUM(4),ICDUM(401)
C
C     MANY COMMON BLOCKS HAVE BEEN CONSOLIDATED ...
C     SHLINF = SHLINF + SHLNOS
C     GEOM = GEOM + PGEOM + QGEOM + PQGEOM
C     MAXC = MAXC + AUXVAR + ASTORE + SHLCUT
C     MISC = DPQ + EABECD + GINF + CONST + COS + PHI + MISC + TYPE
C
      COMMON/B/IXYZ(NS),SHELLA(NS),SHELLN(NS),SHELLT(NS),
     1 SHELLC(NS),AOS(NS),NSHELL,MAXTYP,EXX(NP),C1(NP),C2(NP)
      COMMON/MAXC/CMAX(NP),CMAXA(10),CMAXB(10),CMAXC(10),CMAXD(10),
     1 ISMLP(100),ISMLQ,ISML,ERROR1,ERROR2,AUXVAR,VAR(2),
     2 EXPCUT,XMAX,QQ,THETA,N,IFMT
      COMMON/GEOM/AX,AY,AZ,BX,BY,BZ,CX,CY,CZ,DX,DY,DZ,RAB,RABSQ,RCD,
     $ RCDSQ,P11,P12,P13,P21,P22,P23,P31,P32,P33,Q11,Q12,Q13,
     $ Q21,Q22,Q23,Q31,Q32,Q33
     $ ,GP(100),EP(100),DP00P(100),DP01P(100),DP10P(100),DP11P(100),
     $ APP(100),BPP(100)
     $ ,ACX,ACY,ACZ,ACY2,COSG,SING,AQX,AQZ,QPERP,QPERP2
     $ ,AP,BP,CQ,DQ,PX,PY,PZ,QX,QY,QZ,RPQ,RPQSQ,PQ1,PQ2,PQ3,
     $ C11,C12,C13,C21,C22,C23,C31,C32,C33
      COMMON/GOUT/GOUT(256)
      COMMON/MISC/DP00,DP01,DP10,DP11,DQ00,DQ01,DQ10,DQ11,EAB,ECD,
     $ GA,GB,GC,GD,SA,SB,SC,SD,PA,PB,PC,PD,GAB,GCD,CONST,CONP(100),C,
     $ COSP,SINP,MAB,MCD,NGANGB,ITYPE,JTYPE
      COMMON/SHLINF/NGA,LA,AG(10),CSA(10),CPA(10),NGB,LB,BG(10),CSB(10),
     $ CPB(10),NGC,LC,CG(10),CSC(10),CPC(10),NGD,LD,DG(10),
     $ CSD(10),CPD(10),ISHELL,JSHELL,KSHELL,LSHELL
      COMMON /SHLCOM/ INEW,JNEW,KNEW,LNEW,
     1 IEND,JEND,KEND,LEND
      COMMON/TABLE/TTT(6000)
      COMMON/G/G(160)
      COMMON/H/H(160)
      COMMON/IO/IN,IOUT,IODUM(215)
C*
      DATA TENM12/1.0D-12/
C*
 2001 FORMAT ('0SHELL: FMTGEN WAS CALLED',I9,' TIMES')
C
      IF(IOP(10).EQ.0)RETURN
C     READ IN ERROR FUNCTION INTERPOLATION TABLE.
      CALL TREAD(3,TTT,6000,1,6000,1,0)
C     PRESET F(M,T) ROUTINES.
      CALL FMTSET (0, 0, 0)
      IFMT = 0
C     FILL COMMON MAXC ... USED IN DISCARDING SMALL
C     INTEGRALS BEFORE THEY ARE FULLY EVALUATED.
      CALL FILMAX (IOP(30), IOP(23))
C     PRESET OUTPUT ROUTINE
      CALL SHLOUT(-1,GOUT,256)
      IF (IOP(1) .NE. 0) RETURN
C
      DO 730 ISHELL=1,NSHELL
      DO 720 JSHELL=1,ISHELL
      DO 710 KSHELL=1,ISHELL
      IF(ISHELL-KSHELL)50,60,50
   50 MAXL=KSHELL
      GO TO 70
   60 MAXL=JSHELL
   70 DO 700 LSHELL=1,MAXL
      LAT=SHELLT(ISHELL)
      LBT=SHELLT(JSHELL)
      LCT=SHELLT(KSHELL)
      LDT=SHELLT(LSHELL)
C     ARE THERE ANY D/F SHELLS PRESENT - IF SO, SKIP AS OTHER ROUTINES
C     WILL HANDLE THESE INTEGRALS.
      I=LAT/2+LBT/2+LCT/2+LDT/2
      IF(I.NE.0)GO TO 700
      ITYPE=8*LAT+4*LBT+2*LCT+LDT+1
      GO TO (110,110,130,110,140,110,130,110,160,120,150,120,140,140,170
     $ ,110),ITYPE
C     TYPES 0000,0001,0101,0011,0111,1111 ARE UNALTERED
  110 INEW=ISHELL
      JNEW=JSHELL
      KNEW=KSHELL
      LNEW=LSHELL
      LA=LAT
      LB=LBT
      LC=LCT
      LD=LDT
      GO TO 180
C     TYPES 1001,1011 HAVE IJ SWITCHED
  120 INEW=JSHELL
      JNEW=ISHELL
      KNEW=KSHELL
      LNEW=LSHELL
      LA=LBT
      LB=LAT
      LC=LCT
      LD=LDT
      GO TO 180
C     TYPES 0010,0110 HAVE KL SWITCHED
  130 INEW=ISHELL
      JNEW=JSHELL
      KNEW=LSHELL
      LNEW=KSHELL
      LA=LAT
      LB=LBT
      LC=LDT
      LD=LCT
      GO TO 180
C     TYPES 0100,1100,1101 HAVE PAIRS IJ AND KL SWITCHED
  140 INEW=KSHELL
      JNEW=LSHELL
      KNEW=ISHELL
      LNEW=JSHELL
      LA=LCT
      LB=LDT
      LC=LAT
      LD=LBT
      GO TO 180
C     TYPE 1010 HAS IJ SWITCHED AND KL SWITCHED
  150 INEW=JSHELL
      JNEW=ISHELL
      KNEW=LSHELL
      LNEW=KSHELL
      LA=LBT
      LB=LAT
      LC=LDT
      LD=LCT
      GO TO 180
C     TYPE HAS PAIRS IJ AND KL SWITCHED FOLLOWED BY KL SWITCH
  160 INEW=KSHELL
      JNEW=LSHELL
      KNEW=JSHELL
      LNEW=ISHELL
      LA=LCT
      LB=LDT
      LC=LBT
      LD=LAT
      GO TO 180
C     TYPE 1110 HAS PAIRS IJ AND KL SWITCHED FOLLOWED BY IJ SWITCH
  170 INEW=LSHELL
      JNEW=KSHELL
      KNEW=ISHELL
      LNEW=JSHELL
      LA=LDT
      LB=LCT
      LC=LAT
      LD=LBT
  180 CONTINUE
C     ONLY 6 STANDARD TYPES REMAIN. 0000,0001,0011,0101,0111,1111
C     SPECIFY THESE BY JTYPE
C     ALSO SET THE NUMBER OF BASIS FUNCTIONS IN EACH SHELL. NOTE THAT
C     JTYPE=4 REQUIRES SPECIAL TREATMENT FOR SHELL K WHICH IS REALLY AN
C     S SHELL.
      GO TO (190,200,200,210,200,220,220,230,200,220,220,230,210,230,230
     $ ,240),ITYPE
  190 JTYPE=1
      NGOUT=1
      IEND=1
      JEND=1
      KEND=1
      LEND=1
      GO TO 250
  200 JTYPE=2
      NGOUT=4
      IEND=1
      JEND=1
      KEND=1
      LEND=4
      GO TO 250
  210 JTYPE=3
      NGOUT=16
      IEND=1
      JEND=1
      KEND=4
      LEND=4
      GO TO 250
  220 JTYPE=4
      NGOUT=64
      IEND=1
      JEND=4
      KEND=4
      LEND=4
      GO TO 250
  230 JTYPE=5
      NGOUT=64
      IEND=1
      JEND=4
      KEND=4
      LEND=4
      GO TO 250
  240 JTYPE=6
      NGOUT=256
      IEND=4
      JEND=4
      KEND=4
      LEND=4
  250 CONTINUE
C     EMPTY COMMON GOUT
      DO 260 I=1,NGOUT
  260 GOUT(I)=ZERO
      CALL SINFO
      CALL SGEOM
C     PRELIMINARY P LOOP
      CALL PINF
C     IF 0000 USE SPECIAL ROUTINE
      IF (JTYPE-1) 270,270,280
  270 CALL SP0000
      GO TO 690
C     BEGIN Q LOOP
  280 DO 490 K=1,NGC
      GC=CG(K)
      DO 490 L=1,NGD
      GD=DG(L)
      GCD=GC+GD
      ECD=ONE/GCD
      CQ=GD*ECD*RCD
      DQ=CQ-RCD
      XQQ=CQ*DQ*GCD
      V=ZERO
      IF(-XQQ.LE.EXPCUT)V=DEXP(XQQ)*ECD
      XXTEST=CMAXC(K)*CMAXD(L)*V
      ISMLQ=0
      IF(XXTEST.LE.ERROR1)ISMLQ=1
      IF(XXTEST.LE.ERROR2)ISMLQ=2
C     SKIP OUT WHEN ISMLQ=2.
      IF(ISMLQ.EQ.2)GO TO 490
      SC=CSC(K)
      SD=CSD(L)
      PC=CPC(K)
      PD=CPD(L)
      DQ00=SC*SD*V
      DQ01=SC*PD*V
      DQ10=PC*SD*V
      DQ11=PC*PD*V
C     FIND COORDINATES OF Q RELATIVE TO AXES AT A
C     QPERP IS PERPENDICULAR FROM Q TO AB
      AQX=ACX+SING*CQ
      AQZ=ACZ+COSG*CQ
      QPERP2=AQX*AQX+ACY2
      QPERP=DSQRT(QPERP2)
C     PHI IS 180 - AZIMUTHAL ANGLE FOR AQ IN AB LOCAL AXIS SYSTEM
      IF(QPERP-TENM12)340,340,330
  330 COSP=-AQX/QPERP
      SINP=-ACY/QPERP
      GO TO 350
  340 COSP=ONE
      SINP=ZERO
C     USE SPECIAL FAST ROUTINE FOR INNER LOOP FOR 0101
  350 IF(JTYPE-4)370,360,370
  360 CALL SP0101
      GO TO 430
  370 IF(JTYPE-5)390,380,390
  380 CALL SP0111
      GO TO 430
C     BEGIN P LOOP
C     USE SPECIAL FAST ROUTINES FOR INNER LOOPS FOR 0001 AND 0011
  390 IF (JTYPE-3) 400,410,420
  400 CALL SP0001
      GO TO 490
  410 CALL SP0011
      GO TO 430
  420 CALL SP1111
C
  430 CALL ROT2
C
      GO TO (490,490,450,460,470,480),JTYPE
  450 CALL TQ0011
      GO TO 490
  460 CALL TQ0101
      GO TO 490
  470 CALL TQ0111
      GO TO 490
  480 CALL TQ1111
  490 CONTINUE
      GO TO (550,500,510,520,530,540),JTYPE
  500 CALL R30001
      GO TO 550
  510 CALL R30011
      GO TO 550
  520 CALL R30101
      GO TO 550
  530 CALL R30111
      GO TO 550
  540 CALL R31111
C     TEST FOR SHELL COINCIDENCES AND ELIMINATE DUPLICATES
  550 IF (JNEW-INEW) 600,560,600
  560 DO 570 I=17,64
  570 GOUT(I)=ZERO
      DO 580 I=97,128
  580 GOUT(I)=ZERO
      DO 590 I=177,192
  590 GOUT(I)=ZERO
  600 IF (LNEW-KNEW) 630,610,630
  610 DO 620 I=1,16
      GOUT(16*I-14)=ZERO
      GOUT(16*I-13)=ZERO
      GOUT(16*I-12)=ZERO
      GOUT(16*I- 9)=ZERO
      GOUT(16*I- 8)=ZERO
  620 GOUT(16*I- 4)=ZERO
  630 IF (KNEW-INEW) 690,640,690
  640 IF (LNEW-JNEW) 690,650,690
  650 IND=0
      DO 680 I=1,4
      DO 680 J=1,4
      DO 680 K=1,4
      DO 680 L=1,4
      IND=IND+1
      IF (I-K) 670,660,680
  660 IF (J-L) 670,680,680
  670 GOUT(IND)=ZERO
  680 CONTINUE
  690 CALL SHLOUT(NGOUT,GOUT,256)
      IF (IOP(1) .NE. 0) RETURN
  700 CONTINUE
  710 CONTINUE
  720 CONTINUE
  730 CONTINUE
      IF (IFMT.NE.0 .AND. IOP(23).NE.1) WRITE (IOUT,2001) IFMT
C     EMPTY OUTPUT BUFFER IF NO D/F SHELLS.
      I=IOP(67)+IOP(68)
      IF(I.EQ.0)CALL SHLOUT(0,GOUT,256)
      RETURN
      END
      SUBROUTINE FILMAX (ICUT, IPRINT)
C*
C     --------------
C     GAUSSIAN 82
C     U OF T VERSION
C     FEBRUARY 1987
C     --------------
C*
C     FINDS MAXIMUM VALUE OF S AND P COEFFICIENTS.
C     ALSO SETS UP CRITICAL CUTOFFS FOR SHELL.
C     THERE ARE ESSENTIALLY TWO TYPES OF CUTOFFS IN THIS
C     PROGRAM.
C     THE FIRST KIND OF CUTOFFS ARE LIKE THOSE USED IN SGEOM
C     AND IN THE MAIN ROUTINE.  THESE ARE USED TO DETERMINE
C     WHEN SELECTION OF THE INTERNAL AXES CANNOT BE MADE STRICTLY
C     ON NUMERICAL GROUNDS.  WHENEVER THIS HAPPENS, THE PROGRAM
C     WILL MAKE DECISIONS AS INTELLIGENTLY AS POSSIBLE.  THESE
C     CUTOFFS CAN BE LIKENED TO THE KINDS OF NUMERICAL CONSTANTS
C     PRESENT IN DIAGONALIZATION ROUTINES AND SHOULD NOT BE  MESSED
C     WITH UNLESS YOU REALLY KNOW WHAT YOU'RE DOING.
C     THE OTHER CATEGORY OF CUTOFFS HAVE TO DO WITH MAKING THIS
C     PROGRAM AS FAST AS POSSIBLE.  SETTING THESE CUTOFFS TOO
C     LIBERALLY WILL RESULT IN BLAZING SPEED AND WRONG INTEGRALS.
C     A BRIEF DESCRIPTION OF EACH IS IN ORDER:
C
C     VAR(1) ... SPECIFIES THE INTERPOLATION CUTOFF IN THE SP
C                ROUTINES FOR ISML=1.
C     VAR(2) ... SPECIFIES THE INTERPOLATION CUTOFF IN THE SP
C                ROUTINES FOR ISML=2.
C     ERROR1
C     ERROR2 ... USED TO EVALUATE ISML GIVEN THE MAXIMUM CONTRACTION
C                COEFFICIENT AND EXPONENTIAL TERMS THAT APPEAR IN
C                THE INTEGRALS.  IF PREEXP IS GREATER THAN ERROR1,
C                ISML COMES OUT 0, IF BETWEEN ERROR1 AND ERROR2,
C                ISML IS 1.  WHEN PREEXP IS LESS THAN ERROR 2
C                ISML WILL BE TWO AND THE PASS THROUGH THE LOOP
C                WILL BE SKIPPED.
C     EXPCUT ... USED TO BYPASS UNNEEDED EVALUATIONS OF THE EXP
C                PART OF THE INTEGRAL (EXP(-60) IS SMALL).
C     XMAX   ... SPECIFIES THE HIGHEST INTERPOLATABLE VALUE OF T
C                IN THE TABLE.
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NS=#NS, NP=#NP)
C##
      PARAMETER (NS=120, NP=300)
C###
      PARAMETER (ZERO=0.0D0)
C
      INTEGER SHELLA,SHELLN,SHELLT,AOS,SHELLC
C
      COMMON/B/IXYZ(NS),SHELLA(NS),SHELLN(NS),SHELLT(NS),
     1 SHELLC(NS),AOS(NS),NSHELL,MAXTYP,EXX(NP),C1(NP),C2(NP)
      COMMON/MAXC/CMAX(NP),CMAXA(10),CMAXB(10),CMAXC(10),CMAXD(10),
     1 ISMLP(100),ISMLQ,ISML,ERROR1,ERROR2,AUXVAR,VAR(2),
     2 EXPCUT,XMAX,DUM(2),IDUM,IFMT
      COMMON/IO/IN,IOUT,IODUM(215)
C
      DATA FIVE,FIFTEN/5.0D0,15.0D0/, FOURTY/40.0D0/
      DATA TEN/10.0D0/, F19/19.0D0/, F60/60.0D0/
C
 2001 FORMAT('0STANDARD CUTOFFS SELECTED IN SHELL.')
 2002 FORMAT('0TEST CUTOFFS SELECTED IN SHELL.')
 2003 FORMAT('0STO-3G CUTOFFS SELECTED IN SHELL.')
C*
      DO 10 I=1,NSHELL
      L=SHELLA(I)
      N=L+SHELLN(I)-1
      DO 10 J=L,N
      A1=DABS(C1(J))
      A2=DABS(C2(J))
   10 CMAX(J)=DMAX1(A1,A2)
C
C     SELECT CUTOFFS BASED ON ICUT.
C
C...  *TEST* CUTOFFS ... DISABLE ALL CUTOFFS.
      IF (ICUT .EQ. 1) THEN
         VAR(1)=TEN**2
         VAR(2)=TEN**2
         ERROR1=TEN**(-20)
         ERROR2=TEN**(-20)
         EXPCUT=F60
         XMAX=ZERO
         IF (IPRINT .NE. 1) WRITE (IOUT,2002)
C...  STO-3G CUTOFFS (QUICK BUT A LITTLE SLEAZY).
      ELSE IF (ICUT .EQ. 2) THEN
         VAR(1)=FIFTEN
         VAR(2)=FIVE
         ERROR1=TEN**(-4)
         ERROR2=TEN**(-8)
         EXPCUT=F60
         XMAX=FIFTEN
         IF (IPRINT .NE. 1) WRITE (IOUT,2003)
C...  STANDARD CUTOFFS (TRY TO COMPUTE INTEGRALS WITH 10**-8 ACC).
      ELSE
         VAR(1)=FOURTY
         VAR(2)=FOURTY
         ERROR1=TEN**(-10)
         ERROR2=TEN**(-10)
         EXPCUT=F60
         XMAX=F19
         IF (IPRINT .NE. 1) WRITE (IOUT,2001)
      END IF
      RETURN
      END
      SUBROUTINE SINFO
C*
C     --------------
C     U OF T VERSION
C     FEBRUARY 1987
C     --------------
C*
C     OBTAINS INFORMATION ABOUT SHELLS INEW,KNEW,JNEW,LNEW
C     COORDINATES OF ABCD GO INTO COMMON GEOM
C     NUMBER OF GAUSSIANS GO INTO NGA,... IN COMMON SHLINF
C     SHELL ANGULAR QUANTUM NUMBERS LA,... GO INTO COMMON SHLINF
C     GAUSSIAN EXPONENTS GO INTO ARRAYS AG,BG,CG,DG IN COMMON SHLINF
C     GAUSSIAN COEFFICIENTS GO INTO ARRAYS CSA,CPA,... IN COMMON SHLINF
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA)
C     PARAMETER (NS=#NS, NP=#NP)
C##
      PARAMETER (NA= 36)
      PARAMETER (NS=120, NP=300)
C###
      INTEGER SHELLA,SHELLN,SHELLT,AOS,SHELLC
C
      COMMON /A/ IOP(99)
      COMMON /A/ NATOMS,ICHARG,MULTIP,IAN(NA),NAE,NBE,NE,NBASIS,C(NA,3)
      COMMON /A/ CDUM(4),ICDUM(401)
C
      COMMON/B/IXYZ(NS),SHELLA(NS),SHELLN(NS),SHELLT(NS),
     1 SHELLC(NS),AOS(NS),NSHELL,MAXTYP,EXX(NP),C1(NP),C2(NP)
      COMMON/MAXC/CMAX(NP),CMAXA(10),CMAXB(10),CMAXC(10),CMAXD(10),
     1 ISMLP(100),ISMLQ,ISML,ERROR1,ERROR2,DUMM(7),IDUM(2)
      COMMON/GEOM/AX,AY,AZ,BX,BY,BZ,CX,CY,CZ,DX,DY,DZ,RAB,RABSQ,RCD,
     $ RCDSQ,P11,P12,P13,P21,P22,P23,P31,P32,P33,Q11,Q12,Q13,
     $ Q21,Q22,Q23,Q31,Q32,Q33,DUMG(834)
      COMMON/MISC/DUM1(8),DUM2(2),DUM3(14),DUM4(101),DUM5(3),MAB,MCD,
     $ NGANGB,IDUMM(2)
      COMMON/SHLINF/NGA,LA,AG(10),CSA(10),CPA(10),NGB,LB,BG(10),CSB(10),
     $ CPB(10),NGC,LC,CG(10),CSC(10),CPC(10),NGD,LD,DG(10),
     $ CSD(10),CPD(10),ISHELL,JSHELL,KSHELL,LSHELL
      COMMON /SHLCOM/ INEW,JNEW,KNEW,LNEW,IDUMS(4)
C*
C     STARTING LOCATIONS OF SHELLS INEW JNEW KNEW AND LNEW IN LIST
C     OF GAUSSIAN FUNCTIONS
      I=SHELLA(INEW)
      J=SHELLA(JNEW)
      K=SHELLA(KNEW)
      L=SHELLA(LNEW)
C     NUMBERS OF GAUSSIAN FUNCTIONS IN SHELLS INEW JNEW KNEW AND LNEW
      NGA=SHELLN(INEW)
      NGB=SHELLN(JNEW)
      NGC=SHELLN(KNEW)
      NGD=SHELLN(LNEW)
C     COORDINATES OF ATOMS ASSOCIATED WITH SHELLS INEW JNEW KNEW
C     AND LNEW
      N=IXYZ(INEW)
      AX=C(N,1)
      AY=C(N,2)
      AZ=C(N,3)
      N=IXYZ(JNEW)
      BX=C(N,1)
      BY=C(N,2)
      BZ=C(N,3)
      N=IXYZ(KNEW)
      CX=C(N,1)
      CY=C(N,2)
      CZ=C(N,3)
      N=IXYZ(LNEW)
      DX=C(N,1)
      DY=C(N,2)
      DZ=C(N,3)
C     LOOP OVER GAUSSIANS IN EACH SHELL
C     FIRST SHELL INEW
      DO 10 NI=1,NGA
      N=I-1+NI
C     MAXIMUM COEFFICIENT ASSOCIATED WITH SHELL
C     USED TO DETERMINE IF ANY OF THE INTEGRALS ASSOCIATED WITH A SET
C     OF SHELLS IS LARGE ENOUGH TO WARRANT EVALUATION OF THE ENTIRE SET
      CMAXA(NI)=CMAX(N)
C     GAUSSIAN EXPONENTS
      AG(NI)=EXX(N)
C     S COEFFICIENTS
      CSA(NI)=C1(N)
C     P COEFFICIENTS
   10 CPA(NI)=C2(N)
C     REPEAT PROCEDURE FOR SHELLS JNEW KNEW AND LNEW
      DO 20 NJ=1,NGB
      N=J-1+NJ
      CMAXB(NJ)=CMAX(N)
      BG(NJ)=EXX(N)
      CSB(NJ)=C1(N)
   20 CPB(NJ)=C2(N)
      DO 30 NK=1,NGC
      N=K-1+NK
      CMAXC(NK)=CMAX(N)
      CG(NK)=EXX(N)
      CSC(NK)=C1(N)
   30 CPC(NK)=C2(N)
      DO 40 NL=1,NGD
      N=L-1+NL
      CMAXD(NL)=CMAX(N)
      DG(NL)=EXX(N)
      CSD(NL)=C1(N)
   40 CPD(NL)=C2(N)
C     FILL COMMON MISC
      MAB=LA+LB-1
      MCD=LC+LD-1
      NGANGB=NGA*NGB
      RETURN
      END
      SUBROUTINE SGEOM
C*
C     --------------
C     U OF T VERSION
C     FEBRUARY 1987
C     --------------
C*
C     FINDS DIRECTION COSINES OF PENULTIMATE AXES FROM COORDINATES OF AB
C     P11,P12,....ARE DIRECTION COSINES OF AXES AT P.  Z-AXIS ALONG AB
C     Q11,Q12,....ARE DIRECTION COSINES OF AXES AT Q.  Z-AXIS ALONG CD
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C*
      COMMON/GEOM/AX,AY,AZ,BX,BY,BZ,CX,CY,CZ,DX,DY,DZ,RAB,RABSQ,RCD,
     $ RCDSQ,P11,P12,P13,P21,P22,P23,P31,P32,P33,Q11,Q12,Q13,
     $ Q21,Q22,Q23,Q31,Q32,Q33
     $ ,GDUM1(800),ACX,ACY,ACZ,ACY2,COSG,SING,AQX,AQZ,QPERP,QPERP2
     $ ,DUMG(24)
C*
      DATA ZERO/0.0D0/,PT0001/1.0D-4/,ONE/1.0D0/
      DATA TENM12/1.0D-12/,PT5/0.5D0/,PT7/0.7D0/,PT9/0.9D0/
C*
C     FIND RAB ETC.
      ABX=BX-AX
      ABY=BY-AY
      ABZ=BZ-AZ
      RABSQ=ABX*ABX+ABY*ABY+ABZ*ABZ
      RAB=DSQRT(RABSQ)
      CDX=DX-CX
      CDY=DY-CY
      CDZ=DZ-CZ
      RCDSQ=CDX*CDX+CDY*CDY+CDZ*CDZ
      RCD=DSQRT(RCDSQ)
C     FIND DIRECTION COSINES OF AB AND CD. THESE ARE LOCAL Z-AXES.
C     IF INDETERMINATE TAKE ALONG SPACE Z-AXIS
      IF(RAB)20,30,20
   20 P31=ABX/RAB
      P32=ABY/RAB
      P33=ABZ/RAB
      GO TO 40
   30 P31=ZERO
      P32=ZERO
      P33=ONE
   40 IF(RCD)50,60,50
   50 Q31=CDX/RCD
      Q32=CDY/RCD
      Q33=CDZ/RCD
      GO TO 70
   60 Q31=ZERO
      Q32=ZERO
      Q33=ONE
C     FIND LOCAL Y-AXIS AS COMMON PERPENDICULAR TO AB AND CD
C     IF INDETERMINATE TAKE PERPENDICULAR TO AB AND SPACE Z-AXIS
C     IF STILL INDETERMINATE TAKE PERPENDICULAR TO AB AND SPACE X-AXIS
   70 COSG=P31*Q31+P32*Q32+P33*Q33
      COSG=DMIN1(ONE,COSG)
      COSG=DMAX1(-ONE,COSG)
      SING=DSQRT(ONE-COSG*COSG)
C     MODIFIED ROTATION TESTING - CODE FROM GAUSSIAN 76.
      IF(DABS(COSG).LE.PT9)GO TO 80
C     CALCULATE (P-Q)*(P+Q), ETC.
      PPQ1=P31+Q31
      PPQ2=P32+Q32
      PPQ3=P33+Q33
      PMQ1=P31-Q31
      PMQ2=P32-Q32
      PMQ3=P33-Q33
      P21=PMQ2*PPQ3-PPQ2*PMQ3
      P22=PMQ3*PPQ1-PPQ3*PMQ1
      P23=PMQ1*PPQ2-PPQ1*PMQ2
      P2=DSQRT(P21*P21+P22*P22+P23*P23)
      SING=PT5*P2
      IF(SING.LT.TENM12)GO TO 73
      TEMP=ONE/P2
      P21=P21*TEMP
      P22=P22*TEMP
      P23=P23*TEMP
      GO TO 120
   73 IF(DABS(P31)-PT7)110,110,90
   80 P21=(P32*Q33-P33*Q32)/SING
      P22=(P33*Q31-P31*Q33)/SING
      P23=(P31*Q32-P32*Q31)/SING
      GO TO 120
   90 P3333=P33*P33
      P3333=DMIN1(ONE,P3333)
      SINP=DSQRT(ONE-P3333)
      P21=P32/SINP
      P22=-P31/SINP
      P23=ZERO
      GO TO 120
  110 P3131=P31*P31
      P3131=DMIN1(ONE,P3131)
      SINP=DSQRT(ONE-P3131)
      P21=ZERO
      P22=P33/SINP
      P23=-P32/SINP
  120 Q21=P21
      Q22=P22
      Q23=P23
C     FIND DIRECTION COSINES OF LOCAL X-AXES
      P11=P22*P33-P23*P32
      P12=P23*P31-P21*P33
      P13=P21*P32-P22*P31
      Q11=Q22*Q33-Q23*Q32
      Q12=Q23*Q31-Q21*Q33
      Q13=Q21*Q32-Q22*Q31
C     FIND COORDINATES OF C RELATIVE TO LOCAL AXES AT A
      ACX=(CX-AX)*P11+(CY-AY)*P12+(CZ-AZ)*P13
      ACY=(CX-AX)*P21+(CY-AY)*P22+(CZ-AZ)*P23
C     SET ACY=0  IF CLOSE
      IF(DABS(ACY)-PT0001)130,130,140
  130 ACY=ZERO
  140 CONTINUE
      ACZ=(CX-AX)*P31+(CY-AY)*P32+(CZ-AZ)*P33
      ACY2=ACY*ACY
C     *****************************************************************
C     DIRECTION COSINES OF CD LOCAL AXES WITH RESPECT TO AB LOCAL AXES
C     (COSG,0,-SING)  (0,1,0)  (SING,0,COSG)
C     *****************************************************************
      RETURN
      END
      SUBROUTINE PINF
C*
C     --------------
C     GAUSSIAN 82
C     U OF T VERSION
C     FEBRUARY 1987
C     --------------
C*
C     FILLS PGEOM WITH INFORMATION ABOUT P IN PRELIMINARY P-LOOP
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NP=#NP)
C##
      PARAMETER (NP=300)
C###
      PARAMETER (ZERO=0.0D0, ONE=1.0D0)
C
      COMMON/MAXC/CMAX(NP),CMAXA(10),CMAXB(10),CMAXC(10),CMAXD(10),
     1 ISMLP(100),ISMLQ,ISML,ERROR1,ERROR2,AUXVAR,VAR(2),
     2 EXPCUT,XMAX,QQ,THETA,N,IFMT
      COMMON/GEOM/AX,AY,AZ,BX,BY,BZ,CX,CY,CZ,DX,DY,DZ,RAB,RABSQ,RCD,
     $ RCDSQ,P11,P12,P13,P21,P22,P23,P31,P32,P33,Q11,Q12,Q13,
     $ Q21,Q22,Q23,Q31,Q32,Q33
     $ ,GP(100),EP(100),DP00P(100),DP01P(100),DP10P(100),DP11P(100),
     $ APP(100),BPP(100),DUMG(34)
      COMMON/MISC/DUM1(8),DUM2(2),GA,GB,GC,GD,SA,SB,SC,SD,PA,PB,PC,PD,
     $ GAB,GCD,CONST,CONP(100),DUM3(3),MAB,MCD,NGANGB,ITYPE,JTYPE
      COMMON/SHLINF/NGA,LA,AG(10),CSA(10),CPA(10),NGB,LB,BG(10),CSB(10),
     $ CPB(10),NGC,LC,CG(10),CSC(10),CPC(10),NGD,LD,DG(10),
     $ CSD(10),CPD(10),IDUMS(4)
C
C     THRTY4 IS 2*PI**2.5.
      DATA THRTY4/34.9868366552497D0/
C*
      IND=0
      DO 100 I=1,NGA
      GA=AG(I)
      CSAI=CSA(I)
      CPAI=CPA(I)
      DO 90 J=1,NGB
      IND =IND+1
      GB=BG(J)
      GAB=GA+GB
      GP(IND)=GAB
      EAB=ONE/GAB
      EP(IND)=EAB
      GBEAB=GB*EAB
      APP(IND)=GBEAB*RAB
      BPP(IND)=APP(IND)-RAB
      XQQ=GA*GBEAB*RABSQ
      IF(XQQ.LE.EXPCUT)GO TO 4
      ISMLP(IND)=2
      DP00P(IND)=ZERO
      IF(JTYPE-3)90,90,110
  110 DP01P(IND)=ZERO
      CONP(IND)=ZERO
      IF(JTYPE-5)120,120,130
  120 BPP(IND)=BPP(IND)*GAB
      GO TO 90
  130 DP10P(IND)=ZERO
      DP11P(IND)=ZERO
      GO TO 90
    4 XX=DEXP(-XQQ)*EAB
      XXTEST=CMAXA(I)*CMAXB(J)*XX
      ISMLP(IND)=0
      IF(XXTEST.LE.ERROR1)ISMLP(IND)=1
      IF(XXTEST.LE.ERROR2)ISMLP(IND)=2
      X=THRTY4*XX
      DP00P(IND)=X*CSAI*CSB(J)
C     FOR TYPES 0000,0001,0011 ONLY DP00 NEEDED
      IF (JTYPE-3) 90,90,60
   60 DP01P(IND)=X*CSAI*CPB(J)
      IF (JTYPE-5) 70,70,80
   70 CONP(IND)=DP01P(IND)*EAB
      DP00P(IND)=DP00P(IND)*GAB/DP01P(IND)
      BPP(IND)=BPP(IND)*GAB
      GO TO 90
   80 DP10P(IND)=X*CPAI*CSB(J)
      DP11P(IND)=X*CPAI*CPB(J)
      CONP(IND)=DP11P(IND)
      DP00P(IND)=DP00P(IND)/DP11P(IND)
      DP01P(IND)=DP01P(IND)/DP11P(IND)
      DP10P(IND)=DP10P(IND)/DP11P(IND)
   90 CONTINUE
  100 CONTINUE
      RETURN
      END
      SUBROUTINE SP0000
C*
C     --------------
C     GAUSSIAN 82
C     U OF T VERSION
C     FEBRUARY 1987
C     --------------
C*
C     SPECIAL FAST ROUTINE FOR P LOOP FOR 0000
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NP=#NP)
C##
      PARAMETER (NP=300)
C###
      PARAMETER (ZERO=0.0D0, ONE=1.0D0, TWO=2.0D0)
C
      COMMON/MAXC/CMAX(NP),CMAXA(10),CMAXB(10),CMAXC(10),CMAXD(10),
     1 ISMLP(100),ISMLQ,ISML,ERROR1,ERROR2,AUXVAR,VAR(2),
     2 EXPCUT,XMAX,QQ,THETA,N,IFMT
      COMMON/G/G0000,G(159)
      COMMON/GEOM/AX,AY,AZ,BX,BY,BZ,CX,CY,CZ,DX,DY,DZ,RAB,RABSQ,RCD,
     $ RCDSQ,P11,P12,P13,P21,P22,P23,P31,P32,P33,Q11,Q12,Q13,
     $ Q21,Q22,Q23,Q31,Q32,Q33
     $ ,GP(100),EP(100),DP00P(100),DP01P(100),DP10P(100),DP11P(100),
     $ APP(100),BPP(100)
     $ ,ACX,ACY,ACZ,ACY2,COSG,SING,AQX,AQZ,QPERP,QPERP2
     $ ,AP,BP,CQ,DQ,PX,PY,PZ,QX,QY,QZ,RPQ,RPQSQ,PQ1,PQ2,PQ3,
     $ C11,C12,C13,C21,C22,C23,C31,C32,C33
      COMMON/GOUT/GOUT(256)
      COMMON/H/H0000,H0001,H0002,H0003,H(156)
      COMMON/MISC/DP00,DP01,DP10,DP11,DQ00,DQ01,DQ10,DQ11,EAB,ECD,
     $ GA,GB,GC,GD,SA,SB,SC,SD,PA,PB,PC,PD,GAB,GCD,DUM1(101),DUM2(3),
     $ MAB,MCD,NGANGB,IDUMM(2)
      COMMON/SHLINF/NGA,LA,AG(10),CSA(10),CPA(10),NGB,LB,BG(10),CSB(10),
     $ CPB(10),NGC,LC,CG(10),CSC(10),CPC(10),NGD,LD,DG(10),
     $ CSD(10),CPD(10),IDUMS(4)
      COMMON/TABLE/
     $ A0(400),B0(400),C0(400),
     $ A1(400),B1(400),C1(400),
     $ A2(400),B2(400),C2(400),
     $ A3(400),B3(400),C3(400),
     $ A4(400),B4(400),C4(400)
C
      DIMENSION FMT(2)
C*
      DATA TWENTY/20.0D0/
      DATA PIDIV4/0.785398163397448D0/
C*
      G0000=ZERO
      DO 120 K=1,NGC
      GC=CG(K)
      CSCK=CSC(K)
      GCRCDS=GC*RCDSQ
      DO 120 L=1,NGD
      GD=DG(L)
      GCD=GC+GD
      ECD=ONE/GCD
      GDECD=GD*ECD
      XQQ=GDECD*GCRCDS
      XX=ZERO
      IF(XQQ.LE.EXPCUT)XX= DEXP(-XQQ)*ECD
      XXTEST=XX*CMAXC(K)*CMAXD(L)
      ISMLQ=0
      IF(XXTEST.LE.ERROR1)ISMLQ=1
      IF(XXTEST.LE.ERROR2)ISMLQ=2
      IF(ISMLQ.EQ.2)GO TO 120
      CQ=GDECD*RCD
      AQX=ACX+SING*CQ
      AQZ=ACZ+COSG*CQ
      QPERP2=AQX*AQX+ACY2
      H0000=ZERO
      DO 110 I=1,NGANGB
      ISML=ISMLQ+ISMLP(I)
      IF(ISML.GE.2)GO TO 110
      AUXVAR=VAR(ISML+1)
      X=((AQZ-APP(I))**2+QPERP2)/(EP(I)+ECD)
      IF(X-AUXVAR)100,100,90
   90 H0000=H0000+DP00P(I)*DSQRT(PIDIV4/(X*(GP(I)+GCD)))
      GO TO 110
  100 IF(X.GT.XMAX)GO TO 105
      QQ=X*TWENTY
      N=QQ
      THETA=QQ-N
      THETA2=THETA*(THETA-ONE)
      THETA3=THETA2*(THETA-TWO)
      THETA4=THETA2*(THETA+ONE)
      F0=A0(N+1)+THETA*B0(N+1)-THETA3*C0(N+1)+THETA4*C0(N+2)
      H0000=H0000+DP00P(I)*F0/DSQRT(GP(I)+GCD)
      GO TO 110
  105 CALL FMTGEN(FMT,X,1,ICK)
      IFMT=IFMT+1
      H0000=H0000+DP00P(I)*FMT(1)/DSQRT(GP(I)+GCD)
  110 CONTINUE
      G0000=G0000+H0000*CSCK*CSD(L)*XX
  120 CONTINUE
      GOUT(1)=G0000
      RETURN
      END
      SUBROUTINE SP0001
C*
C     --------------
C     GAUSSIAN 82
C     U OF T VERSION
C     FEBRUARY 1987
C     --------------
C*
C     SPECIAL FAST ROUTINE FOR P LOOP FOR 0001
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NP=#NP)
C##
      PARAMETER (NP=300)
C###
      PARAMETER (ZERO=0.0D0, ONE=1.0D0, TWO=2.0D0)
C
      COMMON/MAXC/CMAX(NP),CMAXA(10),CMAXB(10),CMAXC(10),CMAXD(10),
     1 ISMLP(100),ISMLQ,ISML,ERROR1,ERROR2,AUXVAR,VAR(2),
     2 EXPCUT,XMAX,QQ,THETA,N,IFMT
      COMMON/G/G0000,G0001,G0002,G0003,GG(156)
      COMMON/GEOM/GDUM1(34)
     $ ,GP(100),EP(100),DP00P(100),DP01P(100),DP10P(100),DP11P(100),
     $ APP(100),BPP(100)
     $ ,ACX,ACY,ACZ,ACY2,COSG,SING,AQX,AQZ,QPERP,QPERP2
     $ ,AP,BP,CQ,DQ,PX,PY,PZ,QX,QY,QZ,RPQ,RPQSQ,PQ1,PQ2,PQ3,
     $ C11,C12,C13,C21,C22,C23,C31,C32,C33
      COMMON/GOUT/GOUT1,GOUT2,GOUT3,GOUT4,GX(252)
      COMMON/H/H0000,H0001,H0002,H0003,H(156)
      COMMON/MISC/DP00,DP01,DP10,DP11,DQ00,DQ01,DQ10,DQ11,EAB,ECD,
     $ GA,GB,GC,GD,SA,SB,SC,SD,PA,PB,PC,PD,GAB,GCD,DUM1(101),DUM2,COSP,
     $ SINP,MAB,MCD,NGANGB,IDUMM(2)
      COMMON/TABLE/
     $ A0(400),B0(400),C0(400),
     $ A1(400),B1(400),C1(400),
     $ A2(400),B2(400),C2(400),
     $ A3(400),B3(400),C3(400),
     $ A4(400),B4(400),C4(400)
C
      DIMENSION FMT(2)
C*
      DATA PT5/0.5D0/, TWENTY/20.0D0/
      DATA PIDIV4/0.785398163397448D0/
C*
      H0000=ZERO
      H0001=ZERO
      H0003=ZERO
      DO 80 I=1,NGANGB
      ISML=ISMLQ+ISMLP(I)
      IF(ISML.GE.2)GO TO 80
      AUXVAR=VAR(ISML+1)
      PQAB=AQZ-APP(I)
      G=ONE/(EP(I)+ECD)
      X=(PQAB*PQAB+QPERP2)*G
      IF(X-AUXVAR)60,60,50
   50 Y0=DP00P(I)*DSQRT(PIDIV4/(X*(GP(I)+GCD)))
      Y1=PT5*Y0/X
      GO TO 70
   60 Y=DP00P(I)/DSQRT(GP(I)+GCD)
      IF(X.GT.XMAX)GO TO 65
      QQ=X*TWENTY
      N=QQ
      THETA=QQ-N
      THETA2=THETA*(THETA-ONE)
      THETA3=THETA2*(THETA-TWO)
      THETA4=THETA2*(THETA+ONE)
      Y0=(A0(N+1)+THETA*B0(N+1)-THETA3*C0(N+1)+THETA4*C0(N+2))*Y
      Y1=(A1(N+1)+THETA*B1(N+1)-THETA3*C1(N+1)+THETA4*C1(N+2))*Y
      GO TO 70
   65 CALL FMTGEN(FMT,X,2,ICK)
      IFMT=IFMT+1
      Y0=FMT(1)*Y
      Y1=FMT(2)*Y
   70 U=G*Y1
      H0000=H0000+Y0
      H0001=H0001+U
      H0003=H0003-U*PQAB
   80 CONTINUE
      H0001=H0001*ECD*QPERP
      H0003=H0003*ECD
      X=DQ*H0000
      G0001=H0001*COSP+X*SING
      G0002=H0001*SINP
      G0003=H0003+X*COSG
      GOUT1=GOUT1+DQ00*H0000
      GOUT2=GOUT2+DQ01*G0001
      GOUT3=GOUT3+DQ01*G0002
      GOUT4=GOUT4+DQ01*G0003
      RETURN
      END
      SUBROUTINE SP0011
C*
C     --------------
C     GAUSSIAN 82
C     U OF T VERSION
C     FEBRUARY 1987
C     --------------
C*
C     SPECIAL FAST ROUTINE FOR P LOOP FOR 0011
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NP=#NP)
C##
      PARAMETER (NP=300)
C###
      PARAMETER (ZERO=0.0D0, ONE=1.0D0, TWO=2.0D0)
C
      COMMON/MAXC/CMAX(NP),CMAXA(10),CMAXB(10),CMAXC(10),CMAXD(10),
     1 ISMLP(100),ISMLQ,ISML,ERROR1,ERROR2,AUXVAR,VAR(2),
     2 EXPCUT,XMAX,QQ,THETA,N,IFMT
      COMMON/GEOM/GDUM1(34)
     $ ,GP(100),EP(100),DP00P(100),DP01P(100),DP10P(100),DP11P(100),
     $ APP(100),BPP(100)
     $ ,ACX,ACY,ACZ,ACY2,COSG,SING,AQX,AQZ,QPERP,QPERP2
     $ ,AP,BP,CQ,DQ,PX,PY,PZ,QX,QY,QZ,RPQ,RPQSQ,PQ1,PQ2,PQ3,
     $ C11,C12,C13,C21,C22,C23,C31,C32,C33
      COMMON/H/
     $ H0000,H0001,H0002,H0003,H0011,H0012,H0013,H0022,H0023,H0033,
     $ H(150)
      COMMON/MISC/DUM1(8),EAB,ECD,GA,GB,GC,GD,SA,SB,SC,SD,PA,PB,PC,PD,
     $ GAB,GCD,DUM2(101),C,DUM3(2),MAB,MCD,NGANGB,IDUMM(2)
      COMMON/TABLE/
     $ A0(400),B0(400),C0(400),
     $ A1(400),B1(400),C1(400),
     $ A2(400),B2(400),C2(400),
     $ A3(400),B3(400),C3(400),
     $ A4(400),B4(400),C4(400)
C
      DIMENSION FMT(3)
C*
      DATA PT5/0.5D0/, ONEPT5/1.5D0/, TWENTY/20.0D0/
      DATA PIDIV4/0.785398163397448D0/
C*
      H0000=ZERO
      H0001=ZERO
      H0003=ZERO
      H0011=ZERO
      H0013=ZERO
      H0033=ZERO
      DO 80 I=1,NGANGB
      ISML=ISMLQ+ISMLP(I)
      IF(ISML.GE.2)GO TO 80
      AUXVAR=VAR(ISML+1)
      PQAB=AQZ-APP(I)
      PQAB2=PQAB*PQAB
      G=ONE/(EP(I)+ECD)
      X=G*(PQAB2+QPERP2)
      G=G*ECD
      IF(X-AUXVAR)60,60,50
   50 F0=DP00P(I)*DSQRT(PIDIV4/(X*(GP(I)+GCD)))
      GTX=G/X
      F1=PT5*F0*GTX
      F2=ONEPT5*F1*GTX
      GO TO 70
   60 Y=DP00P(I)/DSQRT(GP(I)+GCD)
      GY=G*Y
      GGY=G*GY
      IF(X.GT.XMAX)GO TO 65
      QQ=X*TWENTY
      N=QQ
      THETA=QQ-N
      THETA2=THETA*(THETA-ONE)
      THETA3=THETA2*(THETA-TWO)
      THETA4=THETA2*(THETA+ONE)
      F0=(A0(N+1)+THETA*B0(N+1)-THETA3*C0(N+1)+THETA4*C0(N+2))*Y
      F1=(A1(N+1)+THETA*B1(N+1)-THETA3*C1(N+1)+THETA4*C1(N+2))*GY
      F2=(A2(N+1)+THETA*B2(N+1)-THETA3*C2(N+1)+THETA4*C2(N+2))*GGY
      GO TO 70
   65 CALL FMTGEN(FMT,X,3,ICK)
      IFMT=IFMT+1
      F0=FMT(1)*Y
      F1=FMT(2)*GY
      F2=FMT(3)*GGY
   70 H0000=H0000+F0
      H0001=H0001+F1
      H0003=H0003-F1*PQAB
      H0011=H0011+F2
      H0013=H0013-F2*PQAB
      H0033=H0033+F2*PQAB2
   80 CONTINUE
      H0022=PT5*ECD*(H0000-H0001)
      H0001=H0001*QPERP
      H0011=H0011*QPERP2+H0022
      H0013=H0013*QPERP
      H0033=H0033+H0022
      RETURN
      END
      SUBROUTINE SP0101
C*
C     --------------
C     GAUSSIAN 82
C     U OF T VERSION
C     FEBRUARY 1987
C     --------------
C*
C     SPECIAL FAST ROUTINE FOR P LOOP FOR 0101
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NP=#NP)
C##
      PARAMETER (NP=300)
C###
      PARAMETER (ZERO=0.0D0, ONE=1.0D0, TWO=2.0D0)
C
      COMMON/MAXC/CMAX(NP),CMAXA(10),CMAXB(10),CMAXC(10),CMAXD(10),
     1 ISMLP(100),ISMLQ,ISML,ERROR1,ERROR2,AUXVAR,VAR(2),
     2 EXPCUT,XMAX,QQ,THETA,N,IFMT
      COMMON/GEOM/GDUM1(34)
     $ ,GP(100),EP(100),DP00P(100),DP01P(100),DP10P(100),DP11P(100),
     $ APP(100),BPP(100)
     $ ,ACX,ACY,ACZ,ACY2,COSG,SING,AQX,AQZ,QPERP,QPERP2
     $ ,AP,BP,CQ,DQ,PX,PY,PZ,QX,QY,QZ,RPQ,RPQSQ,PQ1,PQ2,PQ3,
     $ C11,C12,C13,C21,C22,C23,C31,C32,C33
      COMMON/H/
     $ H0000,H0001,H0002,H0003,H0011,H0012,H0013,H0022,H0023,H0033,
     $ H0100,H0101,H0102,H0103,H0111,H0112,H0113,H0122,H0123,H0133,
     $ H0200,H0201,H0202,H0203,H0211,H0212,H0213,H0222,H0223,H0233,
     $ H0300,H0301,H0302,H0303,H0311,H0312,H0313,H0322,H0323,H0333,
     $ H(120)
      COMMON/MISC/DUM1(8),EAB,ECD,GA,GB,GC,GD,SA,SB,SC,SD,PA,PB,PC,PD,
     $ GAB,GCD,CONST,CONP(100),C,DUM2(2),MAB,MCD,NGANGB,IDUMM(2)
      COMMON/TABLE/
     $ A0(400),B0(400),C0(400),
     $ A1(400),B1(400),C1(400),
     $ A2(400),B2(400),C2(400),
     $ A3(400),B3(400),C3(400),
     $ A4(400),B4(400),C4(400)
C
      DIMENSION FMT(3)
C*
      DATA PT5/0.5D0/, ONEPT5/1.5D0/, TWENTY/20.0D0/
      DATA PIDIV4/0.785398163397448D0/
C*
      H0000=ZERO
      H0001=ZERO
      H0003=ZERO
      H0100=ZERO
      H0101=ZERO
      H0103=ZERO
      H0300=ZERO
      H0301=ZERO
      H0303=ZERO
C     BEGIN P LOOP
      DO 80 I=1,NGANGB
      ISML=ISMLQ+ISMLP(I)
      IF(ISML.GE.2)GO TO 80
      AUXVAR=VAR(ISML+1)
      EAB=EP(I)
      DP00=DP00P(I)
      BP=BPP(I)
      PQAB=AQZ-APP(I)
      PQAB2=PQAB*PQAB
      G=ONE/(EP(I)+ECD)
      X=(PQAB2+QPERP2)*G
      IF(X-AUXVAR)60,60,50
   50 F0=CONP(I)*DSQRT(PIDIV4/(X*(GP(I)+GCD)))
      GTX=G/X
      F1=PT5*F0*GTX
      F2=ONEPT5*F1*GTX
      GO TO 70
   60 Y=CONP(I)/DSQRT(GP(I)+GCD)
      GY=G*Y
      GGY=G*GY
      IF(X.GT.XMAX)GO TO 65
      QQ=X*TWENTY
      N=QQ
      THETA=QQ-N
      THETA2=THETA*(THETA-ONE)
      THETA3=THETA2*(THETA-TWO)
      THETA4=THETA2*(THETA+ONE)
      F0=(A0(N+1)+THETA*B0(N+1)-THETA3*C0(N+1)+THETA4*C0(N+2))*Y
      F1=(A1(N+1)+THETA*B1(N+1)-THETA3*C1(N+1)+THETA4*C1(N+2))*GY
      F2=(A2(N+1)+THETA*B2(N+1)-THETA3*C2(N+1)+THETA4*C2(N+2))*GGY
      GO TO 70
   65 CALL FMTGEN(FMT,X,3,ICK)
      IFMT=IFMT+1
      F0=FMT(1)*Y
      F1=FMT(2)*GY
      F2=FMT(3)*GGY
   70 CONTINUE
      G03=-PQAB*F1
      H0000=H0000+F0 *DP00
      H0001=H0001+F1 *DP00
      H0003=H0003+G03*DP00
      H0100=H0100-F1
      H0101=H0101-F2
      H0103=H0103+PQAB*F2
      H0300=H0300-G03+BP*F0
      H0301=H0301+BP*F1
      H0303=H0303-PQAB2*F2+BP*G03
   80 CONTINUE
      X=QPERP*ECD
      H0001=H0001*X
      H0003=H0003*ECD
      H0202=-PT5*ECD*H0100
      H0100=H0100*QPERP
      H0101=H0101*QPERP2*ECD
      H0103=H0103*X
      H0301=H0301*X
      H0303=H0303*ECD
      H0301=H0301+H0103
      H0101=H0101+H0202
      H0303=H0303+H0202
      RETURN
      END
      SUBROUTINE SP0111
C*
C     --------------
C     GAUSSIAN 82
C     U OF T VERSION
C     FEBRUARY 1987
C     --------------
C*
C     SPECIAL FAST ROUTINE FOR P LOOP FOR 0111
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NP=#NP)
C##
      PARAMETER (NP=300)
C###
      PARAMETER (ZERO=0.0D0, ONE=1.0D0, TWO=2.0D0)
C
      COMMON/MAXC/CMAX(NP),CMAXA(10),CMAXB(10),CMAXC(10),CMAXD(10),
     1 ISMLP(100),ISMLQ,ISML,ERROR1,ERROR2,AUXVAR,VAR(2),
     2 EXPCUT,XMAX,QQ,THETA,N,IFMT
      COMMON/GEOM/AX,AY,AZ,BX,BY,BZ,CX,CY,CZ,DX,DY,DZ,RAB,RABSQ,RCD,
     $ RCDSQ,P11,P12,P13,P21,P22,P23,P31,P32,P33,Q11,Q12,Q13,
     $ Q21,Q22,Q23,Q31,Q32,Q33
     $ ,GP(100),EP(100),DP00P(100),DP01P(100),DP10P(100),DP11P(100),
     $ APP(100),BPP(100)
     $ ,ACX,ACY,ACZ,ACY2,COSG,SING,AQX,AQZ,QPERP,QPERP2
     $ ,AP,BP,CQ,DQ,PX,PY,PZ,QX,QY,QZ,RPQ,RPQSQ,PQ1,PQ2,PQ3,
     $ C11,C12,C13,C21,C22,C23,C31,C32,C33
      COMMON/H/
     $ H0000,H0001,H0002,H0003,H0011,H0012,H0013,H0022,H0023,H0033,
     $ H0100,H0101,H0102,H0103,H0111,H0112,H0113,H0122,H0123,H0133,
     $ H0200,H0201,H0202,H0203,H0211,H0212,H0213,H0222,H0223,H0233,
     $ H0300,H0301,H0302,H0303,H0311,H0312,H0313,H0322,H0323,H0333,
     $ H(120)
      COMMON/MISC/DUM1(8),EAB,ECD,GA,GB,GC,GD,SA,SB,SC,SD,PA,PB,PC,PD,
     $ GAB,GCD,CONST,CONP(100),C,DUM2(2),MAB,MCD,NGANGB,IDUMM(2)
      COMMON/TABLE/
     $ A0(400),B0(400),C0(400),
     $ A1(400),B1(400),C1(400),
     $ A2(400),B2(400),C2(400),
     $ A3(400),B3(400),C3(400),
     $ A4(400),B4(400),C4(400)
C*
      DIMENSION FMT(4)
C*
      DATA PT5/0.5D0/, ONEPT5/1.5D0/, TWOPT5/2.5D0/, TWENTY/20.0D0/
      DATA PIDIV4/0.785398163397448D0/
C*
      X1=ZERO
      X2=ZERO
      X3=ZERO
      X4=ZERO
      X5=ZERO
      X6=ZERO
      Y1=ZERO
      Y2=ZERO
      Y3=ZERO
      Y4=ZERO
      Y5=ZERO
      Y6=ZERO
      Z1=ZERO
      Z2=ZERO
      Z3=ZERO
      Z4=ZERO
      Z5=ZERO
      Z6=ZERO
      Z7=ZERO
      Z8=ZERO
      Z9=ZERO
C     BEGIN P LOOP
      DO 80 I=1,NGANGB
      ISML=ISMLQ+ISMLP(I)
      IF(ISML.GE.2)GO TO 80
      AUXVAR=VAR(ISML+1)
      EAB=EP(I)
      DP00=DP00P(I)
      BP=BPP(I)
      PQAB=AQZ-APP(I)
      PQAB2=PQAB*PQAB
      G=ONE/(EAB+ECD)
      X=G*(PQAB2+QPERP2)
      IF(X-AUXVAR)60,60,50
   50 F0=CONP(I)*DSQRT(PIDIV4/(X*(GP(I)+GCD)))
      GTX=G/X
      F1=PT5*F0*GTX
      F2=ONEPT5*F1*GTX
      F3=TWOPT5*F2*GTX
      GO TO 70
   60 Y=CONP(I)/DSQRT(GP(I)+GCD)
      GY=G*Y
      GGY=G*GY
      GGGY=G*GGY
      IF(X.GT.XMAX)GO TO 65
      QQ=X*TWENTY
      N=QQ
      THETA=QQ-N
      THETA2=THETA*(THETA-ONE)
      THETA3=THETA2*(THETA-TWO)
      THETA4=THETA2*(THETA+ONE)
      F0=(A0(N+1)+THETA*B0(N+1)-THETA3*C0(N+1)+THETA4*C0(N+2))*Y
      F1=(A1(N+1)+THETA*B1(N+1)-THETA3*C1(N+1)+THETA4*C1(N+2))*GY
      F2=(A2(N+1)+THETA*B2(N+1)-THETA3*C2(N+1)+THETA4*C2(N+2))*GGY
      F3=(A3(N+1)+THETA*B3(N+1)-THETA3*C3(N+1)+THETA4*C3(N+2))*GGGY
      GO TO 70
   65 CALL FMTGEN(FMT,X,4,ICK)
      IFMT=IFMT+1
      F0=FMT(1)*Y
      F1=FMT(2)*GY
      F2=FMT(3)*GGY
      F3=FMT(4)*GGGY
   70 CONTINUE
      F1PQAB=F1*PQAB
      F2PQAB=F2*PQAB
      F3PQAB=F3*PQAB
      F2PQA2=F2*PQAB2
      X1=X1+F0    *DP00
      X2=X2+F1    *DP00
      X3=X3+F2    *DP00
      X4=X4+F1PQAB*DP00
      X5=X5+F2PQAB*DP00
      X6=X6+F2PQA2*DP00
      Y1=Y1+F0    *BP
      Y2=Y2+F1    *BP
      Y3=Y3+F2    *BP
      Y4=Y4+F1PQAB*BP
      Y5=Y5+F2PQAB*BP
      Y6=Y6+F2PQA2*BP
      Z1=Z1+F1
      Z2=Z2+F2
      Z3=Z3+F3
      Z4=Z4+F1PQAB
      Z5=Z5+F2PQAB
      Z6=Z6+F3PQAB
      Z7=Z7+F2PQA2
      Z8=Z8+F3*PQAB2
      Z9=Z9+F3PQAB*PQAB2
   80 CONTINUE
      HECD=PT5*ECD
      ECD2=ECD*ECD
      QECD=QPERP*ECD
      QECD2=QPERP*ECD2
      Q2ECD=QPERP2*ECD
      Q2ECD2=QPERP2*ECD2
      H0000=X1
      H0001=QECD*X2
      H0003=-ECD*X4
      H0022=HECD*(X1-ECD*X2)
      H0011=H0022+Q2ECD2*X3
      H0013=-QECD2*X5
      H0033=H0022+ECD2*X6
      H0100=-QPERP*Z1
      H0300=Z4+Y1
      H0202=HECD*Z1
      H0101=H0202-Q2ECD*Z2
      H0103=QECD*Z5
      H0301=H0103+QECD*Y2
      H0303=H0202-ECD*Z7-ECD*Y4
      H0212=PT5*QECD2*Z2
      H0223=-PT5*ECD2*Z5
      H0122=H0212-QPERP*H0202
      H0322=H0223+HECD*(H0300-ECD*Y2)
      H0113=H0223+Q2ECD2*Z6
      H0313=H0212-QECD2*(Z8+Y5)
      H0111=H0122+H0212+H0212-Q2ECD2*QPERP*Z3
      H0133=H0122-QECD2*Z8
      H0311=H0322+Q2ECD2*(Z6+Y3)
      H0333=H0322+H0223+H0223+ECD2*(Z9+Y6)
      RETURN
      END
      SUBROUTINE SP1111
C*
C     --------------
C     GAUSSIAN 82
C     U OF T VERSION
C     NOVEMBER 1988
C     --------------
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NP=#NP)
C##
      PARAMETER (NP=300)
C###
      PARAMETER (ZERO=0.0D0, ONE=1.0D0, TWO=2.0D0)
C
      COMMON/MAXC/CMAX(NP),CMAXA(10),CMAXB(10),CMAXC(10),CMAXD(10),
     1 ISMLP(100),ISMLQ,ISML,ERROR1,ERROR2,AUXVAR,VAR(2),
     2 EXPCUT,XMAX,QQ,THETA,N,IFMT
      COMMON/GEOM/AX,AY,AZ,BX,BY,BZ,CX,CY,CZ,DX,DY,DZ,RAB,RABSQ,RCD,
     $ RCDSQ,P11,P12,P13,P21,P22,P23,P31,P32,P33,Q11,Q12,Q13,
     $ Q21,Q22,Q23,Q31,Q32,Q33
     $ ,GP(100),EP(100),DP00P(100),DP01P(100),DP10P(100),DP11P(100),
     $ APP(100),BPP(100)
     $ ,ACX,ACY,ACZ,ACY2,COSG,SING,AQX,AQZ,QPERP,QPERP2
     $ ,AP,BP,CQ,DQ,PX,PY,PZ,QX,QY,QZ,RPQ,RPQSQ,PQ1,PQ2,PQ3,
     $ C11,C12,C13,C21,C22,C23,C31,C32,C33
      COMMON/H/
     $ H0000,H0001,H0002,H0003,H0011,H0012,H0013,H0022,H0023,H0033,
     $ H0100,H0101,H0102,H0103,H0111,H0112,H0113,H0122,H0123,H0133,
     $ H0200,H0201,H0202,H0203,H0211,H0212,H0213,H0222,H0223,H0233,
     $ H0300,H0301,H0302,H0303,H0311,H0312,H0313,H0322,H0323,H0333,
     $ H1000,H1001,H1002,H1003,H1011,H1012,H1013,H1022,H1023,H1033,
     $ H1100,H1101,H1102,H1103,H1111,H1112,H1113,H1122,H1123,H1133,
     $ H1200,H1201,H1202,H1203,H1211,H1212,H1213,H1222,H1223,H1233,
     $ H1300,H1301,H1302,H1303,H1311,H1312,H1313,H1322,H1323,H1333,
     $ H2000,H2001,H2002,H2003,H2011,H2012,H2013,H2022,H2023,H2033,
     $ H2100,H2101,H2102,H2103,H2111,H2112,H2113,H2122,H2123,H2133,
     $ H2200,H2201,H2202,H2203,H2211,H2212,H2213,H2222,H2223,H2233,
     $ H2300,H2301,H2302,H2303,H2311,H2312,H2313,H2322,H2323,H2333,
     $ H3000,H3001,H3002,H3003,H3011,H3012,H3013,H3022,H3023,H3033,
     $ H3100,H3101,H3102,H3103,H3111,H3112,H3113,H3122,H3123,H3133,
     $ H3200,H3201,H3202,H3203,H3211,H3212,H3213,H3222,H3223,H3233,
     $ H3300,H3301,H3302,H3303,H3311,H3312,H3313,H3322,H3323,H3333
      COMMON/MISC/DP00,DP01,DP10,DP11,DQ00,DQ01,DQ10,DQ11,EAB,ECD,GA,GB,
     $ GC,GD,SA,SB,SC,SD,PA,PB,PC,PD,GAB,GCD,CONST,CONP(100),DUM1(3),
     $ MAB,MCD,NGANGB,IDUMM(2)
      COMMON/TABLE/
     $ AA(400),BA(400),CA(400),
     $ AB(400),BB(400),CB(400),
     $ AC(400),BC(400),CC(400),
     $ AD(400),BD(400),CD(400),
     $ AE(400),BE(400),CE(400)
C
      DIMENSION FMT(5)
C*
      DATA PT25/0.25D0/, PT5/0.5D0/, ONEPT5/1.5D0/,
     1 TWOPT5/2.5D0/, THREE/3.0D0/, THRPT5/3.5D0/,
     2 TWENTY/20.0D0/
      DATA PIDIV4/0.785398163397448D0/
C*
      X1=ZERO
      X2=ZERO
      X3=ZERO
      X4=ZERO
      X5=ZERO
      X6=ZERO
      Y1=ZERO
      Y2=ZERO
      Y3=ZERO
      Y4=ZERO
      Y5=ZERO
      Y6=ZERO
      Z1=ZERO
      Z2=ZERO
      Z3=ZERO
      Z4=ZERO
      Z5=ZERO
      Z6=ZERO
      Z7=ZERO
      Z8=ZERO
      Z9=ZERO
      V1=ZERO
      V2=ZERO
      V3=ZERO
      V4=ZERO
      V5=ZERO
      V6=ZERO
      W1=ZERO
      W2=ZERO
      W3=ZERO
      W4=ZERO
      W5=ZERO
      W6=ZERO
      W7=ZERO
      W8=ZERO
      W9=ZERO
      S1=ZERO
      S2=ZERO
      S3=ZERO
      S4=ZERO
      S6=ZERO
      S7=ZERO
      S8=ZERO
      S9=ZERO
      S10=ZERO
      S11=ZERO
      S12=ZERO
      S13=ZERO
      S14=ZERO
      T2=ZERO
      T3=ZERO
      T4=ZERO
      T5=ZERO
      T6=ZERO
      T7=ZERO
      T8=ZERO
      T9=ZERO
      T10=ZERO
      T11=ZERO
      T12=ZERO
      T13=ZERO
      T14=ZERO
      C1=ZERO
      C2=ZERO
      C3=ZERO
      C4=ZERO
      C5=ZERO
      C6=ZERO
      DO 90  IND=1,NGANGB
      ISML=ISMLQ+ISMLP(IND)
      IF(ISML.GE.2)GO TO 90
      AUXVAR=VAR(ISML+1)
      EAB=EP(IND)
      DP00=DP00P(IND)
      DP01=DP01P(IND)
      DP10=DP10P(IND)
      AP=APP(IND)
      BP=BPP(IND)
      PQAB=AQZ-AP
      PQAB2=PQAB*PQAB
      G=ONE/(EAB+ECD)
      X=G*(QPERP2+PQAB2)
      IF(X-AUXVAR)60,60,50
   50 F0=DSQRT(PIDIV4/(X*(GP(IND)+GCD)))*CONP(IND)
      GTX=G/X
      F1=PT5*F0*GTX
      F2=ONEPT5*F1*GTX
      F3=TWOPT5*F2*GTX
      F4=THRPT5*F3*GTX
      GO TO 70
   60 Y=CONP(IND)/DSQRT(GP(IND)+GCD)
      GY=G*Y
      GGY=G*GY
      GGGY=G*GGY
      IF(X.GT.XMAX)GO TO 65
      QQ=X*TWENTY
      N=QQ
      THETA=QQ-N
      THETA2=THETA*(THETA-ONE)
      THETA3=THETA2*(THETA-TWO)
      THETA4=THETA2*(THETA+ONE)
      F0=(AA(N+1)+THETA*BA(N+1)-THETA3*CA(N+1)+THETA4*CA(N+2))*Y
      F1=(AB(N+1)+THETA*BB(N+1)-THETA3*CB(N+1)+THETA4*CB(N+2))*GY
      F2=(AC(N+1)+THETA*BC(N+1)-THETA3*CC(N+1)+THETA4*CC(N+2))*GGY
      F3=(AD(N+1)+THETA*BD(N+1)-THETA3*CD(N+1)+THETA4*CD(N+2))*GGGY
      F4=(AE(N+1)+THETA*BE(N+1)-THETA3*CE(N+1)+THETA4*CE(N+2))*GGGY*G
      GO TO 70
   65 CALL FMTGEN(FMT,X,5,ICK)
      IFMT=IFMT+1
      F0=FMT(1)*Y
      F1=FMT(2)*GY
      F2=FMT(3)*GGY
      F3=FMT(4)*GGGY
      F4=FMT(5)*GGGY*G
   70 APBP=AP*BP
      EAB2=EAB*EAB
      BPDP01=BP*DP01
      APDP10=AP*DP10
      EDP01=EAB*DP01
      EDP10=EAB*DP10
      F1PQAB=F1*PQAB
      F2PQAB=F2*PQAB
      F3PQAB=F3*PQAB
      F4PQAB=F4*PQAB
      F1PQA2=F1*PQAB2
      F2PQA2=F2*PQAB2
      F3PQA2=F3*PQAB2
      F4PQA2=F4*PQAB2
      F2PQA3=F2PQA2*PQAB
      F3PQA3=F3PQA2*PQAB
      F4PQA3=F4PQA2*PQAB
      X1=X1+F0    *DP00
      X2=X2+F1    *DP00
      X3=X3+F2    *DP00
      X4=X4+F1PQAB*DP00
      X5=X5+F2PQAB*DP00
      X6=X6+F2PQA2*DP00
      Z1=Z1+F1          *EDP01
      Z2=Z2+F2          *EDP01
      Z3=Z3+F3          *EDP01
      Z4=Z4+F1PQAB      *EDP01
      Z5=Z5+F2PQAB      *EDP01
      Z6=Z6+F3PQAB      *EDP01
      Z7=Z7+F2PQA2      *EDP01
      Z8=Z8+F3PQA2      *EDP01
      Z9=Z9+F3PQA3      *EDP01
      W1=W1+F1          *EDP10
      W2=W2+F2          *EDP10
      W3=W3+F3          *EDP10
      W4=W4+F1PQAB      *EDP10
      W5=W5+F2PQAB      *EDP10
      W6=W6+F3PQAB      *EDP10
      W7=W7+F2PQA2      *EDP10
      W8=W8+F3PQA2      *EDP10
      W9=W9+F3PQA3      *EDP10
      S1=S1+F0    *EAB
      S2=S2+F1    *EAB
      S3=S3+F2    *EAB
      S4=S4+F3    *EAB
      S6=S6+F1PQAB*EAB
      S7=S7+F2PQAB*EAB
      S8=S8+F3PQAB*EAB
      S9=S9+F1PQA2*EAB
      S10=S10+F2PQA2*EAB
      S11=S11+F3PQA2*EAB
      S12=S12+F2PQA3*EAB
      S13=S13+F3PQA3*EAB
      S14=S14+F3PQA3*PQAB*EAB
      T2=T2+F1    *EAB2
      T3=T3+F2    *EAB2
      T4=T4+F3    *EAB2
      T5=T5+F4    *EAB2
      T6=T6+F2PQAB*EAB2
      T7=T7+F3PQAB*EAB2
      T8=T8+F4PQAB*EAB2
      T9=T9+F2PQA2*EAB2
      T10=T10+F3PQA2*EAB2
      T11=T11+F4PQA2*EAB2
      T12=T12+F3PQA3*EAB2
      T13=T13+F4PQA3*EAB2
      T14=T14+F4PQA3*PQAB*EAB2
      IF (RABSQ) 80,90,80
   80 CONTINUE
      Y1=Y1+F0    *BPDP01
      Y2=Y2+F1    *BPDP01
      Y3=Y3+F2    *BPDP01
      Y4=Y4+F1PQAB*BPDP01
      Y5=Y5+F2PQAB*BPDP01
      Y6=Y6+F2PQA2*BPDP01
      V1=V1+F0    *APDP10
      V2=V2+F1    *APDP10
      V3=V3+F2    *APDP10
      V4=V4+F1PQAB*APDP10
      V5=V5+F2PQAB*APDP10
      V6=V6+F2PQA2*APDP10
      C1=C1+F0    *APBP
      C2=C2+F1    *APBP
      C3=C3+F2    *APBP
      C4=C4+F1PQAB*APBP
      C5=C5+F2PQAB*APBP
      C6=C6+F2PQA2*APBP
   90 CONTINUE
      A1=AQZ*S2-S6
      A2=AQZ*S3-S7
      A3=AQZ*S4-S8
      A4=AQZ*S6-S9
      A5=AQZ*S7-S10
      A6=AQZ*S8-S11
      A8=AQZ*S10-S12
      A9=AQZ*S11-S13
      A10=AQZ*S13-S14
      BQZ=AQZ-RAB
      B1=BQZ*S2-S6
      B2=BQZ*S3-S7
      B3=BQZ*S4-S8
      B4=BQZ*S6-S9
      B5=BQZ*S7-S10
      B6=BQZ*S8-S11
      B8=BQZ*S10-S12
      B9=BQZ*S11-S13
      B10=BQZ*S13-S14
      HECD=PT5*ECD
      ECD2=ECD*ECD
      HECD2=PT5*ECD2
      QECD=QPERP*ECD
      HQECD=PT5*QECD
      QECD2=QPERP*ECD2
      HQECD2=PT5*QECD2
      Q2ECD=QPERP2*ECD
      Q3ECD=QPERP*Q2ECD
      Q2ECD2=QPERP2*ECD2
      Q3ECD2=Q2ECD2*QPERP
      H0000=X1
      H0001=QECD*X2
      H0003=-ECD*X4
      H0022=HECD*(X1-ECD*X2)
      H0011=H0022+Q2ECD2*X3
      H0013=-QECD2*X5
      H0033=H0022+ECD2*X6
      H0100=-QPERP*Z1
      H0300=Z4+Y1
      H0202=HECD*Z1
      H0101=H0202-Q2ECD*Z2
      H0103=QECD*Z5
      H0301=H0103+QECD*Y2
      H0303=H0202-ECD*Z7-ECD*Y4
      H0212=HQECD2*Z2
      H0223=-HECD2*Z5
      H0122=H0212-QPERP*H0202
      H0322=H0223+HECD*(H0300-ECD*Y2)
      H0113=H0223+Q2ECD2*Z6
      H0313=H0212-QECD2*(Z8+Y5)
      H0111=H0122+H0212+H0212-Q3ECD2*Z3
      H0133=H0122-QECD2*Z8
      H0311=H0322+Q2ECD2*(Z6+Y3)
      H0333=H0322+H0223+H0223+ECD2*(Z9+Y6)
      H1000=-QPERP*W1
      H3000=W4+V1
      H2002=HECD*W1
      H1001=H2002-Q2ECD*W2
      H1003=QECD*W5
      H3001=H1003+QECD*V2
      H3003=H2002-ECD*W7-ECD*V4
      H2012=HQECD2*W2
      H2023=-HECD2*W5
      H1022=H2012-QPERP*H2002
      H3022=H2023+HECD*(H3000-ECD*V2)
      H1013=H2023+Q2ECD2*W6
      H3013=H2012-QECD2*(W8+V5)
      H1011=H1022+H2012+H2012-Q3ECD2*W3
      H1033=H1022-QECD2*W8
      H3011=H3022+Q2ECD2*(W6+V3)
      H3033=H3022+H2023+H2023+ECD2*(W9+V6)
      H2200=PT5*(S1-T2)
      H1100=H2200+QPERP2*T3
      H1300=-QPERP*(T6+B1)
      H3100=-QPERP*(T6+A1)
      H3300=H2200+T9+A4+B4+C1
      H2201=HQECD*(S2-T3)
      H1101=H2201-QECD*T3+Q3ECD*T4
      TEMP =HECD*T6-Q2ECD*T7
      H1301=TEMP+HECD*B1-Q2ECD*B2
      H3101=TEMP+HECD*A1-Q2ECD*A2
      H3301=H2201+QECD*(T10+A5+B5+C2)
      H1202=-HQECD*T3
      H2102=H1202
      H2302=HECD*(T6+B1)
      H3202=HECD*(T6+A1)
      H2203=HECD*(T6-S6)
      H1103=H2203-Q2ECD*T7
      TEMP =-HQECD*T3+QECD*T10
      H1303=TEMP+QECD*B5
      H3103=TEMP+QECD*A5
      H3303=H2203+ECD*(T6-T12-A8-B8-C4)+HECD*(A1+B1)
      H1212=PT25*ECD2*T3-PT5*Q2ECD2*T4
      H2112=H1212
      H2312=HQECD2*(T7+B2)
      H3212=HQECD2*(T7+A2)
      H1223=HQECD2*T7
      H2123=H1223
      H2323=HECD2*(PT5*T3-T10-B5)
      H3223=HECD2*(PT5*T3-T10-A5)
      HXXYY=PT25*(ECD*(S1-T2)-ECD2*(S2-T3))
      H2222=HXXYY+HECD2*T3
      H1122=HXXYY+PT5*(Q2ECD*T3-Q2ECD2*T4)
      TEMP =HQECD*(ECD*T7-T6)
      H1322=TEMP+HQECD*(ECD*B2-B1)
      H3122=TEMP+HQECD*(ECD*A2-A1)
      H3322=HXXYY+HECD*(T9+A4+B4+C1)-HECD2*(T10+A5+B5+C2)
      H2211=HXXYY+PT5*Q2ECD2*(S3-T4)
      H1111=HXXYY+(HECD2+PT5*Q2ECD)*T3+Q2ECD2*(-THREE*T4+PT5*S3+QPERP2*T
     15)
      H1311=ONEPT5*QECD2*(T7+B2)-HQECD*(T6+B1)-Q3ECD2*(B3+T8)
      H3111=ONEPT5*QECD2*(T7+A2)-HQECD*(T6+A1)-Q3ECD2*(A3+T8)
      H3311=HXXYY-HECD2*(QPERP2*T4+T10+A5+B5)+HECD*(T9+A4+B4+C1-ECD*C2)+
     1Q2ECD2*(T11+PT5*S3+A6+B6+C3)
      H2213=HQECD2*(T7-S7)
      H1113=ONEPT5*QECD2*T7-HQECD2*S7-Q3ECD2*T8
      TEMP =HECD2*(PT5*T3-T10)+Q2ECD2*(T11-PT5*T4)
      H1313=TEMP-HECD2*B5+Q2ECD2*B6
      H3113=TEMP-HECD2*A5+Q2ECD2*A6
      H3313=QECD2*(ONEPT5*T7-T13-A9-B9-C5)-HQECD2*(S7-A2-B2)
      H2233=HXXYY+HECD2*(S10-T10)
      H1133=HXXYY-HECD2*(QPERP2*T4+T10-S10)+PT5*Q2ECD*T3+Q2ECD2*T11
      H1333=QECD2*(ONEPT5*T7-T13-B9)-HQECD*(T6+B1)+HQECD2*B2
      H3133=QECD2*(ONEPT5*T7-T13-A9)-HQECD*(T6+A1)+HQECD2*A2
      H3333=HXXYY+HECD2*(-THREE*(A5+B5)+T3+S10-C2)+ECD2*(-THREE*T10+T14+
     1A10+  B10+C6)+HECD*(T9+A4+B4+C1)
      RETURN
      END
