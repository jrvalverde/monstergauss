C     GL0802A      14 AUG 91                                         MRP
C?IBM/GLD/GBR/VAX/UNX
      SUBROUTINE OEPROP
C??
C?CDC
C     PROGRAM OEPROP
C??
C=ONE ELECTRON PROPERTIES
C CHAPTER 13: ONE ELECTRON PROPERTIES.
C ***********
C
C1INTRODUCTION
C     LINK 0802
C*
C     THIS PROGRAM CALCULATES ONE ELECTRON PROPERTIES
C
C     AUTHORS: ROY KARI AND RAY POIRIER,
C     DEPARTMENT OF CHEMISTRY, LAURENTIAN UNIVERSITY, SUDBURY, CANADA.
C     ADAPTED TO MONSTERGAUSS BY MIKE PETERSON AND RAY POIRIER.
C     VERSION: OCTOBER 1990.
C*
C     INPUT REQUIREMENTS
C*
C     MPROP,ICM,LABEL,ISAVE,(CPROP(K),K=1,3)  (2I4,A4,I4,3F12.0)
C*
C     MPROP IS THE INDEX OF REQUIRED PROPERTY:
C      -1  PROPERTIES 1, 2 AND 3
C      -2  PROPERTIES 4, 5, 6, 7 AND 8
C      -3  PROPERTIES 4, 7 AND 8 (FOR ATOMIC MULTIPOLE DECOMPOSITION,
C          NEEDS UNIT ISAVE)
C       1  MAGNETIC SHIELDING (INCLUDING THE POTENTIAL)
C       2  ELECTRIC FIELD
C       3  FIELD GRADIENT
C       4  DIPOLE MOMENT
C       5  QUADRUPOLE MOMENT
C       6  OCTUPOLE MOMENT
C       7  SECOND MOMENT
C       8  THIRD MOMENT
C       9  CHARGE DENSITY
C      10  LINE DENSITY
C      11  PLANAR DENSITY
C      12  OVERLAP
C      13  DIAMAGNETIC SUSCEPTIBILITY
C      14  OPTICAL ROTATORY STRENGTH (DIPOLE VELOCITY AND
C          MAGNETIC MOMENT)
C      15  SPIN DENSITY AT A POINT
C      16  SPIN DENSITY ON A LINE
C      17  SPIN DENSITY ON A PLANE
C      NOTE: NO MO COMPONENTS ARE PRINTED FOR PROPERTIES 15, 16 OR 17.
C     ICM = 0 PROPERTY CALCULATED AT COORDINATE CPROP.
C         = N PROPERTY CALCULATED AT COORDINATES OF ATOM N.
C         =-1 PROPERTY CALCULATED AT CENTER OF MASS.
C         =-2 PROPERTY CALCULATED AT A GRID OF POINTS, BASED AT CPROP.
C       PROPERTIES -1, 1, 2 AND 3 ARE USUALLY EVALUATED AT EACH
C       NON-EQUIVALENT ATOM.
C       PROPERTIES -2, 4, 5, 6, 7, 8, 13 AND 14 ARE USUALLY EVALUATED
C       AT THE CENTER OF MASS.
C       PROPERTY 12 IS INDEPENDENT OF THE POINT OF EVALUATION.
C       PROPERTIES 9, 10 AND 11 ARE EVALUATED FOR ANY DESIRED POINT,
C       LINE OR PLANE RESPECTIVELY.
C       PROPERTIES 15, 16 AND 17 ARE EVALUATED FOR ANY DESIRED POINT,
C       LINE OR PLANE RESPECTIVELY, FOR OPEN SHELL WAVEFUNCTIONS.
C     LABEL IS AN ARBITRARY LABEL FOR THE REFERENCE POINT.
C     ISAVE IS NON-ZERO TO SAVE THE AO INTEGRALS FOR THIS PROPERTY ON
C       UNIT ISAVE. THE INTEGRALS ARE PRECEEDED BY 2 HEADER LINES:
C       MPROP,NT,LABEL,CPROP,LPROP,ITITLE
C       IN (I4,I4,A4,3F12.6/6A4,10A4) FORMAT WHERE
C       'MPROP' IS THE PROPERTY INDEX NUMBER (I4),
C       'NT' IS THE TOTAL NUMBER OF COMPONENTS FOR THIS PROPERTY (I4),
C       'LABEL' IS THE 4 CHARACTER LABEL SUPPLIED BY THE USER (A4),
C       'CPROP' ARE THE COORDINATES IN ANGSTROMS (3F12.6),
C       'LPROP' IS THE 24 CHARACTER PROPERTY NAME (A24), AND
C       'ITITLE' ARE THE PROPERTY COMPONENT TITLES (10A4).
C       THE NEXT LINES CONTAIN:
C       K,L,(VAL(I),I=1,NT)
C       IN (2I4,4D14.7/8X,4D14.7/8X,2D14.7) FORMAT WHERE
C       'K' AND 'L' ARE THE ATOMIC ORBITAL NUMBERS (2I4), AND
C       'VAL' IS THE INTEGRAL VALUES FOR EACH OF THE 'NT' COMPONENTS
C       (4 PER LINE, AS MANY LINES AS NECESSARY).
C       THE INTEGRALS ARE FOLLOWED BY A LINE CONTAINING '*' IN COLUMN
C       1 FOR EASY SEPARATION OF VARIOUS SETS OF INTEGRALS.
C       UNIT ISAVE SHOULD BE ASSIGNED TO A BLOCKED, FORMATTED FILE
C       (E.G. THE PUNCH FILE, UNIT 'IPUNCH' - NORMALLY 7), BUT FOR
C       USE WITH LINK 0907 (PROPERTY TRANSFORMATION TO THE MO BASIS)
C       UNIT ISAVE MUST NOT BE ASSIGNED TO THE PUNCH FILE, BECAUSE
C       MOST COMPUTER SYSTEMS WILL NOT ALLOW THE PUNCHED OUTPUT FILE
C       TO BE REWOUND OR READ.
C       FOR MPROP=-3, ISAVE MUST BE SPECIFIED.
C       FOR GRID GENERATION (ICM=-2), THE RESULTS ARE WRITTEN TO UNIT
C       ISAVE ONLY, NOT PRINTED.
C     CPROP: COORDINATES OF REFERENCE POINT IN ANGSTROMS (IF ICM IS
C       0 OR -2.
C
C     REPEAT FOR EACH PROPERTY DESIRED, SETTING MPROP TO 0 TO STOP.
C
C     FOR OPTIMIZATION RUNS WITH THE FP OPTION, OR FOR SURFACE SCANS,
C     THE SET OF PROPERTIES REQUESTED IS SAVED ON DISK AND RE-USED
C     FOR SUBSEQUENT POINTS.
C*
C=ONE ELECTRON PROPERTIES
C1GRIDS
C     EXTRA CARDS REQUIRED FOR GRID GENERATION (ICM=-2).
C*
C     NX,NY,NZ  (3I4)  ONLY IF ICM=-2.
C
C     NX, NY AND NZ ARE THE NUMBER OF POINTS IN THE GRID FOR THE X, Y
C     AND Z DIRECTIONS (A 0 IS INTERPRETED AS A 1). AT MOST TWO
C     DIRECTIONS MAY BE SCANNED SIMULTANEOUSLY.
C
C     XINC,YINC,ZINC  (3F12.0)  ONLY IF ICM=-2.
C
C     XINC, YINC AND ZINC ARE THE INCREMENTS TO BE USED IN THE X, Y
C     AND Z DIRECTIONS OF THE GRID (IN ANGSTROMS). THE INCREMENT IS
C     IGNORED FOR DIRECTIONS NOT BEING SCANNED, AND MUST BE NON-ZERO
C     FOR DIRECTIONS BEING SCANNED. THE STARTING POINT OF THE GRID IS
C     THE COORDINATES CONTAINED IN CPROP.
C*
C     NOTES ON GRID GENERATION.
C*
C     ALL PRINTING IS TURNED OFF DURING THE GRID GENERATION - THUS
C     ISAVE *MUST* BE USED TO SAVE THE RESULTS OF THE SCANS.
C
C     AT EACH POINT, THE GRID VALUES ARE PRECEEDED BY 2 HEADER LINES:
C     MPROP,NT,LABEL,CPROP,LPROP,ITITLE
C     IN (I4,I4,A4,3F12.6/6A4,10A4) FORMAT WHERE
C     'MPROP' IS THE PROPERTY INDEX NUMBER (I4),
C     'NT' IS THE TOTAL NUMBER OF COMPONENTS FOR THIS PROPERTY (I4),
C     'LABEL' IS THE 4 CHARACTER LABEL SUPPLIED BY THE USER (A4),
C     'CPROP' ARE THE COORDINATES IN ANGSTROMS (3F12.6),
C     'LPROP' IS THE 24 CHARACTER PROPERTY NAME (A24), AND
C     'ITITLE' ARE THE PROPERTY COMPONENT TITLES (10A4).
C     THE NEXT 1 OR 2 LINES CONTAIN:
C     (VAL(I),I=1,NT)
C     IN (5D14.7/5D14.7) FORMAT WHERE
C     'VAL' IS THE INTEGRAL VALUES FOR EACH OF THE 'NT' COMPONENTS
C     (5 PER LINE, AS MANY LINES AS NECESSARY).
C
C     DO NOT COMBINE GRID GENERATION AND OTHER USES OF THE SAME ISAVE
C     UNIT NUMBER IN ONE OEP RUN, UNLESS YOU ARE PREPARED FOR A MESSY
C     UNSORTING JOB LATER.
C     EXAMPLE: TO GENERATE CHARGE DENSITIES IN THE XZ PLANE FOR AN
C     51 X 51 GRID (X: -5.0 TO 5.0 BY 0.2, Z: -5.0 TO 5.0 BY 0.2),
C     THE INPUT CARDS WOULD BE:
C        9  -2 XZ    7-5.0        0.0         -5.0
C       51   0  51
C     0.2         0.0         0.2
C     THE RESULTS OF THE 2601 POINTS ARE WRITTEN ON UNIT 7. OTHER
C     PROPERTY CARDS MAY PRECEED OR FOLLOW THIS GROUP OF 3 CARDS.
C*
C1OPTIONS
C     ******************************************************************
C     IOP() ... OPTIONS.
C     ******************************************************************
C     IOP(13) TO IOP(19) ... USED BY LINK 0801.
C
C     IOP(20) = 0 LMO COEFFICIENTS FROM DISK (FROM LINK 0801)
C             = 1 MO  COEFFICIENTS FROM DISK
C             = 2 USE DENSITY MATRIX ON DISK (NO COMPONENTS OVER MO
C                 CALCULATED)
C
C     IOP(21) = 0 DO NOT PRINT AO INTEGRALS
C             = 1 PRINT AO INTEGRALS
C
C     IOP(22) = 0 DO NOT PRINT MO RESULTS.
C               1 PRINT PROPERTY COMPONENTS OVER OCCUPIED MO.
C
C     IOP(23) ... USED BY LINK 0801.
C
C     IOP(24) = 0 READ PROPERTY INPUT FROM UNIT 'IN'.
C               1 READ PROPERTY INPUT FROM UNIT 'IN' AND SAVE ON DISK.
C               2 RECOVER PROPERTY INPUT FROM DISK.
C
C     IOP(25) = 0 O.E.P. CALCULATIONS.
C               1 ESTIMATE OF DIPOLE POLARIZABILITY CALCULATIONS.
C               2 O.E.P. CALCULATIONS WITH ESTIMATE OF DIPOLE
C                 POLARIZABILITY CALCULATIONS.
C
C     IOP(26) ... USED BY LINK 0801.
C
C     IOP(27) = 0 DO NOT READ LMO 'T' MATRIX FROM DISK.
C               1 READ LMO 'T' MATRIX FROM DISK (UNIT IMAT, FILE 42).
C
C     IOP(28) ... USED BY LINK 0801.
C
C     IOP(29) ... USED BY LINK 0801.
C
C     IOP(30) TO IOP(60) ... NOT USED.
C     ******************************************************************
C
C     FOR RHF RUNS WITH IOP(20)=1 AND IOP(22)=0, THE PROPERTIES ARE
C     CALCULATED USING THE DENSITY (IOP(20) IS SET TO TO 2).
C
C     USING IOP(27)=1 ONLY MAKES SENSE FOR IOP(20) = 0 OR 1, AND WILL BE
C     IGNORED IF IOP(20)=2. THIS OPTION IS INTENDED TO PERMIT EVALUATION
C     OF PROPERTY COMPONENTS FOR WAVE FUNCTIONS WITH AN APPLIED EXTERNAL
C     ELECTRIC FIELD, BUT FIRST THE MO'S ARE TRANSFORMED BY THE LMO 'T'
C     MATRIX FOUND FOR THE NO-FIELD CASE. THIS MAY PERMIT REASONABLE
C     EVALUATION OF THE COMPONENTS OF A PROPERTY LIKE POLARIZABILITY
C     OVER LMO'S (BY DIPOLE MOMENT CHANGES WITH EXTERNAL FIELD STRENGTH
C     AND DIRECTION). THE PROBLEM WITH JUST RECOMPUTING THE LMO'S WITH
C     THE APPLIED FIELD IS THAT THE LMO'S ARE PERTURBED BY THE FIELD AT
C     THE SAME TIME AS THE DIPOLE MOMENT IS PERTURBED; USING IOP(27)
C     MAY ALLOW THE LMO PERTURBATION EFFECT TO BE REDUCED FAR ENOUGH
C     SO IT CAN BE IGNORED.
C     THE PROCEDURE IS TO RUN THE NO-FIELD CASE WITH THE LMO OPTION,
C     PUNCHING THE LMO 'T' MATRIX AND SAVING IT (USING IOP(26) IN LINK
C     0801). THEN SUBSEQUENT RUNS ARE MADE WITH APPLIED FIELDS, AND
C     THE NO-FIELD LMO 'T' MATRIX IS READ BACK (USING IOP(35) OF LINK
C     0402) AND APPLIED TO THE CMO'S IN THE ONE ELECTRON PROPERTY
C     PACKAGE (USING IOP(27) OF LINK 0802).
C     THESE JOBS ILLUSTRATE THE BASIC IDEA; FIRST JOB:
C     *MOL LMO, OEP=L
C     *PRT MOINT=Y
C     *IOP
C        6  26   1  PUNCH LMO 'T' MATRIX
C
C     TITLE
C      0 1
C     ... REST OF Z MATRIX
C     ... ONE ELECTRON PROPERTY INPUT
C
C     SUBSEQUENT JOB(S):
C     *MOL OEP=C, FIELD=E
C     *PRT MOINT=Y
C     *IOP
C        3  35   1  READ LMO 'T' MATRIX FROM UNIT 1
C        6  27   1  APPLY LMO 'T' MATRIX
C
C     TITLE
C      0 1
C     ... REST OF Z MATRIX
C     ... ELECTRIC FIELD INPUT
C     ... ONE ELECTRON PROPERTY INPUT
C
C     THIS OPTION IS AVAILABLE ONLY FOR CLOSED SHELL SYSTEMS.
C==
C*
C/
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA, NB=#NB)
C##
      PARAMETER (NA= 36, NB=200)
C###
      PARAMETER (NBP3=NB+3)
      PARAMETER (ZERO=0.0D0)
C     MAXSV IS THE DIMENSION OF THE SAVE ARRAYS INTSV, REALSV AND
C     LABSAV.
      PARAMETER (MAXSV=90)
C
      COMMON /A/ IOP(99)
      COMMON /A/ NATOMS,ICHARG,MULTIP,IAN(NA),NAE,NBE,NE,NBASIS,C(NA,3)
      COMMON /A/ ANTOAU,CDUM(3),ICDUM(401)
C
      COMMON/OEP1/ROOT3,ROOT5,IC1(6),ANORM(20),A,B,EA(3),
     1 MPROP,NT,ISAVE,NLINES,IGRID,IFILL,CPROP(3),
     2 CPROPA(3),DINT(NBP3,10),AO(1000)
      COMMON/OEP2/Y(NB,NB)
      COMMON/OEP3/X(NB,NB)
C
      COMMON /OEP4/ FUNCON(20), INTSV(3,MAXSV), REALSV(3,MAXSV)
      COMMON /OEP5/ LABEL,LPROP,ITITLE(10)
      COMMON /OEPLAB/ LABSAV(MAXSV)
C
      COMMON/IO/IN,IOUT,IODUM(15),NFILE(100,2)
C
      CHARACTER IPROPT*24,LPROP*24,IPROPL*4,ITITLE*4,LABEL*4,LCD1*8,
     1 LABSAV*4
C*
      DIMENSION CM(3),CPROPS(3),IPROPT(17),IPROPL(42),MAP(17),NTS(17)
      DIMENSION NXYZ(3),XYZINC(3),LCD1(3),TEMPV(NB)
C*
      EXTERNAL OPAD1,ANONUC,OPAB1,DIPNUC,OPAB4,AMGNUC,OPAB2,QUDNUC
      EXTERNAL OPAB3,OCTNUC,OPAA1,FLDNUC,OPAA2,GRDNUC
      EXTERNAL OPAA3,SLDNUC,OPAC1,OPAC2,OPAC3,OPAB5
C*
      EQUIVALENCE (TEMPV(1),DINT(1,1))
C*
C     PROPERTY TITLES.
C
      DATA IPROPT/'MAGNETIC SHIELDING      ',
     1 'ELECTRIC FIELD          ','FIELD GRADIENT          ',
     2 'DIPOLE MOMENT           ','QUADRUPOLE MOMENT       ',
     3 'OCTUPOLE MOMENT         ','SECOND MOMENT           ',
     4 'THIRD MOMENT            ','CHARGE DENSITY          ',
     5 'LINE DENSITY            ','PLANAR DENSITY          ',
     6 'OVERLAP                 ','DIAMAGN. SUSCEPTIBILITY ',
     7 'OPTICAL ROTATORY STRNGTH','SPIN DENSITY            ',
     8 'LINE SPIN DENSITY       ','PLANAR SPIN DENSITY     '/
C
C     PROPERTY COMPONENT TITLES.
C
      DATA IPROPL/' X  ',' Y  ',' Z  ',' R  ',
     1 ' XX ',' YY ',' ZZ ',' XY ',' XZ ',' YZ ','RSQ ',
     2 'XXX ','YYY ','ZZZ ','XXY ','XXZ ','XYY ','YYZ ','XZZ ','YZZ ',
     3 'XYZ ','DYZ ','DXZ ','DXY ',' DZ ',' DY ',' DX ','CDEN','OVLP',
     4 ' XX ',' YY ',' ZZ ',' XY ',' XZ ',' YZ ','1/R ',
     5 'D/DX','D/DY','D/DZ',' MX ',' MY ',' MZ '/
C     MAP SELECTS THE COMPONENT LABELS FROM ARRAY IPROPL.
      DATA MAP/29,0,4,0,4,11,4,11,27,24,21,28,4,36,27,24,21/
C     NTS IN THE NUMBER OF PROPERTY COMPONENTS.
      DATA NTS/7,3,6,4,7,10,7,10,1,3,3,1,7,6,1,3,3/
      DATA LCD1/' LMO    ',' CMO    ',' DENSITY'/
C
 1000 FORMAT(2I4,A4,I4,3F12.0)
 1010 FORMAT(/'0ICM =',I5,' NOT DEFINED - PROPERTY',I4,' SKIPPED')
 1020 FORMAT('1',35('*')/' * ONE ELECTRON PROPERTIES PACKAGE *'/1X,
     1 35('*')/)
 1030 FORMAT(/'0PROPERTY',I5,' NOT DEFINED - PROPERTY SKIPPED')
 1040 FORMAT('0*** WARNING: OEP FROM RHF SCF RUNS ARE DETERMINED AT ',
     1 'THE USERS RISK ***'/)
 1050 FORMAT('0'/1X,132('*')/)
 1060 FORMAT(3I4/3F12.0)
 1070 FORMAT('0SPIN PROPERTIES ARE ZERO FOR CLOSED SHELL MOLECULES ...',
     1 ' PROPERTY',I4,' SKIPPED')
 1080 FORMAT('0GRID DATA WRITTEN TO UNIT',I4)
 1090 FORMAT(I1,A24,' IN ATOMIC UNITS AT THE POINT ',A4,' (',
     1 2(F11.6,','),F11.6,') ANGSTROMS FROM THE',A8)
 1100 FORMAT(/'0GRID GENERATION, BASED AT THE POINT ABOVE'/'0NX =',I4,
     1 ',   NY =',I4,',   NZ =',I4,',     INCREMENTS ARE (',
     2 2(F12.6,','),F12.6,') ANGSTROMS')
 1110 FORMAT('0ERROR: NX, NY OR NZ NEGATIVE - PROPERTY SKIPPED')
 1120 FORMAT('0ERROR: INCREMENT IS 0.0 FOR A SCANNED COORDINATE - ',
     1 'PROPERTY SKIPPED')
 1130 FORMAT('0ERROR: NX, NY AND NZ MAY NOT ALL BE SCANNED - PROPERTY ',
     1 'SKIPPED')
 1140 FORMAT('0ERROR: ISAVE MUST BE POSITIVE FOR GRID GENERATION - ',
     1 'PROPERTY SKIPPED')
 1150 FORMAT(/'0ERROR: FOR MPROP = -3, MUST SPECIFY A UNIT ISAVE -',
     1 ' PROPERTY SKIPPED')
 1160 FORMAT ('0ATTEMPT TO READ PAST THE END OF THE SAVE ARRAY - ',
     1 'END OF ONE ELECTRON PROPERTIES.'/
     2 ' THIS ERROR SHOULD NEVER OCCUR - SEE YOUR MONSTERGAUSS ',
     3 'SUPPLIER WITH THIS OUTPUT.')
 1170 FORMAT ('0UNABLE TO SAVE ANY MORE PROPERTY INPUT - REMAINDER ',
     1 'CALCULATED FOR THIS POINT ONLY.')
 1180 FORMAT (/'0ERROR: MPROP = -3 CAN NOT BE COMBINED WITH GRID ',
     1 'GENERATION.')
 1190 FORMAT (/'0ERROR: IOP(27) CAN ONLY BE USED FOR CLOSED SHELL ',
     1 'SYSTEM.')
 1200 FORMAT(/'0ERROR: ESTIMATES OF DIPOLE POLARIZABILITY ARE ',
     1 'AVAILABLE ONLY FOR CLOSED SHELLS.')
C
      CALL BCONV (CM)
      IOP10=IOP(10)
C
C     DO POLARIZABILITY ESTIMATE OPTION (IF IOP(25) > 0).
C
      IF (IOP(25) .GT. 0) THEN
C
C     THIS OPTION IS ONLY FOR CLOSED SHELLS.
C
         IF (IOP(9).NE.0) THEN
            WRITE (IOUT,1200)
            IOP(1) = -2
            RETURN
         ENDIF
         IF (IOP10 .NE. 0) CALL TREAD (19,Y,NB,NB,NBASIS,NBASIS,1)
C
C     SAVE IOP(20), IOP(21), AND IOP(22).
C
         IOP20S=IOP(20)
         IOP21S=IOP(21)
         IOP22S=IOP(22)
C
C        SET IOP'S AND PARAMETERS TO USE IN DINTFM (OPAB4, ANONUC),
C        TO GET THE ELECTRONIC SECOND MOMENT COMPONENTS.
C
         IOP(20) = 2
         IOP(21) = 0
         IOP(22) = 0
         IOP(25) = -IOP(25)
         CPROP(1) = ZERO
         CPROP(2) = ZERO
         CPROP(3) = ZERO
         CPROPA(1) = ZERO
         CPROPA(2) = ZERO
         CPROPA(3) = ZERO
         ISAVE = 0
         IGRID = 0
         MPROP = 7
         NT=NTS(MPROP)
         CALL DINTFM (OPAB4,ANONUC)
C
C     RECOVER IOP'S.
C
         IOP(20) = IOP20S
         IOP(21) = IOP21S
         IOP(22) = IOP22S
         IOP(25) = -IOP(25)
         IF (IOP(25) .EQ. 1) RETURN
      ENDIF
C
C     END OF POLARIZABILITY ESTIMATE SECTION.
C
      WRITE (IOUT,1020)
      NLINES=4
C
C     LOAD FUNDAMENTAL CONSTANTS AND SAVE DATA IF REQUIRED.
C
      IF (IOP(24) .EQ. 2) CALL TREAD (49, FUNCON, NFILE(49,1), 1,
     1 NFILE(49,1), 1, 0)
C
C     LCD CONTROLS THE LOADING OF LMO/CMO/DENSITY MATRICES: LCD IS 0
C     IF NOTHING LOADED, 1 IF LMO/CMO/TOTAL DENSITY LOADED LAST,
C     -1 IF SPIN DENSITY LOADED LAST.
C
      LCD=0
C
C     USE DENSITY FOR RHF RUNS UNLESS LMO OR MO COMPONENTS DESIRED.
C
      IF (IOP(9).NE.2) GO TO 105
      IF (IOP(20).EQ.0.OR.IOP(22).EQ.1) GO TO 100
      IOP(20)=2
      GO TO 105
  100 WRITE (IOUT,1040)
      NLINES=NLINES+3
C
C     SAVE IOP VALUES.
C
  105 IOP20S=IOP(20)
      IOP21S=IOP(21)
      IOP22S=IOP(22)
C
C     IGRID IS 0 FOR SINGLE POINTS, 1 FOR GRID GENERATION.
C
      IGRID=0
      IF (IOP21S+IOP22S.GT.0) GO TO 110
      WRITE (IOUT,1050)
      NLINES=NLINES+4
C
C     GET NEXT PROPERTY.
C
  110 IF (IOP(24) .EQ. 2) GO TO 120
      READ (IN,1000) MPROP,ICM,LABEL,ISAVE,CPROPS
      GO TO 130
C
C     RECOVER FROM DISK.
C
  120 INDSV = INDSV + 1
      IF (INDSV .GT. MAXSV) GO TO 820
      MPROP = INTSV(1,INDSV)
      ICM = INTSV(2,INDSV)
      ISAVE = INTSV(3,INDSV)
      CPROPS(1) = REALSV(1,INDSV)
      CPROPS(2) = REALSV(2,INDSV)
      CPROPS(3) = REALSV(3,INDSV)
      LABEL = LABSAV(INDSV)
C
  130 IF (MPROP.EQ.0) GO TO 900
      IF (MPROP.EQ.-3.AND.ISAVE.LE.0) GO TO 810
      IF (MPROP.EQ.-3 .AND. ICM.EQ.-2) GO TO 840
      IF (ICM.EQ.0) GO TO 160
      IF (ICM.EQ.-1) GO TO 150
      IF (ICM.EQ.-2) GO TO 160
      IF (ICM.GT.0.AND.ICM.LE.NATOMS) GO TO 140
      WRITE (IOUT,1010) ICM,MPROP
      WRITE (IOUT,1050)
      NLINES=NLINES+7
      GO TO 110
C
C     USE COORDINATES FOR ATOM NUMBER ICM
C
  140 CPROP(1)=C(ICM,1)
      CPROP(2)=C(ICM,2)
      CPROP(3)=C(ICM,3)
      GO TO 170
C
C     USE CENTER OF MASS
C
  150 CPROP(1)=CM(1)
      CPROP(2)=CM(2)
      CPROP(3)=CM(3)
      GO TO 170
C
C     USE CPROPS COORDINATES.
C
  160 CPROP(1) = CPROPS(1) * ANTOAU
      CPROP(2) = CPROPS(2) * ANTOAU
      CPROP(3) = CPROPS(3) * ANTOAU
C
  170 IF (MPROP.LT.-3.OR.MPROP.GT.17) GO TO 800
C
C     SAVE PROPERTY INPUT IF NECESSARY.
C
      IF (IOP(24) .NE. 1) GO TO 190
      INDSV = INDSV + 1
      IF (INDSV - MAXSV) 180,830,190
  180 IF (ICM.EQ.-2 .AND. INDSV.EQ.MAXSV-1) GO TO 830
      INTSV(1,INDSV) = MPROP
      INTSV(2,INDSV) = ICM
      INTSV(3,INDSV) = ISAVE
      REALSV(1,INDSV) = CPROPS(1)
      REALSV(2,INDSV) = CPROPS(2)
      REALSV(3,INDSV) = CPROPS(3)
      LABSAV(INDSV) = LABEL
C
  190 MSAVE=MPROP
      IF (MPROP.EQ.-1) MPROP=1
      IF (MPROP.EQ.-2) MPROP=4
      IF (MPROP.EQ.-3) MPROP=4
C
C     SAVE COORDINATES IN ANGSTROMS.
C
      CPROPA(1) = CPROP(1) / ANTOAU
      CPROPA(2) = CPROP(2) / ANTOAU
      CPROPA(3) = CPROP(3) / ANTOAU
C
C     LOAD CORRECT COEFFICIENTS/DENSITY, IF DIFFERENT FROM PREVIOUS
C     PROPERTY.
C
      LCDNEW=1
      IF (MPROP.GE.15.AND.MPROP.LE.17) LCDNEW=-1
      IF (LCD.EQ.LCDNEW) GO TO 300
      IOP(20)=IOP20S
      LCD=LCDNEW
      IF (LCD.LT.0) IOP(20)=2
C
C     PROPERTIES OVER LMO, CMO OR DENSITY - SET INPUT FILE NUMBERS.
C
      IF (IOP(20)-1)200,210,250
  200 I=40
      J=42
      GO TO 220
C
  210 I=25
      J=27
C
C     READ LMO/C MATRICES. WATCH FOR LMO 'T' MATRIX TRANSFORMATION.
C
  220 IF (IOP(9).NE.0 .AND. IOP(27).EQ.1) THEN
         WRITE (IOUT,1190)
         IOP(1) = -2
      END IF
      IF (IOP10.EQ.0) GO TO 300
      CALL TREAD (I,Y,NB,NB,NBASIS,NAE,0)
      IF (NBE.EQ.0) GO TO 230
      IF (IOP(9).NE.0) CALL TREAD (J,X,NB,NB,NBASIS,NBE,0)
      IF (IOP(27) .NE. 1) GO TO 300
C
C     APPLY LMO 'T' MATRIX TO CLOSED SHELL C MATRIX.
C     TO DO THIS IN PLACE, COPY ONE ROW AT A TIME OF THE C MATRIX
C     (IN Y) TO A TEMPORARY VECTOR (TEMPV), AND MULTIPLY THAT
C     VECTOR BY THE T MATRIX (IN X).
C
      CALL TREAD (42, X, NB, NB, NAE, NAE, 0)
      DO 228 I=1,NBASIS
      DO 222 J=1,NAE
  222 TEMPV(J) = Y(I,J)
      DO 226 K=1,NAE
      SUM = ZERO
      DO 225 J=1,NAE
  225 SUM = SUM + TEMPV(J)*X(J,K)
  226 Y(I,K) = SUM
  228 CONTINUE
      GO TO 300
C
C     ZERO FIRST COLUMN OF X IF NO BETA ELECTRONS.
C
  230 DO 240 I=1,NBASIS
  240 X(I,1)=ZERO
      GO TO 300
C
C     READ DENSITY MATRICES.
C
  250 IF (IOP10.NE.0) CALL TREAD (19,Y,NB,NB,NBASIS,NBASIS,1)
      IF (LCD.LT.0) GO TO 270
      IF (IOP(9).EQ.0) GO TO 300
C
C     READ BETA DENSITY AND ADD TO ALPHA DENSITY.
C
      IF (IOP10.EQ.0) GO TO 300
      CALL TREAD (21,X,NB,NB,NBASIS,NBASIS,1)
      DO 260 J=1,NBASIS
      DO 260 I=1,J
      Y(I,J)=Y(I,J)+X(I,J)
  260 Y(J,I)=Y(I,J)
      GO TO 300
C
C     SPIN DENSITY.
C
  270 IF (IOP(9).EQ.0) GO TO 290
C     READ BETA DENSITY AND SUBTRACT FROM ALPHA DENSITY.
      IF (IOP10.EQ.0) GO TO 300
      CALL TREAD (21,X,NB,NB,NBASIS,NBASIS,1)
      DO 280 J=1,NBASIS
      DO 280 I=1,J
      Y(I,J)=Y(I,J)-X(I,J)
      Y(J,I)=Y(I,J)
      X(I,J)=ZERO
  280 X(J,I)=ZERO
      GO TO 300
C     CLOSED SHELL SCF SPIN DENSITY.
  290 WRITE (IOUT,1070) MPROP
      WRITE (IOUT,1050)
      NLINES=NLINES+6
      LCD=0
      IF (ICM.NE.-2) GO TO 110
C
C     COPY PROPERTY TITLE AND COMPONENT LABELS.
C
  300 LPROP = IPROPT(MPROP)
      NT=NTS(MPROP)
      MM=MAP(MPROP)
      DO 330 I=1,10
      IF (I .LE. NT) THEN
         ITITLE(I)=IPROPL(MM+I)
      ELSE
         ITITLE(I) = ' '
      END IF
  330 CONTINUE
C
C     HOW MANY LINES DOES THIS PROPERTY NEED TO PRINT?
C
      IF (IOP10.NE.0.AND.IOP21S+IOP22S.GT.0) GO TO 340
      NEED=16
      IF (ISAVE.GT.0) NEED=NEED+3
      IF (IOP10.EQ.0) GO TO 335
      IF (MPROP.EQ.3) NEED=NEED+20
      IF (MPROP.EQ.5.OR.MPROP.EQ.7) NEED=NEED+17
      IF (MPROP.EQ.8) NEED=NEED+6
  335 IF (NLINES+NEED.LE.58) GO TO 350
C
C     START A NEW PAGE.
C
  340 NEWPG=1
      NLINES=0
      GO TO 360
C
C     CONTINUE ON THE CURRENT PAGE - SPACE DOWN 4 LINES.
C
  350 NEWPG=0
C
  360 I=IOP(20)+1
      WRITE (IOUT,1090) NEWPG,LPROP,LABEL,CPROPA,LCD1(I)
      NLINES=NLINES+2-NEWPG
      IF (ICM.NE.-2) GO TO 690
      IF (IGRID .EQ. 1) GO TO 700
C
C     SET UP FOR GRID GENERATION.
C
      IF (IOP(24) .EQ. 2) GO TO 450
      READ (IN,1060) NXYZ,XYZINC
C
C     SAVE INCREMENT INPUT IF NECESSARY.
C
      IF (IOP(24) .NE. 1) GO TO 490
      INDSV = INDSV + 1
      IF (INDSV .GE. MAXSV) GO TO 490
      INTSV(1,INDSV) = NXYZ(1)
      INTSV(2,INDSV) = NXYZ(2)
      INTSV(3,INDSV) = NXYZ(3)
      REALSV(1,INDSV) = XYZINC(1)
      REALSV(2,INDSV) = XYZINC(2)
      REALSV(3,INDSV) = XYZINC(3)
      GO TO 490
C
C     RECOVER INPUT FROM DISK SAVE AREA.
C
  450 INDSV = INDSV + 1
      IF (INDSV .GE. MAXSV) GO TO 820
      NXYZ(1) = INTSV(1,INDSV)
      NXYZ(2) = INTSV(2,INDSV)
      NXYZ(3) = INTSV(3,INDSV)
      XYZINC(1) = REALSV(1,INDSV)
      XYZINC(2) = REALSV(2,INDSV)
      XYZINC(3) = REALSV(3,INDSV)
C
  490 IF (LCD.EQ.0) GO TO 110
C
      DO 540 I=1,3
      IF (NXYZ(I))500,510,530
C     N IS NEGATIVE - ERROR.
  500 WRITE (IOUT,1100) NXYZ,XYZINC
      WRITE (IOUT,1110)
      WRITE (IOUT,1050)
      NLINES=NLINES+11
      GO TO 110
C     N IS ZERO - CONVERT TO 1.
  510 NXYZ(I)=1
  520 XYZINC(I)=ZERO
      GO TO 540
C     N IS POSITIVE - LOOK FOR N=1, THEN ENSURE INCREMENT IS NON-ZERO.
  530 IF (NXYZ(I).EQ.1) GO TO 520
      IF (XYZINC(I).NE.ZERO) GO TO 540
      WRITE (IOUT,1100) NXYZ,XYZINC
      WRITE (IOUT,1120)
      WRITE (IOUT,1050)
      NLINES=NLINES+11
      GO TO 110
  540 CONTINUE
C
      WRITE (IOUT,1100) NXYZ,XYZINC
      NLINES=NLINES+5
      IF (NXYZ(1).EQ.1.OR.NXYZ(2).EQ.1.OR.NXYZ(3).EQ.1) GO TO 550
      WRITE (IOUT,1130)
      WRITE (IOUT,1050)
      NLINES=NLINES+6
      GO TO 110
C
  550 IF (ISAVE.GT.0) GO TO 560
      WRITE (IOUT,1140)
      WRITE (IOUT,1050)
      NLINES=NLINES+6
      GO TO 110
C
  560 IOP(21)=0
      IOP(22)=0
      IGRID=1
      GO TO 700
C
C     GET PROPERTY INTEGRALS.
C
  690 GO TO (1,2,3,4,5,6,7,6,9,10,11,12,7,14,9,10,11),MPROP
C
    1 CALL DINTFM (OPAA3,SLDNUC)
      IF (MSAVE.GT.0) GO TO 110
      MPROP=2
      GO TO 300
    2 CALL DINTFM (OPAA1,FLDNUC)
      IF (MSAVE.GT.0) GO TO 110
      MPROP=3
      GO TO 300
    3 CALL DINTFM (OPAA2,GRDNUC)
      GO TO 110
    4 CALL DINTFM (OPAB1,DIPNUC)
      IF (MSAVE.GT.0) GO TO 110
      MPROP=5
      IF (MSAVE.EQ.-3) MPROP=7
      GO TO 300
    5 CALL DINTFM (OPAB2,QUDNUC)
      IF (MSAVE.GT.0) GO TO 110
      MPROP=6
      GO TO 300
    6 CALL DINTFM (OPAB3,OCTNUC)
      IF (MSAVE.GT.0) GO TO 110
      MPROP=7
      GO TO 300
    7 CALL DINTFM (OPAB4,AMGNUC)
      IF (MSAVE.GT.0) GO TO 110
      MSAVE=8
      MPROP=8
      GO TO 300
    9 CALL DINTFM (OPAC3,ANONUC)
      GO TO 110
   10 CALL DINTFM (OPAC2,ANONUC)
      GO TO 110
   11 CALL DINTFM (OPAC1,ANONUC)
      GO TO 110
   12 CALL DINTFM (OPAD1,ANONUC)
      GO TO 110
   14 CALL DINTFM (OPAB5,ANONUC)
      GO TO 110
C
C     GRID GENERATION - LOOP OVER AXES.
C
  700 IF (IOP10.EQ.0) GO TO 750
      NX=NXYZ(1)
      NY=NXYZ(2)
      NZ=NXYZ(3)
C
      DO 740 IX=1,NX
      CPROPA(1) = CPROPS(1) + DFLOAT(IX-1)*XYZINC(1)
      CPROP(1) = CPROPA(1) * ANTOAU
      DO 740 IY=1,NY
      CPROPA(2) = CPROPS(2) + DFLOAT(IY-1)*XYZINC(2)
      CPROP(2) = CPROPA(2) * ANTOAU
      DO 740 IZ=1,NZ
      CPROPA(3) = CPROPS(3) + DFLOAT(IZ-1)*XYZINC(3)
      CPROP(3) = CPROPA(3) * ANTOAU
C
C     GET PROPERTY INTEGRALS.
C
      GO TO (701,702,703,704,705,706,707,706,709,710,711,712,
     1 707,714,709,710,711), MPROP
C
  701 CALL DINTFM (OPAA3,SLDNUC)
      GO TO 740
  702 CALL DINTFM (OPAA1,FLDNUC)
      GO TO 740
  703 CALL DINTFM (OPAA2,GRDNUC)
      GO TO 740
  704 CALL DINTFM (OPAB1,DIPNUC)
      GO TO 740
  705 CALL DINTFM (OPAB2,QUDNUC)
      GO TO 740
  706 CALL DINTFM (OPAB3,OCTNUC)
      GO TO 740
  707 CALL DINTFM (OPAB4,AMGNUC)
      GO TO 740
  709 CALL DINTFM (OPAC3,ANONUC)
      GO TO 740
  710 CALL DINTFM (OPAC2,ANONUC)
      GO TO 740
  711 CALL DINTFM (OPAC1,ANONUC)
      GO TO 740
  712 CALL DINTFM (OPAD1,ANONUC)
      GO TO 740
  714 CALL DINTFM (OPAB5,ANONUC)
C
  740 CONTINUE
C
  750 WRITE (IOUT,1080) ISAVE
      WRITE (IOUT,1050)
      NLINES=NLINES+6
C
C     CHECK FOR MULTIPLE PROPERTY GRIDS (MSAVE < 0).
C
      IF (MSAVE .GT. 0) GO TO 790
      MPROP = MPROP + 1
      IF (MSAVE.EQ.-1 .AND. MPROP.GT.3) GO TO 790
      IF (MSAVE.EQ.-2 .AND. MPROP.GT.8) GO TO 790
      GO TO 300
  790 IOP(21)=IOP21S
      IOP(22)=IOP22S
      IGRID=0
      GO TO 110
C
C     ERROR MESSAGES.
C
  800 WRITE (IOUT,1030) MPROP
      WRITE (IOUT,1050)
      NLINES=NLINES+7
      GO TO 110
C
  810 WRITE (IOUT,1150)
      WRITE (IOUT,1050)
      NLINES=NLINES+7
      GO TO 110
C
  820 WRITE (IOUT,1160)
      GO TO 900
C
  830 WRITE (IOUT,1170)
      NLINES = NLINES + 2
      INTSV(1,INDSV) = 0
      INDSV = MAXSV
      GO TO 190
C
  840 WRITE (IOUT,1180)
      WRITE (IOUT,1050)
      NLINES=NLINES+7
      GO TO 110
C
C     NORMAL EXIT.
C
  900 IOP(20)=IOP20S
C
C     SAVE OEP INPUT IF NECESSARY.
C
      IF (IOP(24) .NE. 1) RETURN
      INDSV = INDSV + 1
      IF (INDSV .GT. MAXSV) INDSV = MAXSV
      INTSV(1,INDSV) = 0
      CALL TWRITE (49, FUNCON, NFILE(49,1), 1, NFILE(49,1), 1, 0)
      RETURN
      END
      SUBROUTINE BCONV(CM)
C
C     LOAD BASIS SET NORMALIZATION CONSTANTS, AND FIND CENTER OF MASS.
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA, NB=#NB)
C##
      PARAMETER (NA= 36, NB=200)
C###
      PARAMETER (NBP3=NB+3)
      PARAMETER (ZERO=0.0D0)
C
      COMMON /A/ IOP(99)
      COMMON /A/ NATOMS,ICHARG,MULTIP,IAN(NA),NAE,NBE,NE,NBASIS,C(NA,3)
      COMMON /A/ CDUM(4),ICDUM(401)
C
      COMMON /ZMAT/ IZ1(NA,4),Z1(NA,3),
     1 IPAR(15,3),NIPAR(3),NPAR,NSTEP,DX(3),NUM,NUMB,
     2 IZ2(NA,3),IZMASS(NA),ZMASS(NA)
C
      COMMON/OEP1/ROOT3,ROOT5,INEW,JNEW,KK,LL,ITYPE,JTYPE,ANORM(20),
     1 ALPHA,BETA,EA(3),MPROP,NT,ISAVE,IFILL(3),CPROP(3),
     2 CPROPA(3),DINT(NBP3,10),AO(1000)
C
      DIMENSION CM(3)
C*
      DATA ONE/1.0D0/, THREE/3.0D0/, FIVE/5.0D0/
C*
C     SET AO NORMALIZATION CONSTANTS FOR D/F SHELLS.
      ROOT3=DSQRT(THREE)
      ROOT5=DSQRT(FIVE)
      DO 10 I=1,13
   10 ANORM(I)=ONE
      ANORM( 8)=ROOT3
      ANORM( 9)=ROOT3
      ANORM(10)=ROOT3
      ANORM(14)=ROOT5
      ANORM(15)=ROOT5
      ANORM(16)=ROOT5
      ANORM(17)=ROOT5
      ANORM(18)=ROOT5
      ANORM(19)=ROOT5
      ANORM(20)=ROOT3*ROOT5
C     CALCULATE CENTER OF MASS.
      SUMM=ZERO
      DO 100 J=1,NATOMS
  100 SUMM=SUMM+ZMASS(J)
      DO 120 I=1,3
      SUM=ZERO
      DO 110 J=1,NATOMS
  110 SUM=SUM+ZMASS(J)*C(J,I)
  120 CM(I)=SUM/SUMM
      RETURN
      END
      SUBROUTINE DINTFM(OPA,ANUC)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA, NB=#NB)
C     PARAMETER (NS=#NS, NP=#NP)
C##
      PARAMETER (NA= 36, NB=200)
      PARAMETER (NS=120, NP=300)
C###
      PARAMETER (NBP3=NB+3)
      PARAMETER (ZERO=0.0D0, ONE=1.0D0, TWO=2.0D0)
C
      INTEGER SHELLA,SHELLN,SHELLT,SHELLC,AOS
C
      COMMON /A/ IOP(99)
      COMMON /A/ NATOMS,ICHARG,MULTIP,IAN(NA),NAE,NBE,NE,NBASIS,C(NA,3)
      COMMON /A/ CDUM(4),ICDUM(401)
C
      COMMON/OEP1/ROOT3,ROOT5,INEW,JNEW,KK,LL,ITYPE,JTYPE,ANORM(20),
     1 ALPHA,BETA,EA(3),MPROP,NT,ISAVE,NLINES,IGRID,IFILL,
     2 CPROP(3),CPROPA(3),DINT(NBP3,10),AO(1000)
      COMMON/OEP2/Y(NB,NB)
      COMMON/OEP3/X(NB,NB)
      COMMON /OEP5/ LABEL,LPROP,ITITLE(10)
C
      COMMON/B/IXYZ(NS),SHELLA(NS),SHELLN(NS),SHELLT(NS),
     1 SHELLC(NS),AOS(NS),NSHELL,MAXTYP,EC(NP,3)
C
      COMMON/IO/IN,IOUT,IODUM(215)
C
      CHARACTER LABEL*4,LPROP*24,ITITLE*4
C
      EXTERNAL OPA,ANUC
C
      DIMENSION VAL(10),IULIM(4)
C
      DATA IULIM/1,4,6,10/
      DATA THREE/3.0D0/, FOUR/4.0D0/, PT5/0.5D0/
C
 1000 FORMAT (2I4,A4,3F12.6/A24,10A4)
 1010 FORMAT(1X,2I5,10(1X,F11.6))
 1020 FORMAT(/'0INTEGRALS OVER THE ATOMIC ORBITALS'//9X,10(8X,A4)/)
 1030 FORMAT(/'0THE AO INTEGRALS FOR THIS PROPERTY HAVE BEEN WRITTEN ',
     1 'TO UNIT',I4)
 1040 FORMAT('1',A24,'   IN ATOMIC UNITS AT THE POINT ',A4,'   (',
     1 2(F12.6,','),F12.6,') ANGSTROMS')
 1050 FORMAT('0'/1X,132('*')/)
 1060 FORMAT (2I4,4(1PD14.7))
 1061 FORMAT (8X,4(1PD14.7))
 1070 FORMAT ((5(1PD14.7)))
 1080 FORMAT ('*')
 1090 FORMAT(/'0THE AO INTEGRALS FOR THIS PROPERTY WILL BE WRITTEN ',
     1 'TO UNIT',I4)
C
      IF (IOP(10).EQ.0) GO TO 980
      IOP20=IOP(20)
      IOP21=IOP(21)
      NBEL=NBE
      IF (NBE.EQ.0) NBEL=1
      CALL ANUC (CPROP,DINT,MPROP)
      IOP9=IOP(9)
      IF (ISAVE.GT.0) WRITE (ISAVE,1000) MPROP,NT,LABEL,CPROPA,LPROP,
     1 ITITLE
      IF (IOP21.NE.0) WRITE (IOUT,1020) ITITLE
      R3OV2=PT5*ROOT3
      ROOT2 = DSQRT(TWO)
      R1=PT5*ROOT5/ROOT2
      R2=THREE/(ROOT5+ROOT5)
      R3=PT5*ROOT3
      R4=PT5*ROOT3/ROOT2
      Z1=FOUR/ROOT5
      Z2=ONE/ROOT5
      Z3=THREE/ROOT5
C
      DO 90 MM=1,NT
      DINT(2,MM)=ZERO
      DO 90 I=1,NBASIS
   90 DINT(I+3,MM)=ZERO
C
C     LOOP OVER SHELLS - GET AO LIMITS FOR EACH SHELL.
C
      DO 900 ISHELL=1,NSHELL
      ITYPE=SHELLT(ISHELL)
      IAOS=AOS(ISHELL)-1
      ISTART=SHELLC(ISHELL)+1
C
      DO 900 JSHELL=1,ISHELL
      JTYPE=SHELLT(JSHELL)
      JAOS=AOS(JSHELL)-1
      JSTART=SHELLC(JSHELL)+1
      IEND=IULIM(ITYPE+1)
      JEND=IULIM(JTYPE+1)
      IMJ=ISHELL-JSHELL
C
C     SET TRANSFORMATION FLAG: A TRANSFORMATION IS REQUIRED IF PURE D/F
C     ORBITALS ARE PRESENT, OR IF CARTESIAN F ORBITALS ARE PRESENT
C     (DUE TO DIFFERENT ORDERING OF THE COMPONENTS BETWEEN MONSTERGAUSS
C     AND THE OEP PACKAGE).
C     OFFSET       MG        OEP
C     ------       ---       ---
C        0         XXX       XXX
C        1         YYY       YYY
C        2         ZZZ       ZZZ
C        3         XYY       XXY
C        4         XXY       XXZ
C        5         XXZ       XYY
C        6         XZZ       YYZ
C        7         YZZ       XZZ
C        8         YYZ       YZZ
C        9         XYZ       XYZ
C
      ITRANS=0
      IF (IOP(8).EQ.1.AND.(ITYPE.GE.2.OR.JTYPE.GE.2)) ITRANS=1
      IF (ITYPE.EQ.3 .OR. JTYPE.EQ.3) ITRANS=1
C
C     LOOP OVER AO'S FOR THIS PAIR OF SHELLS.
C
      DO 100 KK=ISTART,IEND
      IF (IMJ.EQ.0) JEND=KK
      DO 100 LL=JSTART,JEND
C     PASS SHELL NUMBERS TO PROPB1 WHERE THEY CAN BE CHANGED.
      INEW=ISHELL
      JNEW=JSHELL
      CALL PROPB1 (OPA,VAL)
C     SAVE THE INTEGRAL VALUES IN AO(LL,KK,NT), WHERE
C     1 <= LL,KK,NT <= 10. ALL INDEXING IS DONE LINEARLY.
      J1=LL+10*(KK-1)
C
      DO 100 MM=1,NT
      AO(J1)=VAL(MM)
  100 J1=J1+100
C
C     AVOID THE TRANSFORMATION IF POSSIBLE.
C
      IF (ITRANS.EQ.0) GO TO 800
C     AT LEAST ONE SHELL IS D/F TYPE - EXPAND AO TO FULL MATRICES IF
C     ISHELL=JSHELL.
      IF (IMJ.NE.0) GO TO 200
C
      DO 110 K=ISTART,IEND
      DO 110 L=ISTART,K
      J1=L+10*(K-1)
      J2=K+10*(L-1)
      DO 110 MM=1,NT
      AO(J2)=AO(J1)
      J1=J1+100
  110 J2=J2+100
C
C     DO D/F TRANSFORMATION AT J CENTER IF NECESSARY.
C
  200 IF (JTYPE-2) 300,210,250
C     D TRANSFORMATION.
  210 IF (IOP(8) .EQ. 0) GO TO 300
C     LOOP OVER EACH OF THE NT INTEGRAL BLOCKS.
      DO 220 MM=1,NT
      J1=100*MM+10*ISTART-109
C     LOOP OVER ALL BASIS FUNCTIONS AT I CENTER.
      DO 220 K=ISTART,IEND
C     SAVE X**2.
      T=AO(J1)
      AO(J1  )=AO(J1+2)-PT5*(T+AO(J1+1))
      T=R3OV2*(T-AO(J1+1))
      AO(J1+1)=AO(J1+4)
      AO(J1+2)=AO(J1+5)
      AO(J1+4)=AO(J1+3)
      AO(J1+3)=T
  220 J1=J1+10
      JEND=5
      GO TO 300
C
C     F TRANSFORMATION.
C     LOOP OVER EACH OF THE NT INTEGRAL BLOCKS.
  250 DO 260 MM=1,NT
      J1=100*MM+10*ISTART-109
C     LOOP OVER ALL BASIS FUNCTIONS AT I CENTER.
      DO 260 K=ISTART,IEND
C     FOR CARTESIAN F ORBITALS, SIMPLY RE-ORDER THE FUNCTIONS.
      IF (IOP(8) .EQ. 0) THEN
         T=AO(J1+3)
         AO(J1+3)=AO(J1+5)
         AO(J1+5)=AO(J1+4)
         AO(J1+4)=T
         T=AO(J1+6)
         AO(J1+6)=AO(J1+7)
         AO(J1+7)=AO(J1+8)
         AO(J1+8)=T
C     FOR PURE F ORBITALS, APPLY 10F-7F TRANSFORM TO THE ORIGINAL ORDER.
      ELSE
         F0 =AO(J1+2)-R2*(AO(J1+4)+AO(J1+6))
         F1P=R4*(Z1*AO(J1+7)-AO(J1)-Z2*AO(J1+5))
         F1M=R4*(Z1*AO(J1+8)-AO(J1+1)-Z2*AO(J1+3))
         F2P=R3*(AO(J1+4)-AO(J1+6))
         F2M=AO(J1+9)
         F3P=R1*(AO(J1)-Z3*AO(J1+5))
         F3M=R1*(Z3*AO(J1+3)-AO(J1+1))
         AO(J1  )=F0
         AO(J1+1)=F1P
         AO(J1+2)=F1M
         AO(J1+3)=F2P
         AO(J1+4)=F2M
         AO(J1+5)=F3P
         AO(J1+6)=F3M
      END IF
  260 J1=J1+10
      IF (IOP(8) .EQ. 1) JEND=7
C
C     DO D/F TRANSFORMATION AT I CENTER IF NECESSARY.
C
  300 IF (ITYPE-2) 800,310,350
C     D TRANSFORMATION.
  310 IF (IOP(8) .EQ. 0) GO TO 800
C     LOOP OVER EACH OF THE NT INTEGRAL BLOCKS.
      DO 320 MM=1,NT
      J1=100*(MM-1)+JSTART
C     LOOP OVER ALL BASIS FUNCTIONS AT J CENTER.
      DO 320 L=JSTART,JEND
C     SAVE X**2.
      T=AO(J1)
      AO(J1   )=AO(J1+20)-PT5*(T+AO(J1+10))
      T=R3OV2*(T-AO(J1+10))
      AO(J1+10)=AO(J1+40)
      AO(J1+20)=AO(J1+50)
      AO(J1+40)=AO(J1+30)
      AO(J1+30)=T
  320 J1=J1+1
      IEND=5
      GO TO 800
C
C     F TRANSFORMATION.
C     LOOP OVER EACH OF THE NT INTEGRAL BLOCKS.
  350 DO 360 MM=1,NT
      J1=100*(MM-1)+JSTART
C     LOOP OVER ALL BASIS FUNCTIONS AT J CENTER.
      DO 360 L=JSTART,JEND
C     FOR CARTESIAN F ORBITALS, SIMPLY RE-ORDER THE FUNCTIONS.
      IF (IOP(8) .EQ. 0) THEN
         T=AO(J1+30)
         AO(J1+30)=AO(J1+50)
         AO(J1+50)=AO(J1+40)
         AO(J1+40)=T
         T=AO(J1+60)
         AO(J1+60)=AO(J1+70)
         AO(J1+70)=AO(J1+80)
         AO(J1+80)=T
C     FOR PURE F ORBITALS, APPLY 10F-7F TRANSFORM TO THE ORIGINAL ORDER.
      ELSE
         F0 =AO(J1+20)-R2*(AO(J1+40)+AO(J1+60))
         F1P=R4*(Z1*AO(J1+70)-AO(J1)-Z2*AO(J1+50))
         F1M=R4*(Z1*AO(J1+80)-AO(J1+10)-Z2*AO(J1+30))
         F2P=R3*(AO(J1+40)-AO(J1+60))
         F2M=AO(J1+90)
         F3P=R1*(AO(J1)-Z3*AO(J1+50))
         F3M=R1*(Z3*AO(J1+30)-AO(J1+10))
         AO(J1   )=F0
         AO(J1+10)=F1P
         AO(J1+20)=F1M
         AO(J1+30)=F2P
         AO(J1+40)=F2M
         AO(J1+50)=F3P
         AO(J1+60)=F3M
      END IF
  360 J1=J1+1
      IF (IOP(8) .EQ. 1) IEND=7
C
C     FISH OUT THE INTEGRALS AND ADD TO THE MO INTEGRALS IN DINT.
C
  800 DO 850 KK=ISTART,IEND
      IF (IMJ.EQ.0) JEND=KK
C
      DO 850 LL=JSTART,JEND
      J1=LL+10*(KK-1)
C
      DO 810 MM=1,NT
      VAL(MM)=AO(J1)
  810 J1=J1+100
C
      K=IAOS+KK
      L=JAOS+LL
      IF (IOP21.NE.0) WRITE (IOUT,1010) K,L,(VAL(I),I=1,NT)
      IF (IGRID.NE.0 .OR. ISAVE.LE.0) GO TO 811
      MM = NT
      IF (MM .GT. 4) MM = 4
      WRITE (ISAVE,1060) K,L,(VAL(I),I=1,MM)
      IF (NT .LE. 4) GO TO 811
      MM = NT
      IF (MM .GT. 8) MM = 8
      WRITE (ISAVE,1061) (VAL(I),I=5,MM)
      IF (NT .GT. 8) WRITE (ISAVE,1061) (VAL(I),I=9,NT)
C
  811 IF (IOP20.NE.2) GO TO 815
C
C     USE DENSITY.
C
      FAC=Y(K,L)
      IF (K.NE.L) FAC=FAC+FAC
      DO 812 MM=1,NT
  812 DINT(2,MM)=DINT(2,MM)+FAC*VAL(MM)
      GO TO 850
C
C     USE COEFFICIENTS - FIRST ALPHA THEN BETA.
C
  815 COD=TWO
      IF (K.EQ.L) COD=ONE
      DO 820 I=1,NAE
      NU=I+3
      FAC=Y(K,I)*Y(L,I)*COD
      DO 820 MM=1,NT
  820 DINT(NU,MM)=DINT(NU,MM)+FAC*VAL(MM)
C
      IF (IOP9.EQ.0) GO TO 850
      DO 840 I=1,NBEL
      NU=I+3
      FAC=X(K,I)*X(L,I)*COD
      DO 840 MM=1,NT
  840 DINT(NU,MM)=DINT(NU,MM)+FAC*VAL(MM)
  850 CONTINUE
C
  900 CONTINUE
C
      IF (IOP20.EQ.2) GO TO 930
      DO 920 I=1,NT
      SUM=ZERO
      DO 910 J=1,NAE
  910 SUM=SUM+DINT(J+3,I)
      IF (IOP9.EQ.0) SUM=SUM+SUM
  920 DINT(2,I)=SUM
C
  930 DO 940 I=1,NT
  940 DINT(3,I)=DINT(1,I)+DINT(2,I)
C
C     CALCULATE TOTAL DIPOLE MOMENT.
C
      IF (MPROP .EQ. 4) DINT(3,4) = DSQRT(DINT(3,1)**2+DINT(3,2)**2+
     1 DINT(3,3)**2)
      IF (IGRID.EQ.1) GO TO 970
C
C     SAVE ELECTRONIC SECOND MOMENTS FOR POLARIZABILITY ESTIMATES.
C
      IF (IOP(25) .LT. 0) THEN
         DO 950 I=1,NT
  950    VAL(I) = DINT(2,I)
         CALL TWRITE (4, VAL, 6, 1, 6, 1, 0)
         RETURN
      ENDIF
C
      IF (IOP21.NE.0) WRITE (IOUT,1040) LPROP,LABEL,CPROPA
      CALL PRNT
C
      IF (ISAVE.LE.0) GO TO 960
      WRITE (IOUT,1030) ISAVE
      NLINES=NLINES+3
      WRITE (ISAVE,1080)
C
  960 WRITE (IOUT,1050)
      NLINES=NLINES+4
      RETURN
C
C     GRID GENERATION - WRITE OUT THE COMPONENT VALUES ON UNIT ISAVE.
C
  970 WRITE (ISAVE,1070) (DINT(3,I),I=1,NT)
      RETURN
C
C     CHECK JOB.
C
  980 IF (IOP(25) .LT. 0) RETURN
      IF (ISAVE .LE. 0) GO TO 960
      WRITE (IOUT,1090) ISAVE
      NLINES = NLINES + 4
      GO TO 960
      END
      SUBROUTINE PROPB1(OPA,VAL)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA, NB=#NB)
C     PARAMETER (NS=#NS, NP=#NP)
C##
      PARAMETER (NA= 36, NB=200)
      PARAMETER (NS=120, NP=300)
C###
      PARAMETER (NBP3=NB+3)
      PARAMETER (ZERO=0.0D0, ONE=1.0D0)
C
      INTEGER SHELLA,SHELLN,SHELLT,SHELLC,AOS
C
      EXTERNAL OPA
C
      COMMON /A/ IOP(99),IC1(7),IC2(NA),C(NA,3),CD(4),IC3(401)
C
      COMMON/OEP1/ROOT3,ROOT5,INEW,JNEW,KK,LL,ITYPE,JTYPE,ANORM(20),
     1 ALPHA,BETA,EA(3),MPROP,NT,ISAVE,IFILL(3),CPROP(3),
     2 CPROPA(3),DINT(NBP3,10),AO(1000)
      COMMON/B/IXYZ(NS),SHELLA(NS),SHELLN(NS),SHELLT(NS),
     1 SHELLC(NS),AOS(NS),NSHELL,MAXTYP,EXX(NP),C12(NP,2)
C
      DIMENSION A(3),B(3),D(3),E(3),V(10),VA(10),AA(20),BB(20),DD(84)
      DIMENSION LIN(84),MIN(84),NIN(84),VAL(10),IAONUM(4)
C
       DATA LIN/0,1,0,0,2,0,0,1,1,0,3,0,0,2,2,1,0,1,0,1,4,0,0,3,3,1,0,1,
     1 0,2,2,0,2,1,1,5,0,0,4,4,0,1,1,0,3,3,0,2,2,0,2,2,1,3,1,1,6,0,0,5,5
     2 ,0,1,1,0,4,4,0,2,2,0,3,3,0,4,1,1,2,2,2,1,1,3,3/
       DATA MIN/0,0,1,0,0,2,0,1,0,1,0,3,0,1,0,2,2,0,1,1,0,4,0,1,0,3,3,0,
     1 1,2,0,2,1,2,1,0,5,0,1,0,4,4,0,1,2,0,3,3,0,2,2,1,2,1,3,1,0,6,0,1,0
     2 ,5,5,0,1,2,0,4,4,0,2,3,0,3,1,4,1,2,1,3,2,3,1,2/
       DATA NIN/0,0,0,1,0,0,2,0,1,1,0,0,3,0,1,0,1,2,2,1,0,0,4,0,1,0,1,3,
     1 3,0,2,2,1,1,2,0,0,5,0,1,1,0,4,4,0,2,2,0,3,3,1,2,2,1,1,3,0,0,6,0,1
     2 ,1,0,5,5,0,2,2,0,4,4,0,3,3,1,1,4,2,3,1,3,2,2,1/
      DATA TENM8/1.0D-8/, TENM10/1.0D-10/, TWENTY5/25.0D0/
      DATA IAONUM/0,0,4,10/
C
C     IPROP IS USED FOR PROPERTIES THAT REQUIRE MORE THAN 1 PASS PER
C     INTEGRAL OVER THE PRIMITIVES - NEEDED FOR DERIVATIVE PROPERTIES
C     LIKE THE OPTICAL ROTATORY STRENGTH.
C     ON THE FIRST PASS, IPROP=MPROP, THE PROPERTY NUMBER.
C     FOR SUBSEQUENT PASSES, IF NECESSARY, IPROP IS SET TO ANY
C     NEGATIVE NUMBER, AND THE LOOPING STOPS ON THE PASS WHERE
C     IPROP IS SET TO 0.
C
      IPROP=MPROP
      FLAG=ONE
      DO 9 I=1,NT
    9 VAL(I)=ZERO
      M=IAONUM(ITYPE+1)+KK
      N=IAONUM(JTYPE+1)+LL
C     ORDER THE AO TYPES SO THAT M .GE. N.
      IF (M.GE.N) GO TO 10
      I=M
      M=N
      N=I
      I=INEW
      INEW=JNEW
      JNEW=I
      IF (MPROP.EQ.14) FLAG=-ONE
   10 I=IXYZ(INEW)
      A(1)=C(I,1)
      A(2)=C(I,2)
      A(3)=C(I,3)
      J=IXYZ(JNEW)
      B(1)=C(J,1)
      B(2)=C(J,2)
      B(3)=C(J,3)
      ICOEF=1
      IF (M.GE.2.AND.M.LE.4) ICOEF=2
      JCOEF=1
      IF (N.GE.2.AND.N.LE.4) JCOEF=2
      IST=SHELLA(INEW)
      JST=SHELLA(JNEW)
      IEND=IST+SHELLN(INEW)-1
      JEND=JST+SHELLN(JNEW)-1
      NSAVE=N
      DO 80 K=IST,IEND
      DO 85 L=JST,JEND
      DO 90 I=1,20
      AA(I)=ZERO
   90 BB(I)=ZERO
      COEF=C12(K,ICOEF)*C12(L,JCOEF)*ANORM(M)*ANORM(N)
      IF (DABS(COEF).LT.TENM8) GO TO 85
      ALPHA=EXX(K)
      BETA=EXX(L)
      GAMA=ALPHA+BETA
      ABSQD=ZERO
      DO 20 I=1,3
      E(I)=(ALPHA*A(I)+BETA*B(I))/GAMA
   20 ABSQD=ABSQD+(B(I)-A(I))*(B(I)-A(I))
      IF (ALPHA*BETA*ABSQD/GAMA .GT. TWENTY5) GO TO 85
      EFACT=COEF*DEXP(-ALPHA*BETA*ABSQD/GAMA)
      EFACT=EFACT*FLAG
      IF (DABS(EFACT).LE.TENM8) GO TO 85
      DO 3 I=1,NT
    3 VA(I)=ZERO
C     STORE E-B IN EA, USED FOR OPTICAL ROTATORY STRENGTH ONLY.
      DO 25 I=1,3
      EA(I)=E(I)-B(I)
   25 D(I)=E(I)-CPROP(I)
   30 AA(M)=ONE
      BB(N)=ONE
      CALL SHFT71 (AA,A,E,M)
      CALL SHFT71 (BB,B,E,N)
      DO 24 I=1,84
   24 DD(I)=ZERO
      IF (M .LE. 10) THEN
         CALL PRODS1 (AA, BB, DD, M, N, MN)
      ELSE
         CALL PRODF1 (AA, BB, DD, MN)
      END IF
      DO 60 I=1,MN
      IF (DABS(DD(I))-TENM8)60,60,40
   40 CALL OPA (LIN(I),MIN(I),NIN(I),GAMA,V,D,IPROP)
      DO 50 J=1,NT
      IF (DABS(V(J)).LE.TENM10) GO TO 50
      VA(J)=DD(I)*V(J)+VA(J)
   50 CONTINUE
   60 CONTINUE
      IF (IPROP.GE.0 .AND. IPROP.NE.14) GO TO 64
C     STORE LMN IN EA, USED FOR OPTICAL ROTATORY STRENGTH ONLY.
      EA(1)=DFLOAT(LIN(NSAVE))
      EA(2)=DFLOAT(MIN(NSAVE))
      EA(3)=DFLOAT(NIN(NSAVE))
      GO TO (64,100,110,120,120,120,120,130,160,170),NSAVE
C     X-TYPE
  100 N=N-1
      GO TO 200
C     Y-TYPE
  110 N=N-2
      GO TO 200
C     Z-, XX-, YY-, ZZ-TYPE
  120 N=N-3
      GO TO 200
C     XY-TYPE
  130 IF (IPROP.LT.0) GO TO 150
  140 N=NSAVE-5
      IPROP=-1
      GO TO 300
  150 N=N-1
      GO TO 200
C     XZ-TYPE
  160 IF (IPROP.GT.0) GO TO 140
      N=N-2
      GO TO 200
C     YZ-TYPE
  170 IF (IPROP.LT.0) GO TO 150
      N=N-6
      IPROP=-1
      GO TO 300
  200 IPROP=0
  300 DO 62 I=1,20
      AA(I)=ZERO
   62 BB(I)=ZERO
      GO TO 30
   64 N=NSAVE
      IPROP=MPROP
      DO 70 I=1,NT
   70 VAL(I)=VAL(I)+EFACT*VA(I)
   85 CONTINUE
   80 CONTINUE
      RETURN
      END
      SUBROUTINE SHFT71(AA,A,E,M)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      DIMENSION AA(20),A(3),E(3)
C
      DATA TWO/2.0D0/, THREE/3.0D0/
C
      CX=E(1)-A(1)
      CY=E(2)-A(2)
      CZ=E(3)-A(3)
C
      GO TO (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20),M
C                            X-TYPE
    2 AA(1)=CX*AA(2)
      RETURN
C                            Y-TYPE
    3 AA(1)=CY*AA(3)
      RETURN
C                            Z-TYPE
    4 AA(1)=CZ*AA(4)
      RETURN
C                            XX-TYPE
    5 AA(1)=CX*CX*AA(5)
      AA(2)=TWO*CX*AA(5)
      RETURN
C                            YY-TYPE
    6 AA(1)=CY*CY*AA(6)
      AA(3)=TWO*CY*AA(6)
      RETURN
C                            ZZ-TYPE
    7 AA(1)=CZ*CZ*AA(7)
      AA(4)=TWO*CZ*AA(7)
      RETURN
C                            XY-TYPE
    8 AA(1)=CX*CY*AA(8)
      AA(2)=CY*AA(8)
      AA(3)=CX*AA(8)
      RETURN
C                            XZ-TYPE
    9 AA(1)=CX*CZ*AA(9)
      AA(2)=CZ*AA(9)
      AA(4)=CX*AA(9)
      RETURN
C                            YZ-TYPE
   10 AA(1)=CY*CZ*AA(10)
      AA(3)=CZ*AA(10)
      AA(4)=CY*AA(10)
      RETURN
C                            XXX-TYPE
   11 AA(1)=(CX**3)*AA(11)
      AA(2)=THREE*(CX**2)*AA(11)
      AA(5)=THREE*CX*AA(11)
      RETURN
C                            YYY-TYPE
   12 AA(1)=(CY**3)*AA(12)
      AA(3)=THREE*(CY**2)*AA(12)
      AA(6)=THREE*CY*AA(12)
      RETURN
C                            ZZZ-TYPE
   13 AA(1)=(CZ**3)*AA(13)
      AA(4)=THREE*(CZ**2)*AA(13)
      AA(7)=THREE*CZ*AA(13)
      RETURN
C                            XXY-TYPE
   14 AA(1)=CX*CX*CY*AA(14)
      AA(2)=TWO*CX*CY*AA(14)
      AA(3)=CX*CX*AA(14)
      AA(5)=CY*AA(14)
      AA(8)=TWO*CX*AA(14)
      RETURN
C                            XXZ-TYPE
   15 AA(1)=CX*CX*CZ*AA(15)
      AA(2)=TWO*CX*CZ*AA(15)
      AA(4)=CX*CX*AA(15)
      AA(5)=CZ*AA(15)
      AA(9)=TWO*CX*AA(15)
      RETURN
C                            YYX-TYPE
   16 AA(1)=CY*CY*CX*AA(16)
      AA(2)=CY*CY*AA(16)
      AA(3)=TWO*CX*CY*AA(16)
      AA(6)=CX*AA(16)
      AA(8)=TWO*CY*AA(16)
      RETURN
C                            YYZ-TYPE
   17 AA(1)=CY*CY*CZ*AA(17)
      AA(3)=TWO*CY*CZ*AA(17)
      AA(4)=CY*CY*AA(17)
      AA(6)=CZ*AA(17)
      AA(10)=TWO*CY*AA(17)
      RETURN
C                            ZZX-TYPE
   18 AA(1)=CZ*CZ*CX*AA(18)
      AA(2)=CZ*CZ*AA(18)
      AA(4)=TWO*CX*CZ*AA(18)
      AA(7)=CX*AA(18)
      AA(9)=TWO*CZ*AA(18)
      RETURN
C                            ZZY-TYPE
   19 AA(1)=CY*CZ*CZ*AA(19)
      AA(3)=CZ*CZ*AA(19)
      AA(4)=TWO*CY*CZ*AA(19)
      AA(7)=CY*AA(19)
      AA(10)=TWO*CZ*AA(19)
      RETURN
C                            XYZ-TYPE
   20 AA(1)=CX*CY*CZ*AA(20)
      AA(2)=CY*CZ*AA(20)
      AA(3)=CX*CZ*AA(20)
      AA(4)=CX*CY*AA(20)
      AA(8)=CZ*AA(20)
      AA(9)=CY*AA(20)
      AA(10)=CX*AA(20)
C                            S-TYPE
    1 RETURN
      END
      SUBROUTINE PRODS1(C,D,S,M,N,MN)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      DIMENSION C(20),D(20),S(84)
C
      S(1)=C(1)*D(1)
      GO TO (1,2,3,4,5,6,7,8,9,10),M
C                  <S/S>
    1 MN=1
      RETURN
    2 GO TO (21,22),N
    3 GO TO (21,23,22),N
    4 GO TO (21,23,23,22),N
    5 GO TO (24,25,26,28,27),N
    6 GO TO (24,28,25,26,29,27),N
    7 GO TO (24,28,28,25,29,29,27),N
    8 GO TO (30,32,33,34,35,38,39,36),N
    9 GO TO (30,32,34,33,35,39,37,39,36),N
   10 GO TO (31,34,40,40,39,38,37,34,34,36),N
C                  <X/S>,<Y/S>,<Z/S>
   21 S(M)=C(M)*D(1)
      MN=M
      RETURN
C                  <X/X>,<Y/Y>,<Z/Z>
   22 S(M)=C(1)*D(M)+C(M)*D(1)
      S(M+3)=C(M)*D(M)
      MN=M+3
      RETURN
C                  <Y/X>,<Z/X>,<Z/Y>
   23 S(N)=C(1)*D(N)
      S(M)=C(M)*D(1)
      S(M+N+3)=C(M)*D(N)
      MN=M+N+3
      RETURN
C                  <XX/S>,<YY/S>,<ZZ/S>
   24 S(M-3)= C(M-3)*D(1)
      S(M)= C(M)*D(1)
      MN=M
      RETURN
C                  <XX/X>,<YY/Y>,<ZZ/Z>
   25 S(N)= C(N)*D(1)+C(1)*D(N)
      S(M)= C(N)*D(N)+C(M)*D(1)
      S(M+6)= C(M)*D(N)
      MN= M+6
      RETURN
C                  <XX/Y>,<YY/Z>
   26 S(N-1)= C(N-1)*D(1)
      S(N)= C(1)*D(N)
      S(M+N)= C(N-1)*D(N)
      S(M)= C(M)*D(1)
      MN= M+9
      IF (M.EQ.6) MN=17
      S(MN)=C(M)*D(N)
      RETURN
C                  <XX/XX>,<YY/YY>,<ZZ/ZZ>
   27 S(M-3)= C(1)*D(M-3) + C(M-3)*D(1)
      S(N)= C(N)*D(1) + C(1)*D(N)+C(N-3)*D(N-3)
      S(N+6)=C(N)*D(N-3)+C(N-3)*D(N)
      MN= M+16
      S(MN)=C(M)*D(N)
      RETURN
C                  <XX/Z>,<YY/X>,<ZZ/X>,<ZZ/Y>
   28 S(N)= C(1)*D(N)
      MN=M+10
      IF (MN.EQ.17) MN=18
      S(M-3)= C(M-3)*D(1)
      S(M+N)= C(M-3)*D(N)
      S(M)= C(M)*D(1)
      IF (N.EQ.3) MN=19
      S(MN)= C(M)*D(N)
      RETURN
C                  <YY/XX>,<ZZ/XX>,<ZZ/YY>
   29 S(N-3)=C(1)*D(N-3)
      S(N)= C(1)*D(N)
      S(M-3)= C(M-3)*D(1)
      S(M+N-3)= C(M-3)*D(N-3)
      S(2*N+M-2)= C(M-3)*D(N)
      S(M)= C(M)*D(1)
      S(2*M+N-1)= C(M)*D(N-3)
      IF (N.NE.6) MN=M+24
      IF (N.EQ.6) MN=32
      S(MN)=C(M)*D(N)
      RETURN
C                  <XY/S>,<XZ/S>
   30 S(M-5)=C(M-5)*D(1)
C                  <YZ/S>
   31 S(M-6)= C(M-6)*D(1)
      IF (M.EQ.9)S(2)=C(2)*D(1)
      S(M)= C(M)*D(1)
      IF (M.EQ.10)S(3)= C(3)*D(1)
      MN=M
      RETURN
C                  <XY/X>,<XZ/X>
   32 S(N)= C(1)*D(N) + C(N)*D(1)
      S(M-5)=C(M-5)*D(1)
      S(N+3)= C(N)*D(N)
      S(M)= C(M-5)*D(N) + C(M)*D(1)
      S(M+6)= C(M)*D(N)
      MN= M+6
      RETURN
C                  <XY/Y>,<XZ/Z>
   33 S(2)=C(2)*D(1)
      S(N)=C(1)*D(N)+C(N)*D(1)
      S(N+3)=C(N)*D(N)
      S(M)=C(M)*D(1)+C(2)*D(N)
      MN=2*M
      S(MN)=C(M)*D(N)
      RETURN
C                  <XY/Z>,<XZ/Y>,<YZ/X>,<YZ/XY>,<YZ/XZ>
   34 S(2)=C(1)*D(2)+C(2)*D(1)
      S(3)=C(1)*D(3)+C(3)*D(1)
      S(4)=C(1)*D(4)+C(4)*D(1)
      S(8)=C(1)*D(8)+C(8)*D(1)+C(2)*D(3)+C(3)*D(2)
      S(9)=C(1)*D(9)+C(9)*D(1)+C(2)*D(4)+C(4)*D(2)
      S(10)=C(10)*D(1)+C(3)*D(4)+C(4)*D(3)
      IF (N.GT.4) GO TO 103
      MN=20
      S(MN)=C(M)*D(N)
      RETURN
  103 MN=N+26
      S(N-2)=C(N-5)*D(N-5)
      S(2*N)=C(N-5)*D(N)
      S(2*N+1)=C(M)*D(N-5)
      S(20)=C(M)*D(2)+C(M-N+2)*D(N)
      S(MN)=C(M)*D(N)
      RETURN
C                  <XY/XX>,<XZ/XX>
   35 S(2)=C(1)*D(2)+C(2)*D(1)
      S(M-5)=C(M-5)*D(1)
      S(N)=C(1)*D(N)+C(2)*D(2)
      S(M)=C(M)*D(1)+C(M-5)*D(2)
      S(11)=C(2)*D(N)
      S(M+6)=C(M)*D(2)+C(M-5)*D(N)
      MN=M+16
      S(MN)=C(M)*D(N)
      RETURN
C                  <XY/XY>,<XZ/XZ>,<YZ/YZ>
   36 S(M)=C(1)*D(M)+C(M)*D(1)
      MN=M+22
      S(MN)=C(M)*D(N)
      IF (M.EQ.10) GO TO 98
      S(M)=S(M)+C(2)*D(M-5)+C(M-5)*D(2)
      S(2)=C(1)*D(2)+C(2)*D(1)
      S(M-5)=C(1)*D(M-5)+C(M-5)*D(1)
      S(2*M)=C(M-5)*D(M)+C(M)*D(M-5)
      S(5)=C(2)*D(2)
      S(M-2)=C(M-5)*D(M-5)
      RETURN
   98 S(3)=C(1)*D(3)+C(3)*D(1)
      S(4)=C(1)*D(4)+C(4)*D(1)
      S(6)=C(3)*D(3)
      S(7)=C(4)*D(4)
      S(M)=S(M)+C(3)*D(4)+C(4)*D(3)
      S(19)=C(4)*D(10)+C(10)*D(4)
      RETURN
C                  <XZ/ZZ>,<YZ/ZZ>
   37 S(M-7)=C(M-7)*D(1)
      S(4)=C(1)*D(4)+C(4)*D(1)
      S(7)=C(1)*D(7)+C(4)*D(4)
      S(M)=C(M)*D(1)+C(M-7)*D(4)
      S(13)=C(4)*D(7)
      S(M+9)=C(M)*D(4)+C(3)*D(7)
      MN=M+19
      S(MN)=C(M)*D(N)
      RETURN
C                  <XY/YY>,<YZ/YY>
   38 S(3)=C(1)*D(3)+C(3)*D(1)
      S(6)=C(1)*D(6)+C(3)*D(3)
      S(12)=C(3)*D(6)
      IF (M.EQ.10) GO TO 100
      S(2)=C(2)*D(1)
      S(8)=C(8)*D(1)+C(2)*D(3)
      S(16)=C(8)*D(3)+C(2)*D(6)
      S(26)=C(8)*D(6)
      MN=26
      RETURN
  100 S(4)=C(4)*D(1)
      S(10)=C(10)*D(1)+C(4)*D(3)
      S(17)=C( 4)*D(6)+C(10)*D(3)
      S(27)=C(10)*D(6)
      MN=27
      RETURN
C                  <XY/ZZ>,<XZ/XY>,<YZ/XX>,<XZ/YY>
   39 S(2)=C(1)*D(2)+C(2)*D(1)
      S(3)=C(1)*D(3)+C(3)*D(1)
      S(4)=C(1)*D(4)+C(4)*D(1)
      S(8)=C(8)*D(1)+C(2)*D(3)+C(3)*D(2)+C(1)*D(8)
      S(9)=C(9)*D(1)+C(2)*D(4)+C(4)*D(2)
      S(10)=C(10)*D(1)+C(3)*D(4)+C(4)*D(3)
      S(20)=C(9)*D(3)+C(8)*D(4)+C(10)*D(2)+C(4)*D(8)
      MN=N+28
      IF (N.EQ.8) MN=33
      S(MN)=C(M)*D(N)
      IF (M.EQ.8) GO TO 101
      IF (N.EQ.6) GO TO 101
      S(5)=C(1)*D(5)+C(2)*D(2)
      S(14)=C(3)*D(5)+C(2)*D(8)
      S(15)=C(4)*D(5)+C(9)*D(2)
      RETURN
  101 S(N)=C(1)*D(N)
      S(2*N+4)=C(2)*D(N)
      S(2*N+5)=C(M-5)*D(N)
      RETURN
C                  <YZ/Y>,<YZ/Z>
   40 S(N)=C(1)*D(N)+C(N)*D(1)
      S(M-N-3)=C(M-N-3)*D(1)
      S(N+3)=C(N)*D(N)
      S(M)=C(M)*D(1)+C(M-N-3)*D(N)
      MN=M+2*N+1
      S(MN)=C(M)*D(N)
      RETURN
      END
      SUBROUTINE PRODF1 (C, D, S, MN)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      DIMENSION C(20),D(20),S(84)
C
    1 S( 1)=C( 1)*D( 1)
    2 S( 2)=C( 2)*D( 1)+C( 1)*D( 2)
    3 S( 3)=C( 3)*D( 1)+C( 1)*D( 3)
    4 S( 4)=C( 4)*D( 1)+C( 1)*D( 4)
    5 S( 5)=C( 5)*D( 1)+C( 1)*D( 5)+C( 2)*D( 2)
    6 S( 6)=C( 6)*D( 1)+C( 1)*D( 6)+C( 3)*D( 3)
    7 S( 7)=C( 7)*D( 1)+C( 1)*D( 7)+C( 4)*D( 4)
    8 S( 8)=C( 8)*D( 1)+C( 1)*D( 8)+C( 3)*D( 2)+C( 2)*D( 3)
    9 S( 9)=C( 9)*D( 1)+C( 1)*D( 9)+C( 4)*D( 2)+C( 2)*D( 4)
   10 S(10)=C(10)*D( 1)+C( 1)*D(10)+C( 4)*D( 3)+C( 3)*D( 4)
   11 S(11)=C(11)*D( 1)+C( 1)*D(11)+C( 5)*D( 2)+C( 2)*D( 5)
   12 S(12)=C(12)*D( 1)+C( 1)*D(12)+C( 6)*D( 3)+C( 3)*D( 6)
   13 S(13)=C(13)*D( 1)+C( 1)*D(13)+C( 7)*D( 4)+C( 4)*D( 7)
   14 S(14)=C(14)*D( 1)+C( 1)*D(14)+C( 8)*D( 2)+C( 2)*D( 8)
     1     +C( 5)*D( 3)+C( 3)*D( 5)
   15 S(15)=C(15)*D( 1)+C( 1)*D(15)+C( 9)*D( 2)+C( 2)*D( 9)
     1     +C( 5)*D( 4)+C( 4)*D( 5)
   16 S(16)=C(16)*D( 1)+C( 1)*D(16)+C( 6)*D( 2)+C( 2)*D( 6)
     1     +C( 8)*D( 3)+C( 3)*D( 8)
   17 S(17)=C(17)*D( 1)+C( 1)*D(17)+C(10)*D( 3)+C( 3)*D(10)
     1     +C( 6)*D( 4)+C( 4)*D( 6)
     1     +C( 9)*D( 4)+C( 4)*D( 9)
   18 S(18)=C(18)*D( 1)+C( 1)*D(18)+C( 7)*D( 2)+C( 2)*D( 7)
   19 S(19)=C(19)*D( 1)+C( 1)*D(19)+C( 7)*D( 3)+C( 3)*D( 7)
     1     +C(10)*D( 4)+C( 4)*D(10)
   20 S(20)=C(20)*D( 1)+C( 1)*D(20)+C(10)*D( 2)+C( 2)*D(10)
     1     +C( 9)*D( 3)+C( 3)*D( 9)+C( 8)*D( 4)+C( 4)*D( 8)
   21 S(21)=C(11)*D( 2)+C( 2)*D(11)+C( 5)*D( 5)
   22 S(22)=C(12)*D( 3)+C( 3)*D(12)+C( 6)*D( 6)
   23 S(23)=C(13)*D( 4)+C( 4)*D(13)+C( 7)*D( 7)
   24 S(24)=C(14)*D( 2)+C( 2)*D(14)+C(11)*D( 3)+C( 3)*D(11)
     1     +C( 8)*D( 5)+C( 5)*D( 8)
   25 S(25)=C(15)*D( 2)+C( 2)*D(15)+C( 9)*D( 5)+C( 5)*D( 9)
     1     +C( 4)*D(11)+C(11)*D( 4)
   26 S(26)=C(16)*D( 3)+C( 3)*D(16)+C(12)*D( 2)+C( 2)*D(12)
     1     +C( 6)*D( 8)+C( 8)*D( 6)
   27 S(27)=C(17)*D( 3)+C( 3)*D(17)+C(12)*D( 4)+C( 4)*D(12)
     1     +C( 6)*D(10)+C(10)*D( 6)
   28 S(28)=C(18)*D( 4)+C( 4)*D(18)+C(13)*D( 2)+C( 2)*D(13)
     1     +C( 7)*D( 9)+C( 9)*D( 7)
   29 S(29)=C(19)*D( 4)+C( 4)*D(19)+C(13)*D( 3)+C( 3)*D(13)
     1     +C( 7)*D(10)+C(10)*D( 7)
   30 S(30)=C(16)*D( 2)+C( 2)*D(16)+C(14)*D( 3)+C( 3)*D(14)
     1     +C( 5)*D( 6)+C( 6)*D( 5)+C( 8)*D( 8)
   31 S(31)=C(18)*D( 2)+C( 2)*D(18)+C(15)*D( 4)+C( 4)*D(15)
     1     +C( 5)*D( 7)+C( 7)*D( 5)+C( 9)*D( 9)
   32 S(32)=C(19)*D( 3)+C( 3)*D(19)+C(17)*D( 4)+C( 4)*D(17)
     1     +C( 6)*D( 7)+C( 7)*D( 6)+C(10)*D(10)
   33 S(33)=C(20)*D( 2)+C( 2)*D(20)+C(15)*D( 3)+C( 3)*D(15)
     1     +C(14)*D( 4)+C( 4)*D(14)+C( 8)*D( 9)+C( 9)*D( 8)
     1     +C( 5)*D(10)+C(10)*D( 5)
   34 S(34)=C(20)*D( 3)+C( 3)*D(20)+C(17)*D( 2)+C( 2)*D(17)
     1     +C(16)*D( 4)+C( 4)*D(16)+C( 6)*D( 9)+C( 9)*D( 6)
     1     +C( 8)*D(10)+C(10)*D( 8)
   35 S(35)=C(20)*D( 4)+C( 4)*D(20)+C(19)*D( 2)+C( 2)*D(19)
     1     +C(18)*D( 3)+C( 3)*D(18)+C( 9)*D(10)+C(10)*D( 9)
     1     +C( 7)*D( 8)+C( 8)*D( 7)
   36 S(36)=C(11)*D( 5)+C( 5)*D(11)
   37 S(37)=C(12)*D( 6)+C( 6)*D(12)
   38 S(38)=C(13)*D( 7)+C( 7)*D(13)
   39 S(39)=C(14)*D( 5)+C( 5)*D(14)+C(11)*D( 8)+C( 8)*D(11)
   40 S(40)=C(11)*D( 9)+C( 9)*D(11)+C(15)*D( 5)+C( 5)*D(15)
   41 S(41)=C(12)*D(10)+C(10)*D(12)+C( 6)*D(17)+C(17)*D( 6)
   42 S(42)=C(16)*D( 6)+C( 6)*D(16)+C(12)*D( 8)+C( 8)*D(12)
   43 S(43)=C(18)*D( 7)+C( 7)*D(18)+C(13)*D( 9)+C( 9)*D(13)
   44 S(44)=C(19)*D( 7)+C( 7)*D(19)+C(13)*D(10)+C(10)*D(13)
   45 S(45)=C(16)*D( 5)+C( 5)*D(16)+C(14)*D( 8)+C( 8)*D(14)
     1     +C(11)*D( 6)+C( 6)*D(11)
   46 S(46)=C(18)*D( 5)+C( 5)*D(18)+C(15)*D( 9)+C( 9)*D(15)
     1     +C(11)*D( 7)+C( 7)*D(11)
   47 S(47)=C(19)*D( 6)+C( 6)*D(19)+C(17)*D(10)+C(10)*D(17)
     1     +C(12)*D( 7)+C( 7)*D(12)
   48 S(48)=C(16)*D( 8)+C( 8)*D(16)+C(14)*D( 6)+C( 6)*D(14)
     1     +C(12)*D( 5)+C( 5)*D(12)
   49 S(49)=C(18)*D( 9)+C( 9)*D(18)+C(15)*D( 7)+C( 7)*D(15)
   50 S(50)=C(19)*D(10)+C(10)*D(19)+C(17)*D( 7)+C( 7)*D(17)
     1     +C(13)*D( 6)+C( 6)*D(13)
   51 S(51)=C(20)*D( 8)+C( 8)*D(20)
     1     +C(17)*D( 5)+C( 5)*D(17)+C(16)*D( 9)+C( 9)*D(16)
     1     +C(14)*D(10)+C(10)*D(14)+C( 6)*D(15)+C(15)*D( 6)
   52 S(52)=C(20)*D( 9)+C( 9)*D(20)+C(19)*D( 5)+C( 5)*D(19)
     1     +C(18)*D( 8)+C( 8)*D(18)+C(15)*D(10)+C(10)*D(15)
     1     +C(14)*D( 7)+C( 7)*D(14)
   53 S(53)=C(20)*D(10)+C(10)*D(20)+C(19)*D( 8)+C( 8)*D(19)
     1     +C(18)*D( 6)+C( 6)*D(18)+C(17)*D( 9)+C( 9)*D(17)
     1     +C(16)*D( 7)+C( 7)*D(16)
   54 S(54)=C(20)*D( 5)+C( 5)*D(20)+C(15)*D( 8)+C( 8)*D(15)
     1     +C(14)*D( 9)+C( 9)*D(14)+C(11)*D(10)+C(10)*D(11)
   55 S(55)=C(20)*D( 6)+C( 6)*D(20)+C(17)*D( 8)+C( 8)*D(17)
     1     +C(16)*D(10)+C(10)*D(16)+C(12)*D( 9)+C( 9)*D(12)
   56 S(56)=C(20)*D( 7)+C( 7)*D(20)+C(19)*D( 9)+C( 9)*D(19)
     1     +C(18)*D(10)+C(10)*D(18)+C(13)*D( 8)+C( 8)*D(13)
   57 S(57)=C(11)*D(11)
   58 S(58)=C(12)*D(12)
   59 S(59)=C(13)*D(13)
   60 S(60)=C(14)*D(11)+C(11)*D(14)
   61 S(61)=C(15)*D(11)+C(11)*D(15)
   62 S(62)=C(17)*D(12)+C(12)*D(17)
   63 S(63)=C(16)*D(12)+C(12)*D(16)
   64 S(64)=C(18)*D(13)+C(13)*D(18)
   65 S(65)=C(19)*D(13)+C(13)*D(19)
   66 S(66)=C(16)*D(11)+C(11)*D(16)+C(14)*D(14)
   67 S(67)=C(18)*D(11)+C(11)*D(18)+C(15)*D(15)
   68 S(68)=C(19)*D(12)+C(12)*D(19)+C(17)*D(17)
   69 S(69)=C(14)*D(12)+C(12)*D(14)+C(16)*D(16)
   70 S(70)=C(15)*D(13)+C(13)*D(15)+C(18)*D(18)
   71 S(71)=C(17)*D(13)+C(13)*D(17)+C(19)*D(19)
   72 S(72)=C(16)*D(14)+C(14)*D(16)+C(12)*D(11)+C(11)*D(12)
   73 S(73)=C(18)*D(15)+C(15)*D(18)+C(13)*D(11)+C(11)*D(13)
   74 S(74)=C(19)*D(17)+C(17)*D(19)+C(13)*D(12)+C(12)*D(13)
   75 S(75)=C(20)*D(11)+C(11)*D(20)+C(15)*D(14)+C(14)*D(15)
   76 S(76)=C(20)*D(12)+C(12)*D(20)+C(17)*D(16)+C(16)*D(17)
   77 S(77)=C(20)*D(13)+C(13)*D(20)+C(19)*D(18)+C(18)*D(19)
   78 S(78)=C(19)*D(14)+C(14)*D(19)+C(18)*D(16)+C(16)*D(18)
     1     +C(17)*D(15)+C(15)*D(17)+C(20)*D(20)
   79 S(79)=C(20)*D(18)+C(18)*D(20)+C(19)*D(15)+C(15)*D(19)
     1     +C(14)*D(13)+C(13)*D(14)
   80 S(80)=C(20)*D(16)+C(16)*D(20)+C(15)*D(12)+C(12)*D(15)
     1     +C(14)*D(17)+C(17)*D(14)
   81 S(81)=C(20)*D(19)+C(19)*D(20)+C(18)*D(17)+C(17)*D(18)
     1     +C(16)*D(13)+C(13)*D(16)
   82 S(82)=C(20)*D(17)+C(17)*D(20)+C(19)*D(16)+C(16)*D(19)
     1     +C(12)*D(18)+C(18)*D(12)
   83 S(83)=C(20)*D(15)+C(15)*D(20)+C(19)*D(11)+C(11)*D(19)
     1     +C(18)*D(14)+C(14)*D(18)
   84 S(84)=C(20)*D(14)+C(14)*D(20)+C(17)*D(11)+C(11)*D(17)
     1     +C(16)*D(15)+C(15)*D(16)
   90  MN=84
      RETURN
      END
      SUBROUTINE ANONUC(CPROP,DINT,MM)
C
C     NO NUCLEAR COMPONENT.
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NB=#NB)
C##
      PARAMETER (NB=200)
C###
      PARAMETER (NBP3=NB+3)
      PARAMETER (ZERO=0.0D0)
C
      DIMENSION DINT(NBP3,10),CPROP(3)
C
      DO 1 I=1,10
    1 DINT(1,I)=ZERO
      RETURN
      END
      SUBROUTINE DIPNUC(CPROP,DINT,MM)
C
C     DIPOLE MOMENT.
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA, NB=#NB)
C##
      PARAMETER (NA= 36, NB=200)
C###
      PARAMETER (NBP3=NB+3)
      PARAMETER (ZERO=0.0D0)
C
      COMMON /A/ IOP(99)
      COMMON /A/ NATOMS,ICHARG,MULTIP,IAN(NA),NAE,NBE,NE,NBASIS,C(NA,3)
      COMMON /A/ CDUM(4),ICDUM(401)
C
      DIMENSION DINT(NBP3,10),CPROP(3),DNUC(3)
C
      DO 40 I=1,3
   40 DNUC(I)=ZERO
      DO 41 I=1,NATOMS
      IF (IAN(I).LE.0) GO TO 41
      Z=DFLOAT(IAN(I))
      DO 43 J=1,3
   43 DNUC(J)=DNUC(J)+Z*(C(I,J)-CPROP(J))
   41 CONTINUE
      DINT(1,4)=ZERO
      DO 42 K=1,3
   42 DINT(1,K)=DNUC(K)
      RETURN
      END
      SUBROUTINE AMGNUC(CPROP,DINT,MM)
C
C     SECOND MOMENT OR DIAMAGNETIC SUSCEPTIBILITY.
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA, NB=#NB)
C##
      PARAMETER (NA= 36, NB=200)
C###
      PARAMETER (NBP3=NB+3)
      PARAMETER (ZERO=0.0D0)
C
      COMMON /A/ IOP(99)
      COMMON /A/ NATOMS,ICHARG,MULTIP,IAN(NA),NAE,NBE,NE,NBASIS,C(NA,3)
      COMMON /A/ CDUM(4),ICDUM(401)
C
      DIMENSION DINT(NBP3,10),CPROP(3),QNUC(6)
C
      DO 50 I=1,6
   50 QNUC(I)=ZERO
      DO 51 I=1,NATOMS
      IF (IAN(I).LE.0) GO TO 51
      Z=DFLOAT(IAN(I))
      MU=0
      DO 52 J=1,3
      DO 52 K=1,J
      MU=MU+1
   52 QNUC(MU)=QNUC(MU)+Z*(C(I,J)-CPROP(J))*(C(I,K)-CPROP(K))
   51 CONTINUE
      DINT(1,1)=QNUC(1)
      DINT(1,2)=QNUC(3)
      DINT(1,3)=QNUC(6)
      DINT(1,4)=QNUC(2)
      DINT(1,5)=QNUC(4)
      DINT(1,6)=QNUC(5)
      DINT(1,7)=DINT(1,1)+DINT(1,2)+DINT(1,3)
      IF (MM.EQ.7) RETURN
      DO 20 I=1,6
      IF (I.GE.4) GO TO 25
      DINT(1,I)=DINT(1,7)-DINT(1,I)
      GO TO 20
   25 DINT(1,I)=-DINT(1,I)
   20 CONTINUE
      RETURN
      END
      SUBROUTINE QUDNUC(CPROP,DINT,MM)
C
C     QUADRUPOLE MOMENT.
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA, NB=#NB)
C##
      PARAMETER (NA= 36, NB=200)
C###
      PARAMETER (NBP3=NB+3)
      PARAMETER (ZERO=0.0D0)
C
      COMMON /A/ IOP(99)
      COMMON /A/ NATOMS,ICHARG,MULTIP,IAN(NA),NAE,NBE,NE,NBASIS,C(NA,3)
      COMMON /A/ CDUM(4),ICDUM(401)
C
      DIMENSION DINT(NBP3,10),CPROP(3),QNUC(6)
C
      DATA ONEPT5/1.5D0/, THREE/3.0D0/, PT5/.5D0/
C
      DO 50 I=1,6
   50 QNUC(I)=ZERO
      DO 51 I=1,NATOMS
      IF (IAN(I).LE.0) GO TO 51
      Z=DFLOAT(IAN(I))
      MU=0
      DO 52 J=1,3
      DO 52 K=1,J
      MU=MU+1
   52 QNUC(MU)=QNUC(MU)+Z*(C(I,J)-CPROP(J))*(C(I,K)-CPROP(K))
   51 CONTINUE
      DINT(1,1)=QNUC(1)
      DINT(1,2)=QNUC(3)
      DINT(1,3)=QNUC(6)
      DINT(1,4)=ONEPT5*QNUC(2)
      DINT(1,5)=ONEPT5*QNUC(4)
      DINT(1,6)=ONEPT5*QNUC(5)
      DINT(1,7)=DINT(1,1)+DINT(1,2)+DINT(1,3)
      DINT(1,1)=(THREE*DINT(1,1)-DINT(1,7))*PT5
      DINT(1,2)=(THREE*DINT(1,2)-DINT(1,7))*PT5
      DINT(1,3)=(THREE*DINT(1,3)-DINT(1,7))*PT5
      RETURN
      END
      SUBROUTINE OCTNUC(CPROP,DINT,MM)
C
C     THIRD MOMENT OR OCTUPOLE MOMENT.
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA, NB=#NB)
C##
      PARAMETER (NA= 36, NB=200)
C###
      PARAMETER (NBP3=NB+3)
      PARAMETER (ZERO=0.0D0)
C
      COMMON /A/ IOP(99)
      COMMON /A/ NATOMS,ICHARG,MULTIP,IAN(NA),NAE,NBE,NE,NBASIS,C(NA,3)
      COMMON /A/ CDUM(4),ICDUM(401)
C
      DIMENSION DINT(NBP3,10),CPROP(3),ONUC(10)
C
      DATA PT5/.5D0/, ONEPT5/1.5D0/, TWOPT5/2.5D0/, FOUR/4.0D0/
C
      DO 60 I=1,10
   60 ONUC(I)=ZERO
      DO 61 I=1,NATOMS
      IF (IAN(I).LE.0) GO TO 61
      Z=DFLOAT(IAN(I))
      MU=0
      DO 62 J=1,3
      DO 62 K=1,J
      DO 62 M=1,K
      MU=MU+1
   62 ONUC(MU)=ONUC(MU)+Z*(C(I,J)-CPROP(J))*(C(I,K)-CPROP(K))*
     1 (C(I,M)-CPROP(M))
   61 CONTINUE
      IF (MM.EQ.8) GO TO 10
      DINT(1,1)=ONUC(1) -ONEPT5*(ONUC(3)+ONUC(8))
      DINT(1,2)=ONUC(4) -ONEPT5*(ONUC(2)+ONUC(9))
      DINT(1,3)=ONUC(10)-ONEPT5*(ONUC(5)+ONUC(7))
      DINT(1,4)=PT5*(FOUR*ONUC(2)-ONUC(4)-ONUC(9))
      DINT(1,5)=PT5*(FOUR*ONUC(5)-ONUC(7)-ONUC(10))
      DINT(1,6)=PT5*(FOUR*ONUC(3)-ONUC(1)-ONUC(8))
      DINT(1,7)=PT5*(FOUR*ONUC(7)-ONUC(5)-ONUC(10))
      DINT(1,8)=PT5*(FOUR*ONUC(8)-ONUC(1)-ONUC(3))
      DINT(1,9)=PT5*(FOUR*ONUC(9)-ONUC(2)-ONUC(4))
      DINT(1,10)=TWOPT5*ONUC(6)
      RETURN
   10 DINT(1,1)=ONUC(1)
      DINT(1,2)=ONUC(4)
      DINT(1,3)=ONUC(10)
      DINT(1,4)=ONUC(2)
      DINT(1,5)=ONUC(5)
      DINT(1,6)=ONUC(3)
      DINT(1,7)=ONUC(7)
      DINT(1,8)=ONUC(8)
      DINT(1,9)=ONUC(9)
      DINT(1,10)=ONUC(6)
      RETURN
      END
      SUBROUTINE FLDNUC(CPROP,DINT,MM)
C
C     ELECTRIC FIELD.
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA, NB=#NB)
C##
      PARAMETER (NA= 36, NB=200)
C###
      PARAMETER (NBP3=NB+3)
      PARAMETER (ZERO=0.0D0)
C
      COMMON /A/ IOP(99)
      COMMON /A/ NATOMS,ICHARG,MULTIP,IAN(NA),NAE,NBE,NE,NBASIS,C(NA,3)
      COMMON /A/ CDUM(4),ICDUM(401)
C
      DIMENSION DINT(NBP3,10),CPROP(3),FNUC(3)
C
      DATA TENM8/1.0D-8/
C
      DO 20 I=1,3
   20 FNUC(I)=ZERO
      DO 21 I=1,NATOMS
      IF (IAN(I).LE.0) GO TO 21
      Z=DFLOAT(IAN(I))
      DST=(C(I,1)-CPROP(1))**2+(C(I,2)-CPROP(2))**2+(C(I,3)-CPROP(3))**2
      IF (DST.LE.TENM8) GO TO 21
      DO 23 J=1,3
   23 FNUC(J)=FNUC(J)+Z*(C(I,J)-CPROP(J))/(DSQRT(DST))**3
   21 CONTINUE
      DO 22 L=1,3
   22 DINT(1,L)=-FNUC(L)
      RETURN
      END
      SUBROUTINE GRDNUC(CPROP,DINT,MM)
C
C     FIELD GRADIENT.
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA, NB=#NB)
C##
      PARAMETER (NA= 36, NB=200)
C###
      PARAMETER (NBP3=NB+3)
      PARAMETER (ZERO=0.0D0)
C
      COMMON /A/ IOP(99)
      COMMON /A/ NATOMS,ICHARG,MULTIP,IAN(NA),NAE,NBE,NE,NBASIS,C(NA,3)
      COMMON /A/ CDUM(4),ICDUM(401)
C
      DIMENSION DINT(NBP3,10),CPROP(3),GNUC(6)
C
      DATA TENM8/1.0D-8/, THREE/3.0D0/
C
      DO 30 I=1,6
   30 GNUC(I)=ZERO
      DO 31 I=1,NATOMS
      IF (IAN(I).LE.0) GO TO 31
      Z=DFLOAT(IAN(I))
      DST=(C(I,1)-CPROP(1))**2+(C(I,2)-CPROP(2))**2+(C(I,3)-CPROP(3))**2
      IF (DST.LE.TENM8) GO TO 31
      MU=0
      DO 32 J=1,3
      DO 32 K=1,J
      MU=MU+1
   32 GNUC(MU)=GNUC(MU)+Z*(C(I,J)-CPROP(J))*(C(I,K)-CPROP(K))
     1/(DSQRT(DST))**5
   31 CONTINUE
      DST=GNUC(1)+GNUC(3)+GNUC(6)
      DINT(1,1)=DST-THREE*GNUC(1)
      DINT(1,2)=DST-THREE*GNUC(3)
      DINT(1,3)=DST-THREE*GNUC(6)
      DINT(1,4)=-THREE*GNUC(2)
      DINT(1,5)=-THREE*GNUC(4)
      DINT(1,6)=-THREE*GNUC(5)
      RETURN
      END
      SUBROUTINE SLDNUC(CPROP,DINT,MM)
C
C     MAGNETIC SHIELDING.
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA, NB=#NB)
C##
      PARAMETER (NA= 36, NB=200)
C###
      PARAMETER (NBP3=NB+3)
      PARAMETER (ZERO=0.0D0)
C
      COMMON /A/ IOP(99)
      COMMON /A/ NATOMS,ICHARG,MULTIP,IAN(NA),NAE,NBE,NE,NBASIS,C(NA,3)
      COMMON /A/ CDUM(4),ICDUM(401)
C
      DIMENSION DINT(NBP3,10),CPROP(3),PNUC(6)
C
      DATA TENM8/1.0D-8/
C
      DO 30 I=1,6
   30 PNUC(I)=ZERO
      DO 31 I=1,NATOMS
      IF (IAN(I).LE.0) GO TO 31
      Z=DFLOAT(IAN(I))
      DST=(C(I,1)-CPROP(1))**2+(C(I,2)-CPROP(2))**2+(C(I,3)-CPROP(3))**2
      IF (DST.LE.TENM8) GO TO 31
      T=DSQRT(DST)**3
      MU=0
      DO 32 J=1,3
      DO 32 K=1,J
      MU=MU+1
   32 PNUC(MU)=PNUC(MU)+Z*(C(I,J)-CPROP(J))*(C(I,K)-CPROP(K))/T
   31 CONTINUE
      DINT(1,1)=PNUC(1)
      DINT(1,2)=PNUC(3)
      DINT(1,3)=PNUC(6)
      DINT(1,4)=PNUC(2)
      DINT(1,5)=PNUC(4)
      DINT(1,6)=PNUC(5)
      DINT(1,7)=DINT(1,1)+DINT(1,2)+DINT(1,3)
      RETURN
      END
