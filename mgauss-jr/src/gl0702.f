C     GL0702       08 AUG 92                                         MRP
C?IBM/GLD/GBR/VAX/UNX
      SUBROUTINE FORCE
C??
C?CDC
C     PROGRAM FORCE
C??
C1INTRODUCTION
C     LINK 0702
C*
C     --------------
C     U OF T VERSION
C     FEBRUARY 1987
C     --------------
C*
C     SET-UP PROGRAM FOR FORCES ON THE NUCLEI, AND ONE ELECTRON FORCES.
C     THE FORCES ARE CALCULATED BY THE METHOD OF PULAY:
C     P. PULAY, MOL. PHYS., 17, 197 (1969).
C*
C1OPTIONS
C     ******************************************************************
C     OPTIONS ... IOP()
C     ******************************************************************
C     SEE PROGRAM GBOPT ... LINK 0711.
C     ******************************************************************
C*
C/
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA, NB=#NB)
C     PARAMETER (NP=#NP)
C     PARAMETER (NR=#NR, NF=#NF, NC=#NC, NE=2*NB)
C##
      PARAMETER (NA= 36, NB=200)
      PARAMETER (NP=300)
      PARAMETER (NR=101, NF=120, NC=120, NE=2*NB)
C###
      PARAMETER (NA3=3*NA, NFOR=8+6*NA3+6*NP, NFORM4=NFOR-4)
      PARAMETER (NBB=NB*(NB+1)/2)
      PARAMETER (NR1=NR+1)
      PARAMETER (ZERO=0.0D0, ONE=1.0D0, TWO=2.0D0)
C
      COMMON /A/ IOP(99)
      COMMON /A/ NATOMS,ICHARG,MULTIP,IAN(NA),NAE,NBE,NEE,NBASIS,C(NA,3)
      COMMON /A/ CDUM(4),ICDUM(401)
C
      COMMON/C702A/IJNDX(NB),F(NB,NB)
      COMMON/C702B/D1(NBB),D2(NBB)
C     NOTE: THIS COMMON BLOCK HAS LENGTH NFOR - SEE EQUIVALENCE BELOW.
      COMMON/C702C/SAVIMO(4),E(NE),DUM1(NF),DUM2(137),DUM3(NC),
     1 ICONF(NC),IRHF,NCONF,NCORE,NVAL,NOPEN,NFOCK,IMO(4)
      COMMON/IPDRV/FILLC(9)
      COMMON/IO/IODUM1(5),IMOINT,IFILE,JFILE,ILABEL,ICOUPL,IFORMT,
     1 IODUM2(6),NFILE(100,2)
C
      DIMENSION FILL(NFORM4),X(NR,NR),Y(NR,NB),IMOSAV(4)
C
      EQUIVALENCE (FILL(1),E(1)), (X(1,1),F(1,NR1)), (Y(1,1),D1(1))
      EQUIVALENCE (IMOSAV(1),SAVIMO(1))
C
C     FORM THE DENSITY MATRIX AND THE ENERGY WEIGHTED DENSITY.
      IOP9=IOP(9)
      NTT=(NBASIS*(NBASIS+1))/2
      IF(IOP9.EQ.2)GO TO 120
      IF(IOP(10).EQ.0)GO TO 900
C     CLEAR THE DENSITY MATRICES COMPLETELY - THIS IS FOR REDOD.
      DO 10 I=1,NBB
      D1(I)=ZERO
   10 D2(I)=ZERO
      AX=TWO
      I=NBASIS
      IF(IOP9.EQ.0)GO TO 20
      I=I+I
      AX=ONE
   20 CALL TREAD(25,F,NB,NB,NBASIS,NAE,0)
      CALL TREAD(5,E,NB+NB,1,I,1,0)
      NAB=NAE
      II=0
  100 DO 110 I=1,NAB
      L=0
      II=II+1
      DO 110 J=1,NBASIS
      DO 110 K=1,J
      L=L+1
      T=F(J,I)*F(K,I)*AX
      D1(L)=D1(L)+T
  110 D2(L)=D2(L)-T*E(II)
      IF(IOP9.EQ.0.OR.NBE.EQ.0)GO TO 900
      CALL TREAD(27,F,NB,NB,NBASIS,NBE,0)
      NAB=NBE
      II=NBASIS
      IOP9=0
      GO TO 100
C*
C     SPECIAL CODE FOR RHF OPEN SHELL RUNS.
C*
  120 CALL TREAD(5,E,NFILE(5,1),1,NFILE(5,1),1,0)
      IMOSAV(1)=IMO(1)
      IMOSAV(2)=IMO(2)
      IMOSAV(3)=IMO(3)
      IMOSAV(4)=IMO(4)
      IF(IOP(10).EQ.0)GO TO 900
      NAB=IMO(4)-1
      CALL TREAD(25,F,NB,NB,NBASIS,NAB,0)
C     GET FULL LAGRANGE MULTIPLIER MATRIX INTO X.
      CALL TREAD(15,X,NR,NR,NAB,NAB,1)
C     FORM W = -2 * F * X * F'. FIRST Y = - X * F'.
      DO 150 I=1,NAB
      DO 150 J=1,NBASIS
      T=ZERO
      DO 140 K=1,NAB
  140 T=T-X(I,K)*F(J,K)
  150 Y(I,J)=T
C     NOW W = 2 * F * Y. ACCUMULATE PRODUCT IN F, USING E FOR SCRATCH.
      DO 180 I=1,NBASIS
      DO 160 K=1,NAB
  160 E(K)=F(I,K)+F(I,K)
      DO 180 J=1,I
      T=ZERO
      DO 170 K=1,NAB
  170 T=T+E(K)*Y(K,J)
      F(J,I)=T
  180 F(I,J)=T
C     SAVE W IN SCRATCH FILE FOR NOW.
      CALL TWRITE(31,F,NB,NB,NBASIS,NBASIS,1)
C     GET 2-ELECTRON DENSITY MATRICES.
      CALL TREAD(25,F,NB,NB,NBASIS,NAB,0)
      NFM1=NFOCK-1
      II=0
      DO 230 I=1,NBASIS
      DO 230 J=1,I
C     CORE PART.
      T=ZERO
      IF(NCORE.EQ.0)GO TO 210
      DO 200 K=1,NCORE
  200 T=T+F(I,K)*F(J,K)
  210 II=II+1
      D1(II)=T+T
C     VALENCE AND OPEN SHELL ORBITAL PART.
      IF(NFM1.EQ.0)GO TO 230
      DO 220 K=1,NFM1
      KK=NCORE+K
      II=II+1
  220 D1(II)=TWO*F(I,KK)*F(J,KK)
  230 CONTINUE
      I=NTT*NFOCK
      REWIND IFILE
      WRITE(IFILE)(D1(J),J=1,I)
      ENDFILE IFILE
      REWIND IFILE
C     CLEAR THE DENSITY MATRICES COMPLETELY - THIS IS FOR REDOD.
      DO 240 I=1,NBB
      D1(I)=ZERO
  240 D2(I)=ZERO
C     GET TOTAL DENSITY IN D1, ENERGY WEIGHTED DENSITY IN D2.
      CALL TREAD(19,D1,NBB,1,NTT,1,0)
      CALL TREAD(21,D2,NBB,1,NTT,1,0)
      DO 800 I=1,NTT
  800 D1(I)=D1(I)+D2(I)
      CALL TREAD(31,D2,NBB,1,NTT,1,0)
C     REFORMAT THE DENSITY MATRICES IF PURE D ORBITALS ARE PRESENT.
  900 CALL REDOD(D1,0,IJNDX,IOP,NBASIS,IMOSAV)
      IF(IOP(1).NE.0.OR.IOP(10).EQ.0)RETURN
      CALL REDOD(D2,1,IJNDX,IOP,NBASIS,IMOSAV)
      CALL DSTVNT
      RETURN
      END
      SUBROUTINE REDOD(D,KEY,IJNDX,IOP,NBASIS,IMOSAV)
C*
C     --------------
C     U OF T VERSION
C     AUGUST 1992
C     --------------
C*
C     ROUTINE TO REFORMAT THE AOS PORTION OF /B/ FROM A
C     5D BASIS TO A 6D BASIS.  THIS ROUTINE ALSO CALCULATES
C     NAO, WHICH IS USED TO REFORMAT THE DENSITY MATRIX D.
C
C     KEY IS 0 FOR THE FIRST ENTRY, 1 FOR SUBSEQUENT ENTRIES.
C     IJNDX(I) IS SET TO I*(I-1)/2 FOR LINEAR INDEXING.
C     IOP IS THE OPTIONS ARRAY FROM BLANK COMMON.
C     NBASIS IS THE NUMBER OF BASIS FUNCTIONS.
C
C     THIS CODE WAS ORIGINALLY WRITTEN BY H.B. SCHLEGEL,
C     AND REVISED BY J.S. BINKLEY AND MIKE PETERSON.
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NB=#NB)
C     PARAMETER (NS=#NS, NP=#NP)
C##
      PARAMETER (NB=200)
      PARAMETER (NS=120, NP=300)
C###
      PARAMETER (NBB=NB*(NB+1)/2, NB1=NB*(NB+1))
      PARAMETER (ZERO=0.0D0)
C
      INTEGER SHELLA,SHELLN,SHELLT,SHELLC,AOS
C
      COMMON/B/IXYZ(NS),SHELLA(NS),SHELLN(NS),SHELLT(NS),
     1 SHELLC(NS),AOS(NS),NSHELL,MAXTYP,EXX(NP),C1(NP),C2(NP)
      COMMON/IO/IINN,IOUT,IODUM(15),NFILE(100,2)
C
      DIMENSION NAO(NB),D(NBB),IJNDX(NB)
      DIMENSION INCRM(4),IJST(4),IJEND(4),TQ(6,6),IOP(99),IMOSAV(4)
C
      EQUIVALENCE (XYZ,IXYZ(1))
C
      DATA INCRM/0,0,1,3/, IJST/1,1,5,11/, IJEND/1,4,10,20/
      DATA H/0.5D0/, THREE/3.0D0/
C
 1000 FORMAT('0FORCE NOT POSSIBLE FOR F ORBITAL BASIS SETS ... SORRY')
 1010 FORMAT('0TOO MANY BASIS FUNCTIONS AFTER 5D EXPANDED TO 6D IN ',
     $ 'THE FORCE ROUTINES')
 1020 FORMAT('0TOO MANY RHF DENSITY MATRIX ELEMENTS AFTER 5D EXPANDED ',
     $ 'TO 6D IN THE FORCE ROUTINES')
C
      IF(MAXTYP.GE.3)GO TO 910
      DO 1 I=1,NB
    1 IJNDX(I)=I*(I-1)/2
C     IF NO PURE D FUNCTIONS, RETURN.
      IF(IOP(8).EQ.0.OR.MAXTYP.LE.1)RETURN
      R=H*DSQRT(THREE)
      IF(KEY.NE.0)GO TO 100
C     REVISE AOS, AND COMPUTE NAO, A MAP FROM OLD AO TO NEW AO NUMBERS.
      INCR=0
      DO  20 I=1,NSHELL
      LAMAX=SHELLT(I)+1
      JST=AOS(I)-1+SHELLC(I)
      JN=IJEND(LAMAX)-IJST(LAMAX)+1-SHELLC(I)-INCRM(LAMAX)
      AOS(I)=AOS(I)+INCR
      DO  10 J=1,JN
      IJ=JST+J
   10 NAO(IJ)=IJ+INCR
   20 INCR=INCR+INCRM(LAMAX)
      NU=NBASIS+INCR
      IF(NU.GT.NB)GO TO 920
C     FOR RHF RUNS, ENSURE ALL THE EXPANDED DENSITIES WILL FIT.
      IF(IOP(9).NE.2)GO TO 40
      NFOCK=IMOSAV(4)-IMOSAV(1)+1
      IF(NFOCK*NU*(NU+1)/2.LE.NB1)GO TO 40
      WRITE(IOUT,1020)
      IOP(1)=-2
      RETURN
   40 IF(IOP(10).NE.0)GO TO 100
C     RESTORE THE BASIS SET ON CHECK RUNS.
      CALL TREAD(6,XYZ,NFILE(6,1),1,NFILE(6,1),1,0)
      RETURN
C
C     ******************************************************************
C     REFORMAT THE DENSITY MATRIX, GIVEN THE ARRAY NAO.
C     ******************************************************************
C
C     EXPAND THE MATRIX.
  100 DO 200 ITMP=1,NBASIS
      I=NBASIS+1-ITMP
      II=IJNDX(I)
      IN=NAO(I)
      IIN=IJNDX(IN)
      DO 200 JTMP=1,I
      J=I+1-JTMP
      IJ=II+J
      JN=NAO(J)
      IJN=IIN+JN
      D(IJN)=D(IJ)
  200 IF(IJ.LT.IJN) D(IJ)=ZERO
C
C     TRANSFORMATION FROM FIVE D TO SIX D FUNCTIONS.
      DO 900 ISHELL=1,NSHELL
      LAMAX=SHELLT(ISHELL)+1
      IST=AOS(ISHELL)-1+SHELLC(ISHELL)
      IN=IJEND(LAMAX)-IJST(LAMAX)+1-SHELLC(ISHELL)
      DO 900 JSHELL=1,ISHELL
      IF(SHELLT(ISHELL).LT.2.AND.SHELLT(JSHELL).LT.2)GO TO 900
C
      LBMAX=SHELLT(JSHELL)+1
      JST=AOS(JSHELL)-1+SHELLC(JSHELL)
      JN=IJEND(LBMAX)-IJST(LBMAX)+1-SHELLC(JSHELL)
C
C     GET ALL ELEMENTS FOR A GIVEN SHELL COMBINATION
C
      DO 300 I=1,IN
      MU=IST+I
      DO 300 J=1,JN
      NU=JST+J
      IF(MU.GE.NU) MUNU=IJNDX(MU)+NU
      IF(NU.GT.MU) MUNU=IJNDX(NU)+MU
  300 TQ(I,J)=D(MUNU)
C
C     TRANSFORM THE COLUMNS
C
      IF(SHELLT(ISHELL).LT.2) GO TO 500
      DO 400 J=1,JN
      D0=TQ(1,J)
      D1P=TQ(2,J)
      D1M=TQ(3,J)
      D2P=TQ(4,J)
      D2M=TQ(5,J)
      TQ(1,J)=-H*D0+R*D2P
      TQ(2,J)=-H*D0-R*D2P
      TQ(3,J)=D0
      TQ(4,J)=D2M
      TQ(5,J)=D1P
  400 TQ(6,J)=D1M
C
C     TRANSFORM THE ROWS
C
  500 IF(SHELLT(JSHELL).LT.2) GO TO 700
      DO 600 I=1,IN
      D0=TQ(I,1)
      D1P=TQ(I,2)
      D1M=TQ(I,3)
      D2P=TQ(I,4)
      D2M=TQ(I,5)
      TQ(I,1)=-H*D0+R*D2P
      TQ(I,2)=-H*D0-R*D2P
      TQ(I,3)=D0
      TQ(I,4)=D2M
      TQ(I,5)=D1P
  600 TQ(I,6)=D1M
C
C     REPLACE THE CURRENT SHELL COMBINATION IN THE MATRIX
C
  700 DO 800 I=1,IN
      MU=IST+I
      DO 800 J=1,JN
      NU=JST+J
      IF(MU.GE.NU) MUNU=IJNDX(MU)+NU
      IF(NU.GT.MU) MUNU=IJNDX(NU)+MU
  800 D(MUNU)=TQ(I,J)
C
  900 CONTINUE
      RETURN
C
C     F FUNCTIONS USED.
  910 WRITE(IOUT,1000)
      IOP(1)=-2
      RETURN
C     TOO MANY BASIS FUNCTIONS.
  920 WRITE(IOUT,1010)
      IOP(1)=-2
      RETURN
      END
      SUBROUTINE DSTVNT
C*
C     ----------------
C     GAUSSIAN 82
C     U OF T VERSION
C     DECEMBER 1988
C     ----------------
C*
C     EVALUATION OF THE ONE ELECTRON INTEGRAL CONTRIBUTION
C     TO THE HARTREE-FOCK FIRST DERIVATIVE.
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA, NB=#NB)
C     PARAMETER (NS=#NS, NP=#NP)
C##
      PARAMETER (NA= 36, NB=200)
      PARAMETER (NS=120, NP=300)
C###
      PARAMETER (NA3=3*NA)
      PARAMETER (NBB=NB*(NB+1)/2, NB2=NB*NB)
      PARAMETER (ZERO=0.0D0, ONE=1.0D0, TWO=2.0D0)
C
      INTEGER SHELLA,SHELLN,SHELLT,AOS,SHELLC
C
      COMMON /A/ IOP(99)
      COMMON /A/ NATOMS,ICHARG,MULTIP,IAN(NA),NAE,NBE,NE,NBASIS,C(NA,3)
      COMMON /A/ CDUM(4),ICDUM(401)
C
      COMMON/C702A/IJNDX(NB),
     1 CA(20),CB(20),TP(4),WP(4),TWOCX(9),TWOCY(9),TWOCZ(9),
     2 S1C(6),A(45),SX(32),SY(32),SZ(32),XIP(80),YIP(80),ZIP(80),
     3 XIP1(80),YIP1(80),ZIP1(80),XIP2(80),YIP2(80),ZIP2(80),D12(100),
     4 D12S(100),D12C(100),D12SC(100),CCX(192),CCY(192),CCZ(192)
      COMMON/C702B/D1(NBB),D2(NBB)
      COMMON/C702C/SAVIMO(4),TXX,VNEXX,VEEXX,VNNXX,FN(NA3,6),
     1 FBASIS(NP,6)
      COMMON/B/IXYZ(NS),SHELLA(NS),SHELLN(NS),SHELLT(NS),
     1 SHELLC(NS),AOS(NS),NSHELL,MAXTYP,EXX(NP),C1(NP),C2(NP)
      COMMON/IPDRV/AIAB,BIAB,EPIO2,PCX,PCY,PCZ,DABX,DABY,DABZ
      COMMON /I1ECOM/ LAMAX, LBMAX, LPMAX
      COMMON/IO/IODUM(17),NFILE(100,2)
C
      DIMENSION FILL(NB2)
      DIMENSION IJST(4),IJEND(4),INDJX(20),INDJY(20),INDJZ(20),XINT(3)
      DIMENSION INDIX(20),INDIY(20),INDIZ(20)
C
      EQUIVALENCE (XYZ,IXYZ(1)), (FILL(1),CA(1))
C
      DATA IJST/1,1,5,11/, IJEND/1,4,10,20/
      DATA INDJX/1,2,1,1,3,1,1,2,2,1,4,1,1,2,3,3,2,1,1,2/
      DATA INDJY/1,1,2,1,1,3,1,2,1,2,1,4,1,3,2,1,1,2,3,2/
      DATA INDJZ/1,1,1,2,1,1,3,1,2,2,1,1,4,1,1,2,3,3,2,2/
      DATA HALF/0.5D0/
      DATA XINT/1.0D0,2.0D0,3.0D0/, CUT1/-600.0D0/
      DATA PI/3.14159265358979D0/
C*
C     INITIALIZE FILLC.
      CALL FILLST
      TWOPI=PI+PI
      IPRINT = 0
      IF (IOP(21) .EQ. 1) IPRINT = 1
      CALL RYSSET (0, IPRINT)
      TXX=ZERO
      VNEXX=ZERO
      VEEXX=ZERO
      VNNXX=ZERO
C     FILL INDIX.
      DO 30 I=1,20
      INDIX(I)=4*(INDJX(I)-1)
      INDIY(I)=4*(INDJY(I)-1)
   30 INDIZ(I)=4*(INDJZ(I)-1)
C     CLEAR THE GRADIENT ARRAYS.
      K=3*NATOMS
      II=SHELLA(NSHELL)+SHELLN(NSHELL)-1
      DO 3 J=1,6
      DO 1 I=1,K
    1 FN(I,J)=ZERO
      DO 3 I=1,II
    3 FBASIS(I,J)=ZERO
C
C     CALCULATE NUCLEAR CONTRIBUTION.
C
      IF(NATOMS.EQ.1)GO TO 10
      DO 5 I=2,NATOMS
      IZ=IAN(I)
      IF(IZ.LE.0)GO TO 5
      I1=I-1
      II=3*I1+1
      DO 4 J=1,I1
      JZ=IAN(J)
      IF(JZ.LE.0)GO TO 4
      JJ=3*(J-1)+1
      ABX=C(I,1)-C(J,1)
      ABY=C(I,2)-C(J,2)
      ABZ=C(I,3)-C(J,3)
      R12=ABX**2+ABY**2+ABZ**2
      FNN=DFLOAT(IZ*JZ)/DSQRT(R12)
      VNNXX=VNNXX+FNN
      FNN=FNN/R12
      FN(II,6)=FN(II,6)-ABX*FNN
      FN(JJ,6)=FN(JJ,6)+ABX*FNN
      FN(II+1,6)=FN(II+1,6)-ABY*FNN
      FN(JJ+1,6)=FN(JJ+1,6)+ABY*FNN
      FN(II+2,6)=FN(II+2,6)-ABZ*FNN
      FN(JJ+2,6)=FN(JJ+2,6)+ABZ*FNN
    4 CONTINUE
    5 CONTINUE
C
C     ******************************************************************
C     LOOP OVER SHELLS.
C     ******************************************************************
C
C     LOOP OVER ISHELL
C
   10 DO 1000 ISHELL=1,NSHELL
      I=IXYZ(ISHELL)
      XA=C(I,1)
      YA=C(I,2)
      ZA=C(I,3)
      IGBEGN=SHELLA(ISHELL)
      IGEND=IGBEGN+SHELLN(ISHELL)-1
      ITYPE=SHELLT(ISHELL)
      LAMAX=ITYPE+1
      I=IJST(LAMAX)
      ISTART=I+SHELLC(ISHELL)
      IEND=IJEND(LAMAX)
      IAOS=AOS(ISHELL)-I
C
C     LOOP OVER JSHELL.
C
      DO 1000 JSHELL=1,ISHELL
      J=IXYZ(JSHELL)
      XB=C(J,1)
      YB=C(J,2)
      ZB=C(J,3)
      JGBEGN=SHELLA(JSHELL)
      JGEND=JGBEGN+SHELLN(JSHELL)-1
      JTYPE=SHELLT(JSHELL)
      LBMAX=JTYPE+1
      J=IJST(LBMAX)
      JSTART=J+SHELLC(JSHELL)
      JEND=IJEND(LBMAX)
      JAOS=AOS(JSHELL)-J
C
      LPMAX=LAMAX+JTYPE
      LIM1DS=(LPMAX+4)/2
      IMJ=ISHELL-JSHELL
      NZERO=(ITYPE+JTYPE+1)/2+1
      ABX=XB-XA
      ABY=YB-YA
      ABZ=ZB-ZA
      RABSQ=ABX*ABX+ABY*ABY+ABZ*ABZ
C
C     PLUCK OUT DENSITY MATRIX PIECES FOR THIS SHELL COMBINATION
C     (ISHELL,JSHELL) INTO THE TEMP ARRAYS D12 AND D12S.
      INTC=0
      DO 90 I=ISTART,IEND
      MU=IAOS+I
      MUS=IJNDX(MU)
      JND=JEND
      IF(IMJ.EQ.0) JND=I
      DO 90 J=JSTART,JND
      NU=JAOS+J
      MUNU=MUS+NU
      INTC=INTC+1
      D12(INTC)=D1(MUNU)
      D12S(INTC)=D2(MUNU)
      IF(MU.EQ.NU) GO TO 90
      D12(INTC)=D12(INTC)+D12(INTC)
      D12S(INTC)=D12S(INTC)+D12S(INTC)
   90 CONTINUE
C
      FXVNE2=ZERO
      FYVNE2=ZERO
      FZVNE2=ZERO
      FXVNE3=ZERO
      FYVNE3=ZERO
      FZVNE3=ZERO
      FXT=ZERO
      FYT=ZERO
      FZT=ZERO
      FXC=ZERO
      FYC=ZERO
      FZC=ZERO
C
C     ******************************************************************
C     LOOP OVER PRIMITIVE GAUSSIANS.
C     ******************************************************************
C
      DO 900 IGAUSS=IGBEGN,IGEND
      AS=EXX(IGAUSS)
      TWOASQ=TWO*AS*AS
      TWOAS=AS+AS
      ASXA=AS*XA
      ASYA=AS*YA
      ASZA=AS*ZA
      ARABSQ=AS*RABSQ
      CALL FILLC(ITYPE,IGAUSS,C1,C2,CA)
C
      DO 900 JGAUSS=JGBEGN,JGEND
      BS=EXX(JGAUSS)
      CALL FILLC(JTYPE,JGAUSS,C1,C2,CB)
C
      EP=AS+BS
      EPI=ONE/EP
      EPIO2=HALF*EPI
      TWOP=EP+EP
      ARG=-BS*ARABSQ*EPI
      PEXP=ZERO
      IF(ARG.GT.CUT1)PEXP=DEXP(ARG)
      ZTEMP=TWOPI*EPI*PEXP
      PX=(ASXA+BS*XB)*EPI
      PY=(ASYA+BS*YB)*EPI
      PZ=(ASZA+BS*ZB)*EPI
C
      XAP=PX-XA
      XBP=PX-XB
      YAP=PY-YA
      YBP=PY-YB
      ZAP=PZ-ZA
      ZBP=PZ-ZB
C
      CALL GETCC1(CCX,XAP,XBP,3)
      CALL GETCC1(CCY,YAP,YBP,3)
      CALL GETCC1(CCZ,ZAP,ZBP,3)
      AIAB=AS*EPI
      BIAB=BS*EPI
      TEMP=(AS+AS)*BIAB
      DABX=ABX*TEMP
      DABY=ABY*TEMP
      DABZ=ABZ*TEMP
C
C     COMBINE DENSITY MATRIX COMPONENTS WITH BASIS CONTRACTION
C     COEFFICIENTS AND STORE IN TEMP ARRAYS D12C AND D12SC.
      INTC=0
      DO 95 I=ISTART,IEND
      JND=JEND
      IF(IMJ.EQ.0) JND=I
      DO 95 J=JSTART,JND
      INTC=INTC+1
      COEF=CA(I)*CB(J)
      D12C(INTC)=D12(INTC)*COEF
   95 D12SC(INTC)=D12S(INTC)*COEF
C
C     ******************************************************************
C     LOOP OVER ATOMS.
C     ******************************************************************
C
      IAIND=-3
      DO 800 IATOM=1,NATOMS
C
C     PICK UP COORDINATES OF THE CURRENT NUCLEAR CENTER.
      IAIND=IAIND+3
      IA=IAN(IATOM)
      IF(IA.LE.0)GO TO 800
      XC=C(IATOM,1)
      YC=C(IATOM,2)
      ZC=C(IATOM,3)
      ZT=-ZTEMP*DFLOAT(IA)
      PCX=XC-PX
      PCY=YC-PY
      PCZ=ZC-PZ
      RPCSQ=PCX*PCX+PCY*PCY+PCZ*PCZ
      ARG=EP*RPCSQ
      CALL RPOLX(NZERO,ARG,TP,WP)
      CALL GETA1(A,EPIO2,0)
C
C     ******************************************************************
C     LOOP OVER ZEROES OF RYS POLYNOMIAL.
C     ******************************************************************
C
      IZ=-15
      DO 700 IZERO=1,NZERO
C
      TWOPT2=TWOP*TP(IZERO)
      ZCONST=ZT*WP(IZERO)
C
      CALL GET2C(TWOCX,PCX,ONE,A,TWOPT2,0)
      CALL GET2C(TWOCY,PCY,ONE,A,TWOPT2,0)
      CALL GET2C(TWOCZ,PCZ,ZCONST,A,TWOPT2,0)
C
      IZ=IZ+16
      CALL GET3C(XIP(IZ),TWOCX,CCX)
      CALL GET3C(YIP(IZ),TWOCY,CCY)
      CALL GET3C(ZIP(IZ),TWOCZ,CCZ)
  700 CALL DRVIP1(XIP,YIP,ZIP,XIP1,YIP1,ZIP1,XIP2,YIP2,ZIP2,TWOPT2,IZ)
C
C     ******************************************************************
C     LOOP OVER ATOMIC ORBITALS.
C     ******************************************************************
C
      INTC=0
      DO 600 I=ISTART,IEND
C
      IX=INDIX(I)-16
      IY=INDIY(I)-16
      IZ=INDIZ(I)-16
C
      JND=JEND
      IF(IMJ.EQ.0) JND=I
      DO 600 J=JSTART,JND
      IJX=INDJX(J)+IX
      IJY=INDJY(J)+IY
      IJZ=INDJZ(J)+IZ
C
      INTC=INTC+1
      DTEMP=D12C(INTC)
      VTEMP=ZERO
      DXV1=ZERO
      DYV1=ZERO
      DZV1=ZERO
      DZV2=ZERO
      DYV2=ZERO
      DXV2=ZERO
      DO 750 IZERO=1,NZERO
      IJX=IJX+16
      IJY=IJY+16
      IJZ=IJZ+16
      XYIP=XIP(IJX)*YIP(IJY)
      XZIP=XIP(IJX)*ZIP(IJZ)
      YZIP=YIP(IJY)*ZIP(IJZ)
      VTEMP=VTEMP+XYIP*ZIP(IJZ)
      DXV1=DXV1+XIP1(IJX)*YZIP
      DYV1=DYV1+YIP1(IJY)*XZIP
      DZV1=DZV1+ZIP1(IJZ)*XYIP
      DXV2=DXV2+XIP2(IJX)*YZIP
      DYV2=DYV2+YIP2(IJY)*XZIP
  750 DZV2=DZV2+ZIP2(IJZ)*XYIP
      VNEXX=VNEXX+VTEMP*DTEMP
      TEMP1=DXV1*DTEMP
      TEMP2=DXV2*DTEMP
      FN(IAIND+1,1)=FN(IAIND+1,1)+TEMP1
      FXVNE2=FXVNE2+TEMP2
      FXVNE3=FXVNE3-TEMP1-TEMP2
      TEMP1=DYV1*DTEMP
      TEMP2=DYV2*DTEMP
      FN(IAIND+2,1)=FN(IAIND+2,1)+TEMP1
      FYVNE2=FYVNE2+TEMP2
      FYVNE3=FYVNE3-TEMP1-TEMP2
      TEMP1=DZV1*DTEMP
      TEMP2=DZV2*DTEMP
      FN(IAIND+3,1)=FN(IAIND+3,1)+TEMP1
      FZVNE2=FZVNE2+TEMP2
      FZVNE3=FZVNE3-TEMP1-TEMP2
C
  600 CONTINUE
C     ... END OF AO LOOP.
C
  800 CONTINUE
C     ... END OF LOOP OVER ATOMS.
C
C     CALCULATE THE OVERLAP AND KINETIC ENERGY INTEGRALS.
      STERM=DSQRT(EPI*PI)
      CALL GET1CS(S1C,STERM,EPIO2,3)
      CALL GET2CS(SX,S1C,CCX,3)
      CALL GET2CS(SY,S1C,CCY,3)
      DO 140 I=1,LIM1DS
  140 S1C(I)=S1C(I)*PEXP
      CALL GET2CS(SZ,S1C,CCZ,3)
C
C     BEGIN LOOP OVER ATOMIC ORBITALS FOR OVERLAP, KINETIC ENERGY INTS.
C
      INTC=0
      DO 210 I=ISTART,IEND
      LAX=INDJX(I)
      LAY=INDJY(I)
      LAZ=INDJZ(I)
      LAXP=LAX+1
      LAYP=LAY+1
      LAZP=LAZ+1
      LAXM=LAX-1
      LAYM=LAY-1
      LAZM=LAZ-1
      JND=JEND
      IF(IMJ.EQ.0) JND=I
      DO 210 J=JSTART,JND
      LBX=INDJX(J)
      LBY=INDJY(J)
      LBZ=INDJZ(J)
      INTC=INTC+1
      DTEMP=D12C(INTC)
      DTEMPS=D12SC(INTC)
      CALL RAWST(S,T,LAX,LAY,LAZ,LBX,LBY,LBZ,AS,TWOASQ,SX,SY,SZ)
      TXX=TXX+T*DTEMP
      CALL RAWST(S,T,LAXP,LAY,LAZ,LBX,LBY,LBZ,AS,TWOASQ,SX,SY,SZ)
      DXS=TWOAS*S
      DXK=TWOAS*T
      CALL RAWST(S,T,LAX,LAYP,LAZ,LBX,LBY,LBZ,AS,TWOASQ,SX,SY,SZ)
      DYS=TWOAS*S
      DYK=TWOAS*T
      CALL RAWST(S,T,LAX,LAY,LAZP,LBX,LBY,LBZ,AS,TWOASQ,SX,SY,SZ)
      DZS=TWOAS*S
      DZK=TWOAS*T
      IF(LAX.EQ.1) GO TO 150
      CALL RAWST(S,T,LAXM,LAY,LAZ,LBX,LBY,LBZ,AS,TWOASQ,SX,SY,SZ)
      DXS=DXS-XINT(LAXM)*S
      DXK=DXK-XINT(LAXM)*T
  150 IF(LAY.EQ.1) GO TO 160
      CALL RAWST(S,T,LAX,LAYM,LAZ,LBX,LBY,LBZ,AS,TWOASQ,SX,SY,SZ)
      DYS=DYS-XINT(LAYM)*S
      DYK=DYK-XINT(LAYM)*T
  160 IF(LAZ.EQ.1) GO TO 170
      CALL RAWST(S,T,LAX,LAY,LAZM,LBX,LBY,LBZ,AS,TWOASQ,SX,SY,SZ)
      DZS=DZS-XINT(LAZM)*S
      DZK=DZK-XINT(LAZM)*T
  170 FXT=FXT+DXK*DTEMP
      FYT=FYT+DYK*DTEMP
      FZT=FZT+DZK*DTEMP
      FXC=FXC+DXS*DTEMPS
      FYC=FYC+DYS*DTEMPS
  210 FZC=FZC+DZS*DTEMPS
C
  900 CONTINUE
C     ... END OF LOOP OVER GAUSSIANS.
C
      IJ=3*(IXYZ(ISHELL)-1)
      FN(IJ+1,2)=FN(IJ+1,2)+FXVNE2
      FN(IJ+2,2)=FN(IJ+2,2)+FYVNE2
      FN(IJ+3,2)=FN(IJ+3,2)+FZVNE2
      FN(IJ+1,3)=FN(IJ+1,3)+FXT
      FN(IJ+2,3)=FN(IJ+2,3)+FYT
      FN(IJ+3,3)=FN(IJ+3,3)+FZT
      FN(IJ+1,5)=FN(IJ+1,5)+FXC
      FN(IJ+2,5)=FN(IJ+2,5)+FYC
      FN(IJ+3,5)=FN(IJ+3,5)+FZC
      IJ=3*(IXYZ(JSHELL)-1)
      FN(IJ+1,2)=FN(IJ+1,2)+FXVNE3
      FN(IJ+2,2)=FN(IJ+2,2)+FYVNE3
      FN(IJ+3,2)=FN(IJ+3,2)+FZVNE3
      FN(IJ+1,3)=FN(IJ+1,3)-FXT
      FN(IJ+2,3)=FN(IJ+2,3)-FYT
      FN(IJ+3,3)=FN(IJ+3,3)-FZT
      FN(IJ+1,5)=FN(IJ+1,5)-FXC
      FN(IJ+2,5)=FN(IJ+2,5)-FYC
      FN(IJ+3,5)=FN(IJ+3,5)-FZC
 1000 CONTINUE
C     ... END OF LOOP OVER SHELLS.
C
C     RESTORE ORIGINAL BASIS SET INFORMATION.
      IF(MAXTYP.GE.2)CALL TREAD(6,XYZ,NFILE(6,1),1,NFILE(6,1),1,0)
      CALL RYSSET (-1, IPRINT)
C     WRITE OUT ONE-ELECTRON DERIVATIVES.
      CALL TWRITE (14, SAVIMO, NFILE(14,1), 1, NFILE(14,1), 1, 0)
      RETURN
      END
