C     GL0503A      21 MAY 90                                         MRP
C?IBM/GLD/GBR/VAX/UNX
      SUBROUTINE GSCF
C??
C?CDC
C     PROGRAM GSCF
C??
C=SCF OPTIONS
C     ******************************************************************
C     GENERAL SCF: RHF OPEN SHELL, MC-SCF AND GVB.
C     ******************************************************************
C
C1INTRODUCTION
C     LINK 0503
C*
C     --------------
C     U OF T VERSION
C     MAY 1990
C     --------------
C*
C     SOLUTION OF GENERAL SCF EQUATION, INCLUDING RESTRICTED HARTREE-
C     FOCK, PAIR-TYPE MCSCF, AND GVB.
C
C     MODIFIED FROM ROUTINE GSCF (AUTHOR: K. MOROKUMA ET AL) BY
C     MIKE PETERSON AND RAY POIRIER.
C
C     THIS PROGRAM USES 2 OF THE CI FILES (THE SEVENTH AND EIGHTH IN
C     COMMON /IO/) FOR SCRATCH.
C
C1OPTIONS
C     ******************************************************************
C     OPTIONS ... IOP( )
C     ******************************************************************
C     IOP(13) TO IOP(22) ... SEE LINK 0501.
C
C     IOP(23) ... CI EXTRAPOLATION TECHNIQUE TO AID CONVERGENCE.
C     0   USE POPLE 3- AND 4-POINT EXTRAPOLATION.
C     1   USE DEWAR EXTRAPOLATION.
C     2   NOT USED.
C     3   NO EXTRAPOLATION.
C
C     IOP(24) ... MAXIMUM NUMBER OF CI CYCLES.
C     0   20 CYCLES.
C     N   2**(N-1) CYCLES.
C     NOTE: ONLY 1 CI CYCLE IS ALLOWED FOR PURE RHF RUNS.
C
C     IOP(25) ... CONVERGENCE CRITERION FOR ORBITALS.
C     0   5*10**(-5) FOR ALL BUT THE LAST SCF ITERATION, WHICH USES A
C         CONVERGENCE CRITERION WHICH MATCHES THE DENSITY CONVERGENCE
C         (SET BY IOP(13), WHICH IS NORMALLY 1 FOR 10**-6 CONVERGENCE).
C     N   10**(-N).
C
C     IOP(26) ... HOW TO SOLVE MCSCF EQUATION.
C     0   TWO BY TWO ROTATION (LIMITED MIXING REGION).
C     1   TWO BY TWO ROTATION (ALL REGIONS ARE MIXED).
C     NOTE: DO NOT SPECIFY IOP(26)=1 FOR CLOSED SHELL MOLECULES.
C
C     IOP(27) ... ROOT NUMBER IN THE MC-SCF.
C     0   LOWEST EIGENVALUE.
C     N   N-TH EIGENVALUE.
C
C     IOP(28) ... PRINTING OF FINAL LAGRANGE MULTIPLIERS MATRIX.
C     0   NO.
C     1   YES.
C
C     IOP(29) ... TREATMENT OF LARGE ROTATIONS IN ROTSCF.
C     0   CUT THE SCALE FACTOR AND TRY AGAIN, WITH NO RESET TO
C         ITS PREVIOUS VALUE FOR THE NEXT SCF ITERATION IF THE DENSITY
C         CONVERGENCE IS GREATER THAN 'SCRIT'. IF THE D CONVERGENCE
C         IS LESS THAN OR EQUAL TO 'SCRIT', THE SCALE FACTOR WILL BE
C         INCREASED FOR EACH SUCCESSIVE ITERATION (WITH AN UPPER LIMIT
C         OF 'SLIMUP').
C     1   CUT THE SCALE FACTOR AND TRY AGAIN, BUT RESET TO ITS
C         INITIAL VALUE FOR THE NEXT SCF ITERATION.
C     2   CUT THE SCALE FACTOR AND TRY AGAIN, WITH NO RESET TO
C         ITS INITIAL VALUE FOR THE NEXT SCF ITERATION.
C     3   OMIT THE ROTATION, PRINT A MESSAGE AND CONTINUE.
C     NOTE: FOR IOP(29)=2 (NORESET MODE), WHEN THE SCF CONVERGES THE
C     FIRST TIME, IT WILL BE RESTARTED WITH IOP(29)=1 (RESET MODE)
C     TO ENSURE THE SCF COEFFICIENTS ARE REALLY CONVERGED.
C     ONCE RESET/INCREASE MODE IS SET, IT WILL REMAIN IN EFFECT FOR THE
C     REMAINDER OF THE CI ITERATION, BUT WILL BE SET BACK TO ITS
C     INITIAL VALUE AT THE START OF EACH NEW CI CYCLE.
C     THE SCALE FACTOR IS MODIFIED ACCORDING TO:
C     SCALE' = FACTDN * SCALE, WITH A LOWER LIMIT OF 'SLIMDN' FOR
C     CUTTING THE SCALE FACTOR, AND
C     SCALE' = FACTUP * SCALE, WITH AN UPPER LIMIT OF 'SLIMUP' FOR
C     INCREASING THE SCALE FACTOR.
C     THE VALUES OF 'FACTDN', 'FACTUP', 'SLIMDN', 'SLIMUP', 'SCALST'
C     THE INITIAL SCALE FACTOR) AND 'SCRIT' ARE GIVEN IN A DATA
C     STATEMENT.
C
C     IOP(30) ... PRINTING OF VECTOR COUPLING COEFFICIENTS.
C     0   NO.
C     1   YES.
C
C     IOP(31) ... SEE LINK 0501.
C
C     IOP(32) TO IOP(35) ... USED IN ED/BSSE ONLY (LINKS 0505-0507).
C
C     IOP(36) TO IOP(60) ... NOT USED.
C     ******************************************************************
C==
C*
C/
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA, NB=#NB)
C     PARAMETER (NF=#NF, NC=#NC, NE=2*NB)
C##
      PARAMETER (NA= 36, NB=200)
      PARAMETER (NF=120, NC=120, NE=2*NB)
C###
      PARAMETER (NBB=NB*(NB+1)/2, NB1=NB*(NB+1),
     1 NBP1=NB+1)
      PARAMETER (ZERO=0.0D0, ONE=1.0D0)
C
      COMMON /A/ IOP(99)
      COMMON /A/ NATOMS,ICHARG,MULTIP,IAN(NA),NAE,NBE,NED,NBASIS,C(NA,3)
      COMMON /A/ DUMC(4),IDUMC(401)
C
      COMMON/SCF1/ACURCY,DB(NB,NB),DUM1(NB)
      COMMON/SCF2/DUM2(NB1)
      COMMON/SCF3/D(NBB),D2(NBB)
      COMMON/SCF4/EIG(NE),RN(NF),OCC(9),ALP(55),BETA(55),COEF(NC),
     1 OCCA(9),OCCB(9),
     2 ICONF(NC),IRHF,NCONF,NCORE,NVAL,NOPEN,NFOCK,IMO(4),ILIM(NBP1),
     3 LLIM(NBB)
      COMMON/SCF5/XYZ(NBB,3)
      COMMON/GEN/E1,E2,E3,EDUM(3),DCONV,S(2),FX,FY,FZ,FE,EMOL,ESOL,
     1 DPOL(4),VCM
      COMMON/IO/IN,IOUT,IPUNCH,IMAT,ITWOEL,
     1 IMOINT,IFILE,JFILE,ILABEL,ICOUPL,IFORMT,IODUM(6),NFILE(100,2)
C
      LOGICAL MATCH
C
      CHARACTER IYES*4, INO*4, IOMIT*4, INCR*4, IRESET*4, LABEL*8
C
      DIMENSION FOCK(NB1),IXBUFF(3072,2)
C
      EQUIVALENCE (FOCK(1),DB(1,1)), (XYZ(1,1),IXBUFF(1,1))
C
      DATA TEN,PT5/10.0D0,0.5D0/, TENM10/1.0D-10/
C
C     SET PARAMETERS CONTROLLING THE SCALE FACTOR MODIFICATION.
C
      DATA SCALST/0.80D0/, FACTDN/0.666666666666667D0/,
     1 FACTUP/1.20000000000000D0/, SLIMDN/0.00050D0/, SLIMUP/0.80D0/,
     2 SCRIT/2.0D-3/
      DATA IYES/'YES '/, INO/'NO  '/, IOMIT/'OMIT'/, INCR/'INCR'/
C
 1000 FORMAT('1PAIR TYPE MC-SCF METHOD',23X,
     1 'NUCLEAR REPULSION ENERGY IS',F17.9,'  HARTREES')
 1010 FORMAT('1GENERALIZED VALENCE BOND METHOD',15X,
     1 'NUCLEAR REPULSION ENERGY IS',F17.9,'  HARTREES')
 1020 FORMAT('1COMPLETE MC-SCF METHOD',24X,
     1 'NUCLEAR REPULSION ENERGY IS',F17.9,'  HARTREES')
 1030 FORMAT('1INDEPENDENT PAIR MC-SCF METHOD',16X,
     1 'NUCLEAR REPULSION ENERGY IS',F17.9,'  HARTREES')
 1040 FORMAT('0AT TERMINATION TOTAL ENERGY IS',F16.6,'  HARTREES',
     1 10X,'ORBITAL CONVERGENCE IS',1PD12.5)
 1050 FORMAT('0*** MAXIMUM NUMBER OF CI CYCLES EXCEEDED ***')
 1060 FORMAT(///)
 1070 FORMAT('0CONVERGENCE ON DENSITY MATRIX REQUIRED TO EXIT IS',
     1 1PD12.4,',  INITIAL SCALE FACTOR (SCALST) IS',0PF8.5/
     2 ' SCALE FACTOR CUT RATIO (FACTDN) IS',F8.5,
     3 ',  SCALE FACTOR INCREASE RATIO (FACTUP) IS',F8.5/
     4 ' SCALE FACTOR LOWER LIMIT (SLIMDN) IS',F8.5,
     5 ',  SCALE FACTOR UPPER LIMIT (SLIMUP) IS',F8.5/
     6 ' SWITCH TO INCREASE MODE AT D CONVERGENCE',1PD12.4,
     7 ' (SCRIT, RHF=INCR MODE ONLY).')
 1080 FORMAT('1VECTOR COUPLING COEFFICIENTS  (NFOCK X NFOCK+2)'//)
 1090 FORMAT(1X,I3,I4,F19.9,F19.9,2X,2(1PD11.4),32X,A8,4X,D11.4,4X,A4)
 1091 FORMAT(1X,I3,I4,F19.9,F19.9,13X,1PD11.4,32X,A8,4X,D11.4,4X,A4)
 1100 FORMAT('1RHF OPEN SHELL SCF',15X,
     1 'NUCLEAR REPULSION ENERGY IS',F17.9,'  HARTREES')
 1110 FORMAT(' E =',F20.9,10X,'DELTA E =',F15.9,10X,'SCF D CONV =',
     1 1PD13.5,10X,'CI D CONV =',D13.5/' RUN ABORTED')
 1120 FORMAT(' E =',F20.9,10X,'DELTA E =',F15.9,10X,'SCF D CONV =',
     1 1PD13.5,10X,'CI D CONV =',D13.5/' RUN ALLOWED TO CONTINUE')
 1130 FORMAT('1COEFFICIENTS')
 1140 FORMAT('1TOTAL DENSITY MATRIX')
 1150 FORMAT('1LAGRANGE MULTIPLIERS MATRIX'//)
 1160 FORMAT(1X,I3,I4,F19.9,F19.9,26X,2(1PD11.4),8X,A8,4X,D11.4,4X,A4)
 1161 FORMAT(1X,I3,I4,F19.9,F19.9,37X,1PD11.4,8X,A8,4X,D11.4,4X,A4)
 1170 FORMAT(' IEND=',I5,'   ICUT=',I3,'   JCUT=',I3,
     1 '   DCONV=',1PD12.4,'   ITROUB=',I2)
 1180 FORMAT ('0*** MOLECULAR ORBITAL MATCHING FAILURE IN GSCF')
 1190 FORMAT ('0 CYCLE',19X,'ENERGY',20X,'SCF CONVERGENCE',9X,
     1 'CI CONVERGENCE',9X,'EXTRAPOLATION',5X,'SCALE',6X,'RESET'/
     2 '0 CI SCF',7X,'ELECTRONIC',11X,'TOTAL',10X,
     3 'COEFF',6X,'DENSITY',6X,'COEFF',6X,'DENSITY'/)
 1200 FORMAT ('0*** TOO MANY SCALE FACTOR CUTS (LIMIT IS SLIMDN)',
     1 ' - TRY DIFFERENT RESET/NORESET OPTIONS, AND/OR ',
     2 'DIFFERENT VALUE OF IOP(26).')
 1210 FORMAT ('0*** TOO MANY SCALE FACTOR CUTS IN NORESET/INCREASE ',
     1 'MODE (LIMIT IS SLIMDN) - SWITCHING TO RESET MODE.'/)
 1220 FORMAT ('0*** SCF CONVERGED IN NORESET/INCREASE MODE - ',
     1 'RESTARTING IN RESET MODE FOR CONVERGENCE CHECK.'/)
 1230 FORMAT ('0*** MAXIMUM NUMBER OF SCF CYCLES EXCEEDED ***')
 1240 FORMAT ('0COEFFICIENTS AND DENSITY HAVE CONVERGED TO 1.0D-10')
 1250 FORMAT('0THIS CALCULATION WAS PERFORMED WITH AN APPLIED',
     1 ' EXTERNAL ELECTRIC FIELD')
 1260 FORMAT(/'0THIS CALCULATION WAS DONE ACCORDING TO SELF-CONSISTENT',
     1 ' REACTION FIELD THEORY. ENERGY VALUES IN HARTREES ARE'//
     2 10X,'E(Q)',7X,'=',6X,'EMOL',6X,'+',6X,'ESOL'/1X,3F17.6)
C
      IF(IOP(10).EQ.0)RETURN
C     FOR ED/BSSE, SEE IF THIS LINK IS REQUIRED FOR THIS PASS.
      IF (IOP(4).EQ.1 .OR. IOP(4).EQ.5 .OR. IOP(4).GE.7) RETURN
C     FOR ED/BSSE, SET CORRECT 2-ELECTRON INTEGRAL UNIT NUMBER.
      IF (IOP(4) .EQ. 6) THEN
         ISAVE = ITWOEL
         ITWOEL = IFORMT
      END IF
C     CLEAR ENERGY/PROPERTY ORIGIN FLAG.
      IOP(94) = 0
      MCYC=20
      IF(IOP(24).NE.0)MCYC=2**(IOP(24)-1)
      MAXSCF=30+20*(IOP(14)+1)
      ACURCY=TEN**(-(5+IOP(13)))
      IOP25S=IOP(25)
      IOP29S = IOP(29)
      IPRINT=IOP(15)+IOP(16)
C
C     CALCULATE NUCLEAR REPULSION ENERGY.
C
      E1=ZERO
      NM1=NATOMS-1
      IF(NM1.EQ.0)GO TO 103
      DO 102 I=1,NM1
      IANI=IAN(I)
      IF(IANI.LE.0)GO TO 102
      IP1=I+1
      DO 100 J=IP1,NATOMS
      IANJ=IAN(J)
      IF(IANJ.LE.0)GO TO 100
      ANIJ=DFLOAT(IANI*IANJ)
      RIJ=DSQRT((C(I,1)-C(J,1))**2+(C(I,2)-C(J,2))**2+
     1 (C(I,3)-C(J,3))**2)
      E1=E1+ANIJ/RIJ
  100 CONTINUE
  102 CONTINUE
C
  103 IF(IOP(3).NE.1)GO TO 105
C     ADD THE FIELD CONTRIBUTION TO THE NUCLEAR ENERGY, FOR EXTERNAL
C     UNIFORM ELECTRIC FIELD ONLY.
      DO 104 I=1,NATOMS
      IANI=IAN(I)
      IF(IANI.LE.0)GO TO 104
      E1=E1-DFLOAT(IANI)*(FX*C(I,1)+FY*C(I,2)+FZ*C(I,3))
  104 CONTINUE
C
C     FILL IN COMMON SCF4.
C
  105 CALL TREAD(5,EIG,NFILE(5,1),1,NFILE(5,1),1,0)
      IF(NVAL.EQ.0)GO TO 905
      II=IRHF+1
      GO TO (901,904,902,903), II
  901 IF(IOP(21).EQ.0)WRITE(IOUT,1000)E1
      GO TO 910
  902 IF(IOP(21).EQ.0)WRITE(IOUT,1010)E1
      GO TO 910
  903 IF(IOP(21).EQ.0)WRITE(IOUT,1020)E1
      GO TO 910
  904 IF(IOP(21).EQ.0)WRITE(IOUT,1030)E1
      GO TO 910
  905 IF(IOP(21).EQ.0)WRITE(IOUT,1100)E1
C     REGULAR OPEN SHELL RHF - ALLOW ONLY 1 CI CYCLE.
      MCYC=1
      IF(NOPEN.EQ.0.AND.IOP(26).EQ.1)IOP(26)=0
C
  910 IF (IOP(21) .EQ. 0) WRITE (IOUT,1070) ACURCY, SCALST, FACTDN,
     1 FACTUP, SLIMDN, SLIMUP, SCRIT
      IF (IOP(21).EQ.0) WRITE (IOUT,1190)
C
C     READ INITIAL MO FROM DISK
C
      CALL TREAD(25,DB,NB,NB,NBASIS,NBASIS,0)
      CALL SCHMDT(DB,DUM2,NBASIS)
      IF(IOP(1).LT.0)GO TO 700
      CALL TWRITE(25,DB,NB,NB,NBASIS,NBASIS,0)
      NN=NBASIS*(NBASIS+1)/2
      NMAX=NN*NFOCK
C     DEFINE THE ARRAY OF ONE-DIMENSIONAL INDICES.
      DO 180 I=1,NN
  180 LLIM(I)=(I-1)*NFOCK
      ILIM(1)=0
      DO 181 I=1,NB
      EIG(I)=ZERO
      EIG(NB+I)=ZERO
  181 ILIM(I+1)=I+ILIM(I)
C
C     INITIALIZE FOR FIRST MCSCF/GVB CYCLE.
C
      MOLX=NCORE+NVAL+NOPEN
      CALL SETCI
      CALL JKMATX
      IF (IOP(1) .NE. 0) GO TO 700
      CALL MCCI(ENERGY)
      E2=ENERGY
      E3=E1+E2
C
C     FOR ED/BSSE, SAVE THE FIRST CYCLE ENERGY IN /GEN/ IF NECESSARY.
C
      IF (IOP(4).EQ.4 .OR. IOP(4).EQ.6) EDUM(1) = E3
      IF(IRHF.NE.2)CALL VCOEF
      CALL TWRITE(5,EIG,NFILE(5,1),1,NFILE(5,1),1,0)
      CALL CALDEN(D)
      CALL TWRITE(19,D,NBB,1,NN,1,0)
      ICYC=0
      ISCF = 0
      CRIT=TEN
      ACC=TEN
      IEND=1
      ICIEXT=1
      ITROUB=0
C
C     *************************** CI CYCLES ****************************
C
  190 IF (ISCF .GT. MAXSCF) GO TO 400
      ICYC=ICYC+1
      IOP(25)=IOP25S
      IOP(29) = IOP29S
      IRESET = INO
      IF (IOP(29) .EQ. 1) IRESET = IYES
      IF (IOP(29) .EQ. 3) IRESET = IOMIT
      IF(ACC.LT.ACURCY.AND.IEND.EQ.0.AND.ICIEXT.EQ.0) GO TO 400
      IOP(1)=-1
      IF(ICYC.GT.MCYC)GO TO 400
      IOP(1)=0
C     GSCF CYCLE
      CALL SETRHF
      ISCF=0
      IEXT=1
      SCALE = SCALST
      ICUT = 0
C     PRINT ENERGY WITH INITIAL GUESS COEFFICIENTS.
      IF (IOP(21).EQ.0 .AND. ICYC.EQ.1) WRITE (IOUT,1091) ICYC,ISCF,E2,
     1 E3
C
C     *************************** SCF CYCLES ***************************
C
 2000 IF(ITROUB.NE.0)GO TO 440
C
C     SWITCH FROM NORESET TO INCREASE MODE IF DENSITY CONVERGENCE IS
C     SMALL ENOUGH (AND IOP(29) IS 0).
C
      IF (IOP(29).NE.0 .OR. CRIT.GT.SCRIT .OR. IEXT.NE.0) GO TO 2010
      IRESET = INCR
      SCALE = FACTUP * SCALE
      IF (SCALE .LT. SLIMUP) GO TO 2020
      SCALE = SLIMUP
      ICUT = 0
      GO TO 2020
C
C     RESET SCALE FACTOR AND ICUT COUNTER IN RESET/OMIT MODE.
C
 2010 IF (IOP(29).EQ.0 .OR. IOP(29).EQ.2) GO TO 2020
      SCALE = SCALST
      ICUT = 0
C
 2020 ISCF=ISCF+1
      IOP(1) = -1
      IF(ISCF.GT.MAXSCF.AND.IEXT.EQ.0) GO TO 500
      IOP(1) = 0
      IF(ISCF.GT.1) CALL JKMATX
      IF (IOP(1) .NE. 0) GO TO 700
      CALL MCFOCK
      JCUT=0
C
C     GET COEFFICIENT CORRECTIONS.
C
  210 CALL PAIRS(IEND,DCONV)
C     IF IEND=0 SCF HAS CONVERGED NORMALLY.
      IF(IEND.GT.0)GO TO 260
      IF(IEND.LT.0.AND.CRIT.GE.ACURCY)GO TO 260
      IEND=0
      IF(CRIT.LT.ACURCY.AND.ISCF.GT.2)GO TO 460
C
C     COEFFICIENTS CONVERGED BUT DENSITY NOT CONVERGED - BUMP DEFAULT
C     COEFFICIENT CONVERGENCE TO 1.0D-5 AND TRY AGAIN.
C     RE-READ (PERTRUBED) FOCK MATRIX FOR 'PAIRS' (WHICH WAS DESTROYED).
C
      IF(IOP(25).NE.0)GO TO 460
      IOP(25)=5+IOP(13)
      IF (IOP(3) .NE. 0) READ(JFILE)
      READ(JFILE)(FOCK(I),I=1,NMAX)
      REWIND JFILE
      GO TO 210
C
C     CHECK IF BOTH THE COEFFICIENTS AND DENSITY ARE CONVERGED,
C     BUT ONLY THE ORBITAL CORRECTIONS ARE NOT CONVERGED.
C
  260 IF (IEXT .GT. 0) GO TO 280
      IF (CCONV.GT.TENM10 .OR. CRIT.GT.TENM10) GO TO 280
      WRITE (IOUT,1240)
      GO TO 500
C
C     GET C(NEW) = C(OLD) + SCALE*CC, WHERE CC IS THE COEFFICIENT
C     CORRECTION MATRIX.
C
  280 CALL ROTSCF(SCALE,ICUT,FACTDN,SLIMDN)
      IF (IOP(1) .NE. 0) GO TO 400
      IF (SCALE .LT. SLIMDN) GO TO 290
      EPREV=E2
      CALL CALENG(E2)
      IF(E2.LT.ENERGY) GO TO 270
      ENERGY=E2
      SCALE = FACTDN * SCALE
      JCUT=JCUT+1
      IF (SCALE .GE. SLIMDN) GO TO 280
C
  290 ITROUB=1
C
  270 IF (IOP(31).NE.0 .OR. ITROUB.NE.0) WRITE(IOUT,1170)IEND,ICUT,JCUT,
     1 DCONV,ITROUB
      CALL TREAD(27,DB,NB,NB,NBASIS,NBASIS,0)
      CALL TWRITE(5,EIG,NFILE(5,1),1,NFILE(5,1),1,0)
      CALL TWRITE(25,DB,NB,NB,NBASIS,NBASIS,0)
      IF(IOP(15).NE.1)GO TO 240
      WRITE(IOUT,1130)
      CALL GBSOUT(DB,EIG,NB,NB,NBASIS,0)
  240 CALL CALDEN(D2)
      IF(IOP(16).NE.1)GO TO 250
      WRITE(IOUT,1140)
      CALL SQUARE(D2,DB,NBASIS)
      CALL GBSOUT(DB,EIG,NB,NB,NBASIS,0)
  250 CALL TREAD(19,D,NBB,1,NN,1,0)
      CALL TWRITE(19,D2,NBB,1,NN,1,0)
      DO 220 I=1,NN
  220 D2(I)=D2(I)-D(I)
      CRIT=DSQRT(TRACLO(D2,D2,NBASIS))/DFLOAT(NBASIS)
      CALL CONRHF(0,MOLX,IEXT,LABEL,CCONV,MATCH)
C     RECALCULATE DENSITY FOR EXTRAPOLATED COEFFICIENTS.
      IF(IEXT.GE.0)GO TO 230
      CALL CALDEN(D)
      CALL TWRITE(19,D,NBB,1,NN,1,0)
  230 E3=E1+E2
      IF (IOP(21).NE.0 .AND. MATCH .AND. ITROUB.EQ.0) GO TO 2000
      IF(IPRINT.NE.0)WRITE(IOUT,1060)
      IF (IOP(21).NE.0 .AND. (.NOT.MATCH .OR. ITROUB.NE.0))
     1 WRITE (IOUT,1190)
      IF(IEXT.LE.0)WRITE(IOUT,1090)ICYC,ISCF,E2,E3,CCONV,CRIT,LABEL,
     1 SCALE,IRESET
      IF(IEXT.GT.0)WRITE(IOUT,1091)ICYC,ISCF,E2,E3,CRIT,LABEL,
     1 SCALE,IRESET
      GO TO 2000
C
C     SCALE FACTOR CUT TOO OFTEN - SWITCH FROM NORESET TO RESET MODE
C     IF THIS IS POSSIBLE, ELSE ABORT.
C
  440 IF (IOP(29).EQ.0 .OR. IOP(29).EQ.2) GO TO 450
      WRITE (IOUT,1200)
      IOP(1) = -1
      GO TO 500
C
  450 WRITE (IOUT,1210)
      ITROUB = 0
      IOP(29) = 1
      IRESET = IYES
      ISCF = ISCF - 1
      GO TO 2000
C
C     SCF COEFFICIENTS HAVE CONVERGED - RESTART THE SCF IF NORESET
C     MODE IN EFFECT.
C
  460 IF (IOP(29).EQ.1 .OR. IOP(29).EQ.3) GO TO 500
      IF (IOP(29).EQ.0 .AND. SCALE.GE.PT5) GO TO 500
      IF (IOP(31) .NE. 0) WRITE (IOUT,1220)
      IOP(29) = 1
      IRESET = IYES
      ISCF = ISCF - 1
      CRIT = TEN
      GO TO 2000
C
C     SCF HAS CONVERGED OR FAILED.
C
  500 CALL CONRHF(1,MOLX,ICIEXT,LABEL,CCONV,MATCH)
C     SAVE IOP(1) FOR CALL TO JKMATX (WHERE IT MIGHT BE CHANGED).
      IOP1S = IOP(1)
      IOP(1) = 0
      CALL JKMATX
      IF (IOP(1) .NE. 0) GO TO 700
      IOP(1) = IOP1S
      CALL MCCI(ENERGY)
C     SAVE FINAL ENERGIES IN COMMON /GEN/: E1 IS THE NUCLEAR REPULSION,
C     E2 IS THE ELECTRONIC AND E3 IS THE TOTAL ENERGY.
      E2=ENERGY
      E3=E1+E2
      IF(IRHF.NE.2) CALL VCOEF
      CALL TWRITE(5,EIG,NFILE(5,1),1,NFILE(5,1),1,0)
      CALL CALDEN(D2)
      CALL TREAD(19,D,NBB,1,NN,1,0)
      CALL TWRITE(19,D2,NBB,1,NN,1,0)
      DO 510 I=1,NN
  510 D2(I)=D2(I)-D(I)
      ACC=DSQRT(TRACLO(D2,D2,NBASIS))/NBASIS
      IF (ITROUB .NE. 0) GO TO 400
      IF(IOP(21).NE.0.AND.MATCH)GO TO 530
      IF(IPRINT.NE.0)WRITE(IOUT,1060)
      IF (IOP(21).EQ.0 .OR. (MATCH .AND. ITROUB.EQ.0)) GO TO 520
      WRITE (IOUT,1180)
      WRITE (IOUT,1190)
  520 IF(ICIEXT.LE.0)WRITE(IOUT,1160)ICYC,ISCF,E2,E3,CCONV,ACC,LABEL,
     1 SCALE,IRESET
      IF(ICIEXT.GT.0)WRITE(IOUT,1161)ICYC,ISCF,E2,E3,ACC,LABEL,
     1 SCALE,IRESET
C     ALWAYS ALLOW CONVERGENCE FOR RHF RUNS.
  530 IF(NVAL.EQ.0)ICIEXT=0
      GO TO 190
C
C     GSCF IS TERMINATED.
C
  400 CALL MCFOCK
      CALL LAGRNG
      CALL TWRITE(5,EIG,NFILE(5,1),1,NFILE(5,1),1,0)
      IF (IOP(1).LT.0 .AND. ITROUB.EQ.0) GO TO 420
  410 IF(IOP(21).EQ.0)WRITE(IOUT,1040)E3,DCONV
C
C     FORM THE ALPHA AND BETA DENSITY MATRICES IN D AND D2.
C
      CALL TWRITE(27,DB,NB,NB,NBASIS,NBASIS,0)
      DO 600 I=1,NN
      D(I)=ZERO
  600 D2(I)=ZERO
      IF(NCORE.EQ.0)GO TO 620
      DO 610 I=1,NCORE
      II=0
      DO 610 K=1,NBASIS
      DO 610 L=1,K
      II=II+1
      T=RN(1)*DB(K,I)*DB(L,I)
      D(II)=D(II)+T
  610 D2(II)=D2(II)+T
  620 J=1
      IF(NVAL.EQ.0)GO TO 640
      IS=IMO(1)
      IL=IMO(3)-1
      DO 630 I=IS,IL
      II=0
      J=J+1
      DO 630 K=1,NBASIS
      DO 630 L=1,K
      II=II+1
      T=RN(J)*DB(K,I)*DB(L,I)
      D(II)=D(II)+T
  630 D2(II)=D2(II)+T
  640 IF(NOPEN.EQ.0)GO TO 660
      IS=IMO(3)-1
      DO 650 I=1,NOPEN
      II=0
      DO 650 K=1,NBASIS
      DO 650 L=1,K
      II=II+1
      T=DB(K,IS+I)*DB(L,IS+I)
      D(II)=D(II)+T*OCCA(I)
  650 D2(II)=D2(II)+T*OCCB(I)
  660 CALL TWRITE(19,D,NBB,1,NN,1,0)
      CALL TWRITE(21,D2,NBB,1,NN,1,0)
C     COUNT NUMBER OF OPEN SHELL BETA ELECTRONS FOR OPEN SHELL
C     SINGLETS (NO ALPHA ELECTRONS IN SAME SHELL).
      T=ZERO
      IF(NOPEN.EQ.0)GO TO 680
      DO 670 I=1,NOPEN
  670 IF(OCCA(I).EQ.ZERO)T=T+OCCB(I)
C
C     PUT COEFFICIENT OF REFERENCE CONFIGURATION IN C0.
C     FOR GVB, SUM THE SQUARES OF THE COEFFICIENTS AND SUBTRACT
C     FROM 1.0.
C
  680 C0 = ONE
      IF (NVAL .NE. 0) C0 = COEF(1)
C
      IF (IRHF .NE. 2) GO TO 695
      C0 = ONE
      DO 691 I=1,NCONF
  691 C0 = C0 - COEF(I)*COEF(I)
C
  695 CALL SPIN (T, C0)
C
      IF (IOP(21) .NE. 0) GO TO 697
      IF(IOP(3).EQ.0)GO TO 697
      IF(IOP(3).EQ.2)GO TO 696
      WRITE(IOUT,1250)
      GO TO 697
  696 WRITE(IOUT,1260)E3,EMOL,ESOL
  697 CONTINUE
C
      IF(IOP(30).NE.1)GO TO 690
C
C     PRINT VECTOR COUPLING COEFFICIENTS.
C
      CALL TREAD(17,DB,NB,NB,NFOCK,NFOCK+2,0)
      WRITE(IOUT,1080)
      CALL MATOUT(DB,NB,NB,NFOCK,NFOCK+2)
  690 IF(IOP(28).NE.1)GO TO 700
C
C     PRINT LAGRANGE MULTIPLIERS MATRIX.
C
      CALL TREAD(15,DB,NB,NB,NBASIS,NBASIS,1)
      WRITE(IOUT,1150)
      CALL MATOUT(DB,NB,NB,NBASIS,NBASIS)
C
C     FOR ED/BSSE, RESET 2-ELECTRON INTEGRAL UNIT NUMBER.
C
  700 IF (IOP(4) .EQ. 6) THEN
         ITWOEL = ISAVE
      END IF
C
      RETURN
C
C     TOO MANY ITERATIONS - CHECK IF RUN CAN BE ALLOWED TO CONTINUE.
C
  420 IF (ICYC .GT. MCYC) WRITE (IOUT,1050)
      IF (ISCF .GT. MAXSCF) WRITE (IOUT,1230)
      IF(IOP(22).EQ.0)GO TO 410
C     ALLOW RUN TO CONTINUE IF ENERGY CHANGE IS SMALL ENOUGH.
      DEPREV=E2-EPREV
      IF(DABS(DEPREV).LE.TEN**(-8+IOP(22)))GO TO 430
      WRITE(IOUT,1110)E3,DEPREV,CRIT,ACC
      GO TO 410
C     ALLOW RUN TO CONTINUE.
  430 WRITE(IOUT,1120)E3,DEPREV,CRIT,ACC
      IOP(1)=0
      IF (ICYC .GE. MCYC) GO TO 410
      ISCF = 0
      GO TO 190
      END
      SUBROUTINE JKMATX
C*
C     --------------
C     U OF T VERSION
C     MAY 1987
C     --------------
C*
C     SUBROUTINE TO FORM J AND K MATRICES IN ATOMIC ORBITAL BASIS.
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA, NB=#NB)
C     PARAMETER (NF=#NF, NC=#NC, NE=2*NB)
C##
      PARAMETER (NA= 36, NB=200)
      PARAMETER (NF=120, NC=120, NE=2*NB)
C###
      PARAMETER (NBB=NB*(NB+1)/2, NB1=NB*(NB+1),
     1 NBP1=NB+1)
      PARAMETER (ZERO=0.0D0)
C
      INTEGER P,Q,R,SINDX
      LOGICAL USEOFF
C
      COMMON /A/ IOP(99),
     1 NATOMS,ICHARG,MULTIP,IAN(NA),NAE,NBE,NED,NBASIS,CO(NA,3),
     2 DUMC(4),IDUMC(401)
C
      COMMON/SCF1/ACURCY,DB(NB1)
      COMMON/SCF2/COUL(NB1)
      COMMON/SCF3/EXCH(NB1)
      COMMON/SCF4/EIG(NE),RD1(NF),RD2(NC),RD3(137),
     1 ICONF(NC),IRHF,NCONF,NCORE,NVAL,NOPEN,NFOCK,IMO(4),IJ(NBP1),
     2 LLIM(NBB)
      COMMON/SCF5/XYZ(NBB,3)
      COMMON/BSINFO/NVO(NA),IAOFF(NA)
      COMMON/PACKED/I,J,K,L,JA
      COMMON/IO/IN,IOUT,IPUNCH,IMAT,ITWOEL,
     1 IMOINT,IFILE,JFILE,ILABEL,ICOUPL,IFORMT,IODUM(206)
C
      DIMENSION C(NB,NB), IX(3072,2), IV(2)
C
      EQUIVALENCE (COUL(1),C(1,1)), (IX(1,1),XYZ(1,1)), (VINT,IV(1))
      EQUIVALENCE (P,I), (Q,J), (R,MINDX,K), (SINDX,L)
C
C?IBM/GLD/GBR/VAX/UNX
      DATA NWORDS/3/, MAXBUF/3070/
C??
C?CDC
C     DATA NWORDS/2/, MAXBUF/3071/, USEOFF/.FALSE./
C??
      NN=(NBASIS+1)*NBASIS/2
      NMAX=NN*NFOCK
C     READ IN MO COEFFICIENTS.
      CALL TREAD(25,C,NB,NB,NBASIS,NBASIS,0)
C?IBM/GLD/GBR/VAX/UNX
      USEOFF = NBASIS .GT. 127
C??
C     SETUP FOR DOUBLE BUFFERING (ASYNCHRONOUS I/O).
C     LBUFF IS THE CURRENT BUFFER NUMBER (BEING UNPACKED).
C     NBUFF IS THE NEXT BUFFER NUMBER (I/O IN PROGRESS).
C
      NBUFF = 1
      CALL NWIORD (ITWOEL, IX(1,NBUFF), 3072, .FALSE., 'JKMATX',
     1 IOP(1), *9000)
C
C     CALCULATION OF ORBITAL DENSITY MATRIX.
C
      NFM1=NFOCK-1
C
C     DENSITY MATRIX IS STORED IN ONE DIMENSIONAL ARRAY.
C
      II=0
      DO 10 I=1,NBASIS
      DO 10 J=1,I
      II=II+1
C     CORE PART.
      T=ZERO
      IF(NCORE.EQ.0)GO TO 40
      DO 20 K=1,NCORE
   20 T=T+C(I,K)*C(J,K)
C     SPLIT ORBITAL PART.
   40 DB(II)=T
      IF(NFM1.EQ.0)GO TO 10
      DO 30 K=1,NFM1
      KK=NCORE + K
      II=II+1
   30 DB(II)=C(I,KK)*C(J,KK)
   10 CONTINUE
C
      REWIND IFILE
C
C     CALCULATE (RIJIS) AND (RIKIS)  MATRIX ELEMENT.
C
      DO 60 I=1,NMAX
      COUL(I)=ZERO
   60 EXCH(I)=ZERO
C
C     READ A BLOCK OF AO INTEGRALS.
C     THE FILLED BUFFER LOOKS AS FOLLOWS FOR 32 BIT MACHINES:
C     LABEL-INTEGRAL-INTEGRAL-LABEL-INTEGRAL-INTEGRAL-LABEL-----------
C     THE LABEL BEING A PACKED WORD CONTAINING THE NUMBERS OF THE FOUR
C     ATOMIC ORBITALS ASSOCIATED WITH THE INTEGRAL - THE SIGN
C     SERVES TO CLASSIFY THE INTEGRAL TYPE (1 OR 2) - SEE SHLOUT.
C
C     WAIT FOR PREVIOUS BUFFER TO BE READ, THEN START READING THE NEXT
C     ONE.
C
  100 LBUFF = NBUFF
      CALL NWIOWT (ITWOEL, 3072, .FALSE., 'JKMATX', IOP(1), *9000)
      NBUFF = 3 - NBUFF
      CALL NWIORD (ITWOEL, IX(1,NBUFF), 3072, .FALSE., 'JKMATX',
     1 IOP(1), *9000)
C
C     THIS IS THE LOOP OVER THE BUFFER OF INTEGRALS AND LABELS
C     TREATING EACH LABEL-INTEGRAL COMBINATION SEPARATELY.
C     THE ROUTINE USES A LABEL OF 0 TO SIGNIFY THAT A NEW SET OF ATOM
C     OFFSETS IS TO BE APPLIED.
C     FOR 32 BIT MACHINES, EACH LABEL/INTEGRAL OCCUPIES 3 WORDS.
C     FOR 60 BIT MACHINES, EACH LABEL/INTEGRAL OCCUPIES 2 WORDS.
C
      DO 200 M=1,MAXBUF,NWORDS
      JA=IX(M,LBUFF)
      IV(1) = IX(M+1,LBUFF)
C?IBM/GLD/GBR/VAX/UNX
      IV(2) = IX(M+2,LBUFF)
C??
      TERINT=VINT+VINT
C
C     UNPACK THE LABELS PREVIOUSLY STORED AS ONE WORD.
C     THE FOLLOWING CODING FINDS ALL THE UNIQUE PERMUTATIONS OF THE
C     INTEGRAL LABELS AND CORRESPONDINGLY ADDS THE VARIOUS
C     CONTRIBUTIONS OF THE INTEGRAL TO THE F MATRICES.
C     CAUTION ** ONLY A SINGLE PERMUTATION OF THE INTEGRAL LABELS MAY
C     APPEAR IN THE INPUT - OTHERWISE ALL THE PERMUTATIONS ON THAT
C     INTEGRAL WILL BE ADDED TO THE F MATRIX MORE THAN ONCE.
C     I, J, K AND L ARE THE VARIOUS LABELS.
C     SEE PROGRAM SHLOUT (LINK 0306) FOR MORE DETAILS.
C
      IF(JA)102,300,110
C
C     TYPE 2 INTEGRALS.
C
  102 JA=-JA
C?IBM/GLD/GBR/VAX/CDC
C     CALL UNPACK
C??
C?UNX
      CALL UNPACK (JA, I, J, K, L)
C??
C     SPECIFY THE TYPES OF INTEGRALS
      IF (USEOFF) GO TO 105
C     DO NOT USE OFFSETS.
      GO TO (211,221,231,241,251,261,271,281),SINDX
C     USE OFFSETS.
  105 GO TO (210,220,230,240,250,260,270,280),SINDX
C
C     (AB!CD) - TYPE 1 INTEGRALS.
C
C?IBM/GLD/GBR/VAX/CDC
C 110 CALL UNPACK
C??
C?UNX
  110 CALL UNPACK (JA, I, J, K, L)
C??
      IF (USEOFF) THEN
         I = I + IOFF
         J = J + JOFF
         K = K + KOFF
         L = L + LOFF
      END IF
      IND1 = IJ(I) + J
      IND2 = IJ(K) + L
      IND3 = IJ(I) + K
      IF(J.LT.L)GO TO 212
      IND4 = IJ(J) + L
      GO TO 213
  212 IND4 = IJ(L) + J
  213 IND5 = IJ(I) + L
      IF(J.LT.K)GO TO 214
      IND6 = IJ(J) + K
      GO TO 216
  214 IND6 = IJ(K) + J
  216 I1 = LLIM(IND1)
      I2 = LLIM(IND2)
      I3 = LLIM(IND3)
      I4 = LLIM(IND4)
      I5 = LLIM(IND5)
      I6 = LLIM(IND6)
      DO 218 IFOCK=1,NFOCK
      I1 = I1 + 1
      I2 = I2 + 1
      I3 = I3 + 1
      I4 = I4 + 1
      I5 = I5 + 1
      I6 = I6 + 1
      COUL(I1) = COUL(I1) + DB(I2)*TERINT
      COUL(I2) = COUL(I2) + DB(I1)*TERINT
      EXCH(I3) = EXCH(I3) + DB(I4)*VINT
      EXCH(I4) = EXCH(I4) + DB(I3)*VINT
      EXCH(I5) = EXCH(I5) + DB(I6)*VINT
  218 EXCH(I6) = EXCH(I6) + DB(I5)*VINT
      GO TO 200
C
C     (AB!AC)
C
  210 P = P + IOFF
      Q = Q + JOFF
      R = R + LOFF
  211 IND1 = IJ(P) + Q
      IND2 = IJ(P) + R
      IND3 = IJ(P+1)
      IND4 = IJ(Q) + R
      I1 = LLIM(IND1)
      I2 = LLIM(IND2)
      I3 = LLIM(IND3)
      I4 = LLIM(IND4)
      DO 228 IFOCK=1,NFOCK
      I1 = I1 + 1
      I2 = I2 + 1
      I3 = I3 + 1
      I4 = I4 + 1
      COUL(I1) = COUL(I1) + DB(I2)*TERINT
      COUL(I2) = COUL(I2) + DB(I1)*TERINT
      EXCH(I1) = EXCH(I1) + DB(I2)*VINT
      EXCH(I2) = EXCH(I2) + DB(I1)*VINT
      EXCH(I3) = EXCH(I3) + DB(I4)*TERINT
  228 EXCH(I4) = EXCH(I4) + DB(I3)*VINT
      GO TO 200
C
C     (AB!BC)
C
  220 P = P + IOFF
      Q = Q + JOFF
      R = R + LOFF
  221 IND1 = IJ(P) + Q
      IND2 = IJ(Q) + R
      IND3 = IJ(Q+1)
      IND4 = IJ(P) + R
      I1 = LLIM(IND1)
      I2 = LLIM(IND2)
      I3 = LLIM(IND3)
      I4 = LLIM(IND4)
      DO 238 IFOCK=1,NFOCK
      I1 = I1 + 1
      I2 = I2 + 1
      I3 = I3 + 1
      I4 = I4 + 1
      COUL(I1) = COUL(I1) + DB(I2)*TERINT
      COUL(I2) = COUL(I2) + DB(I1)*TERINT
      EXCH(I1) = EXCH(I1) + DB(I2)*VINT
      EXCH(I2) = EXCH(I2) + DB(I1)*VINT
      EXCH(I3) = EXCH(I3) + DB(I4)*TERINT
  238 EXCH(I4) = EXCH(I4) + DB(I3)*VINT
      GO TO 200
C
C     (AC!BC)
C
  230 P = P + IOFF
      Q = Q + JOFF
      R = R + KOFF
  231 IND1 = IJ(P) + Q
      IND2 = IJ(R) + Q
      IND3 = IJ(Q+1)
      IND4 = IJ(P) + R
      I1 = LLIM(IND1)
      I2 = LLIM(IND2)
      I3 = LLIM(IND3)
      I4 = LLIM(IND4)
      DO 248 IFOCK=1,NFOCK
      I1 = I1 + 1
      I2 = I2 + 1
      I3 = I3 + 1
      I4 = I4 + 1
      COUL(I1) = COUL(I1) + DB(I2)*TERINT
      COUL(I2) = COUL(I2) + DB(I1)*TERINT
      EXCH(I1) = EXCH(I1) + DB(I2)*VINT
      EXCH(I2) = EXCH(I2) + DB(I1)*VINT
      EXCH(I3) = EXCH(I3) + DB(I4)*TERINT
  248 EXCH(I4) = EXCH(I4) + DB(I3)*VINT
      GO TO 200
C
C     (AB!AB)
C
  240 P = P + IOFF
      Q = Q + JOFF
  241 IND1 = IJ(P) + Q
      IND2 = IJ(P+1)
      IND3 = IJ(Q+1)
      I1 = LLIM(IND1)
      I2 = LLIM(IND2)
      I3 = LLIM(IND3)
      DO 258 IFOCK=1,NFOCK
      I1 = I1 + 1
      I2 = I2 + 1
      I3 = I3 + 1
      COUL(I1) = COUL(I1) + DB(I1)*TERINT
      EXCH(I1) = EXCH(I1) + DB(I1)*VINT
      EXCH(I2) = EXCH(I2) + DB(I3)*VINT
  258 EXCH(I3) = EXCH(I3) + DB(I2)*VINT
      GO TO 200
C
C     (AA!BC)
C
  250 P = P + IOFF
      Q = Q + KOFF
      R = R + LOFF
  251 IND1 = IJ(P+1)
      IND2 = IJ(Q) +R
      IND3 = IJ(P) +Q
      IND4 = IJ(P) +R
      I1 = LLIM(IND1)
      I2 = LLIM(IND2)
      I3 = LLIM(IND3)
      I4 = LLIM(IND4)
      DO 268 IFOCK=1,NFOCK
      I1 = I1 + 1
      I2 = I2 + 1
      I3 = I3 + 1
      I4 = I4 + 1
      COUL(I1)=COUL(I1)+DB(I2)*TERINT
      COUL(I2)=COUL(I2)+DB(I1)*VINT
      EXCH(I3)=EXCH(I3)+DB(I4)*VINT
  268 EXCH(I4)=EXCH(I4)+DB(I3)*VINT
      GO TO 200
C
C     (AB!CC)
C
  260 P = P + IOFF
      Q = Q + JOFF
      R = R + KOFF
  261 IND1 = IJ(P) + Q
      IND2 = IJ(R+1)
      IND3 = IJ(P) + R
      IF(Q.LT.R)GO TO 262
      IND4 = IJ(Q) + R
      GO TO 263
  262 IND4 = IJ(R) + Q
  263 I1 = LLIM(IND1)
      I2 = LLIM(IND2)
      I3 = LLIM(IND3)
      I4 = LLIM(IND4)
      DO 278 IFOCK=1,NFOCK
      I1 = I1 + 1
      I2 = I2 + 1
      I3 = I3 + 1
      I4 = I4 + 1
      COUL(I1) = COUL(I1) + DB(I2)*VINT
      COUL(I2) = COUL(I2) + DB(I1)*TERINT
      EXCH(I3) = EXCH(I3) + DB(I4)*VINT
  278 EXCH(I4) = EXCH(I4) + DB(I3)*VINT
      GO TO 200
C
  270 P = P + IOFF
      Q = Q + LOFF
  271 IF(MINDX-2)275,276,277
C
C     (AB!BB)
C
  275 IND1 = IJ(P) + Q
      IND2 = IJ(Q+1)
      I1 = LLIM(IND1)
      I2 = LLIM(IND2)
      DO 285 IFOCK=1,NFOCK
      I1 = I1 + 1
      I2 = I2 + 1
      COUL(I1) = COUL(I1) + DB(I2)*VINT
      COUL(I2) = COUL(I2) + DB(I1)*TERINT
      EXCH(I1) = EXCH(I1) + DB(I2)*VINT
  285 EXCH(I2) = EXCH(I2) + DB(I1)*TERINT
      GO TO 200
C
C     (AA!BB)
C
  276 IND1 = IJ(P+1)
      IND2 = IJ(Q+1)
      IND3 = IJ(P) + Q
      I1 = LLIM(IND1)
      I2 = LLIM(IND2)
      I3 = LLIM(IND3)
      DO 286 IFOCK=1,NFOCK
      I1 = I1 + 1
      I2 = I2 + 1
      I3 = I3 + 1
      COUL(I1) = COUL(I1) + DB(I2)*VINT
      COUL(I2) = COUL(I2) + DB(I1)*VINT
  286 EXCH(I3) = EXCH(I3) + DB(I3)*VINT
      GO TO 200
C
C     (AA!AB)
C
  277 IND1 = IJ(P+1)
      IND2 = IJ(P) + Q
      I1 = LLIM(IND1)
      I2 = LLIM(IND2)
      DO 287 IFOCK=1,NFOCK
      I1 = I1 + 1
      I2 = I2 + 1
      COUL(I1) = COUL(I1) + DB(I2)*TERINT
      COUL(I2) = COUL(I2) + DB(I1)*VINT
      EXCH(I1) = EXCH(I1) + DB(I2)*TERINT
  287 EXCH(I2) = EXCH(I2) + DB(I1)*VINT
      GO TO 200
C
C     (AA!AA)
C
  280 P = P + IOFF
  281 IND1 = IJ(P+1)
      I1 = LLIM(IND1)
      DO 298 IFOCK=1,NFOCK
      I1 = I1 + 1
      COUL(I1) = COUL(I1) + DB(I1)*VINT
  298 EXCH(I1) = EXCH(I1) + DB(I1)*VINT
      GO TO 200
C
C     GET NEW ATOM OFFSET VALUES.
C
  300 JA = IV(1)
      IF (JA .EQ. 0) GO TO 400
C?IBM/GLD/GBR/VAX/CDC
C     CALL UNPACK
C??
C?UNX
      CALL UNPACK (JA, I, J, K, L)
C??
      IOFF=IAOFF(I)
      JOFF=IAOFF(J)
      KOFF=IAOFF(K)
      LOFF=IAOFF(L)
  200 CONTINUE
      GO TO 100
C
C     WAIT FOR FINAL BUFFER TO BE READ - IT SHOULD BE AT END OF FILE.
C
  400 CALL NWIOWT (ITWOEL, 3072, .TRUE., 'JKMATX', IOP(1), *9000)
      REWIND ITWOEL
      WRITE(IFILE) (COUL(I),I=1,NMAX)
      WRITE(IFILE) (EXCH(I),I=1,NMAX)
      ENDFILE IFILE
      REWIND IFILE
      RETURN
C
C     ERROR EXIT.
C
 9000 RETURN
      END
      SUBROUTINE MCCI(ENERGY)
C*
C     SUBROUTINE TO PERFORM CI CALCULATION FOR MCSCF
C
C     ON ENTRY, DB CONTAINS THE DENSITY MATRICES AND COUL (EQUIVALENCED
C     WITH E) CONTAINS THE COULOMB MATRICES.
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA, NB=#NB)
C     PARAMETER (NF=#NF, NC=#NC, NE=2*NB)
C##
      PARAMETER (NA= 36, NB=200)
      PARAMETER (NF=120, NC=120, NE=2*NB)
C###
      PARAMETER (NBB=NB*(NB+1)/2, NB1=NB*(NB+1),
     1 NBP1=NB+1)
      PARAMETER (NF2=NF+2)
      PARAMETER (ZERO=0.0D0, ONE=1.0D0, TWO=2.0D0)
C
      COMMON /A/ IOP(99)
      COMMON /A/ NATOMS,ICHARG,MULTIP,IAN(NA),NAE,NBE,NED,NBASIS,C(NA,3)
      COMMON /A/ DUMC(4),IDUMC(401)
C
      COMMON/SCF1/ACURCY,DB(NB1)
      COMMON/SCF2/E(NB,NB),F(NB)
      COMMON/SCF3/EJK(NF,NF),W(NB)
      COMMON/SCF4/EIG(NE),RN(NF),OCC(9),ALP(55),BETA(55),COEF(NC),
     1 OCCA(9),OCCB(9),
     2 MCINT(NC),IRHF,NCONF,NCORE,NVAL,NOPEN,NFOCK,IMO(4),IDUM(NBP1),
     3 LLIM(NBB)
      COMMON/SCF5/XYZ(NBB,3)
C
      COMMON/GEN/ESAVE(3),EDUM(3),DCONV,S(2),FX,FY,FZ,FE,EMOL,ESOL,
     1 DPOL(4),VCM
      COMMON/IO/IODUM1(5),IMOINT,IFILE,JFILE,ILABEL,ICOUPL,IFORMT,
     1 IODUM2(206)
C
      DIMENSION COUL(NB1),EXCH(NB1),A(NF,NF2),H(NBB),
     1 FILL3(NB1),IXBUFF(3072,2)
C
      EQUIVALENCE (COUL(1),EXCH(1),E(1,1),A(1,1)),
     1 (FILL3(1),EJK(1,1)), (XYZ(1,1),H(1),IXBUFF(1,1))
C
      DATA PT5/0.5D0/, FOUR/4.0D0/
      DATA THRES,MAXCYC/1.0D-8,20/
C
      NN=(NBASIS+1)*NBASIS/2
C     CALCULATE COULOMB AND EXCHANGE INTEGRAL
C     CLEAR THE MATRIX ELEMENTS
      DO 10 J=1,NFOCK
      DO 10 I=1,NFOCK
   10 EJK(I,J)=ZERO
      NMAX=NN*NFOCK
C     SKIP OVER THE DENSITY MATRIX - ALREADY IN CORE.
      READ(IFILE)
C     DIAGONAL ELEMENT
      JJ=0
      DO 11 I=1,NBASIS
      FIJ=TWO
      DO 11 J=1,I
      JJ=JJ+1
      IJ=LLIM(JJ)
      IF(I.EQ.J)FIJ=ONE
      DO 11 K=1,NFOCK
      KK=IJ+K
   11 EJK(K,K)=EJK(K,K) + FIJ*DB(KK)*COUL(KK)
C     OFF-DIAGONAL (LOWER HALF ... COULOMB, UPPER HALF ... EXCHANGE)
      IF(NFOCK.EQ.1)GO TO 1000
      JJ=0
      DO 20 I=1,NBASIS
      FIJ=TWO
      DO 20 J=1,I
      JJ=JJ+1
      IJ=LLIM(JJ)
      IF(I.EQ.J)FIJ=ONE
      DO 20 K=2,NFOCK
      KK=IJ+K
      K1=K-1
      DO 20 L=1,K1
      LL=IJ+L
   20 EJK(K,L)=EJK(K,L)+FIJ*DB(KK)*COUL(LL)
 1000 READ(IFILE) (EXCH(I),I=1,NMAX)
      REWIND IFILE
      IF(NFOCK.EQ.1)GO TO 1010
      JJ=0
      DO 22 I=1,NBASIS
      FIJ=TWO
      DO 22 J=1,I
      JJ=JJ+1
      IJ=LLIM(JJ)
      IF(I.EQ.J)FIJ=ONE
      DO 22 K=2,NFOCK
      KK=IJ+K
      K1=K-1
      DO 22 L=1,K1
      LL=IJ+L
   22 EJK(L,K)=EJK(L,K)+FIJ*DB(KK)*EXCH(LL)
 1010 IF(NCORE.EQ.0) GO TO 30
      EX11=ZERO
      JJ=0
      DO 31 I=1,NBASIS
      FIJ=TWO
      DO 31 J=1,I
      JJ=JJ+1
      IF(I.EQ.J)FIJ=ONE
      IJ=LLIM(JJ)+1
   31 EX11=EX11+FIJ*DB(IJ)*EXCH(IJ)
C     CORE HAMILTONIAN IS READ FROM DISK (AND DIPOLE INTS IF NEEDED).
   30 CALL TREAD(13,H,NBB,1,NN,1,0)
      IF(IRHF.EQ.2)GO TO 500
C     DIAGONAL FOCK ELEMENT OF CLOSED ORBITALS
      DO 40 I=1,NFOCK
   40 F(I)=ZERO
      NCLOSE=IMO(3)-IMO(1)+1
      JJ=0
      DO 41 I=1,NBASIS
      FIJ=TWO
      DO 41 J=1,I
      JJ=JJ+1
      IJ=LLIM(JJ)
      IF(I.EQ.J)FIJ=ONE
      DO 41 K=1,NCLOSE
      KK=IJ+K
   41 F(K)=F(K)+FIJ*DB(KK)*H(JJ)
      IF(NOPEN.EQ.0) GO TO 60
      JJ=0
      DO 61 I=1,NBASIS
      FIJ=TWO
      DO 61 J=1,I
      JJ=JJ+1
      IJ=LLIM(JJ)
      IF(I.EQ.J)FIJ=ONE
      DO 61 K=1,NOPEN
      KK=IJ+NCLOSE+K
      K1=NCLOSE+K
   61 F(K1)=F(K1)+FIJ*DB(KK)*H(JJ)*OCC(K)
   60 NOCC=IMO(2)-IMO(1)+1
      ENERGY=ZERO
      DO 63 K=1,NOCC
   63 ENERGY=ENERGY+F(K)
      IF(NOPEN.EQ.0) GO TO 65
      DO 64 K=1,NOPEN
      K1=NCLOSE+K
   64 ENERGY=ENERGY+F(K1)
   65 I1=2
      IF(NCORE.EQ.0) GO TO 70
      F(1)=F(1)+TWO*EJK(1,1)-EX11
      IF(NVAL.EQ.0) GO TO 211
      DO 66 J=I1,NOCC
   66 F(1)=F(1)+TWO*EJK(J,1)-EJK(1,J)
  211 IF(NOPEN.EQ.0) GO TO 70
      DO 67 J=1,NOPEN
      IJ=J+NCLOSE
      JJ=IDUM(J+1)+1
   67 F(1)=F(1)+ALP(JJ)*EJK(IJ,1)-BETA(JJ)*EJK(1,IJ)
   70 IF(NVAL.EQ.0) GO TO 212
      DO 71 I=I1,NCLOSE
      DO 71 J=1,NOCC
      IF(J.GT.I)GO TO 73
      F(I)=F(I)+TWO*EJK(I,J)-EJK(J,I)
      GO TO 71
   73 F(I)=F(I)+TWO*EJK(J,I)-EJK(I,J)
   71 CONTINUE
  212 IF(NOPEN.EQ.0) GO TO 50
      IF(NVAL.EQ.0) GO TO 213
      DO 81 I=I1,NCLOSE
      DO 81 J=1,NOPEN
      IJ=NCLOSE+J
      JJ=IDUM(J+1)+1
   81 F(I)=F(I)+ALP(JJ)*EJK(IJ,I)-BETA(JJ)*EJK(I,IJ)
  213 DO 84 I=1,NOPEN
      IJ=NCLOSE+I
      JJ=IDUM(I+1)+1
      DO 83 K=1,NOCC
   83 F(IJ)=F(IJ)+ALP(JJ)*EJK(IJ,K)-BETA(JJ)*EJK(K,IJ)
      DO 84 K=1,NOPEN
      KL=NCLOSE+K
      IF(K.GT.I)GO TO 86
      JJ=IDUM(I+1)+K+1
      F(IJ)=F(IJ)+ALP(JJ)*EJK(IJ,KL)-BETA(JJ)*EJK(KL,IJ)
      GO TO 84
   86 JJ=IDUM(K+1)+I+1
      F(IJ)=F(IJ)+ALP(JJ)*EJK(KL,IJ)-BETA(JJ)*EJK(IJ,KL)
   84 CONTINUE
      DO 87 I=1,NOPEN
      IJ=NCLOSE+I
   87 ENERGY=ENERGY+F(IJ)
   50 DO 90 I=1,NOCC
   90 ENERGY=ENERGY+F(I)
C
C     ADD ELECTRIC FIELD CONTRIBUTION TO FOCK MATRICES AND ENERGY.
C
      IF (IOP(3) .NE. 1) GO TO 99
      CALL TREAD(34,XYZ(1,1),NBB,1,NN,1,0)
      CALL TREAD(35,XYZ(1,2),NBB,1,NN,1,0)
      CALL TREAD(36,XYZ(1,3),NBB,1,NN,1,0)
      JJ=0
      DO 91 I=1,NBASIS
      FIJ=TWO
      DO 91 J=1,I
      JJ=JJ+1
      IJ=LLIM(JJ)
      FXYZ = FX*XYZ(JJ,1) + FY*XYZ(JJ,2) + FZ*XYZ(JJ,3)
      IF(I.EQ.J)FIJ=ONE
      DO 91 K=1,NCLOSE
      KK=IJ+K
      T=FIJ*DB(KK)*FXYZ
      F(K)=F(K)+T
   91 IF (K .LE. NOCC) ENERGY = ENERGY + T + T
      IF(NOPEN.EQ.0) GO TO 99
      JJ=0
      DO 92 I=1,NBASIS
      FIJ=TWO
      DO 92 J=1,I
      JJ=JJ+1
      IJ=LLIM(JJ)
      FXYZ = FX*XYZ(JJ,1) + FY*XYZ(JJ,2) + FZ*XYZ(JJ,3)
      IF(I.EQ.J)FIJ=ONE
      DO 92 K=1,NOPEN
      KK=IJ+NCLOSE+K
      K1=NCLOSE+K
      T=FIJ*DB(KK)*OCC(K)*FXYZ
      F(K1)=F(K1)+T
   92 ENERGY = ENERGY + T + T
C
   99 COEF(1)=ONE
      IF(NVAL.EQ.0) RETURN
C     ENERGY OF REFERENCE CONFIGURATION IS SET TO ZERO.
      DO 200 J=1,NCONF
      DO 200 I=1,NCONF
  200 E(I,J)=ZERO
      ICORE=1-NCORE
      DO 100 I=2,NCONF
      II=MCINT(I)/1000
      IL=MCINT(I)-1000*II+ICORE
      IU=II+ICORE
C     DIAGONAL ELEMENT OF CI MATRIX
      E(I,I)=TWO*(F(IU)-F(IL)-TWO*EJK(IU,IL)+EJK(IL,IU)) + EJK(IL,IL)
     1 + EJK(IU,IU)
C     OFF-DIAGONAL ELEMENTS WITH THE REFERENCE CONFIGURATION.
      E(I,1)=EJK(IL,IU)
  100 E(1,I)=EJK(IL,IU)
C     OFF-DIAGONAL ELEMENTS BETWEEN THE PAIR EXCITED CONFIGURATIONS.
      IF(NCONF.LE.2)GO TO 130
      DO 110 I=3,NCONF
      II=MCINT(I)/1000
      I1=MCINT(I)-1000*II+ICORE
      I2=II+ICORE
      IX=I-1
      DO 110 J=2,IX
      II=MCINT(J)/1000
      J1=MCINT(J)-1000*II+ICORE
      J2=II+ICORE
      IF((I1-J1)*(I2-J2).NE.0) GO TO 110
      IF(I1.EQ.J1) GO TO 111
      IF(I1.GE.J1) GO TO 121
      II=I1
      JJ=J1
      GO TO 112
  121 II=J1
      JJ=I1
      GO TO 112
  111 IF(I2.GE.J2) GO TO 122
      II=I2
      JJ=J2
      GO TO 112
  122 II=J2
      JJ=I2
  112 E(J,I)=EJK(II,JJ)
      E(I,J)=EJK(II,JJ)
  110 CONTINUE
C     DIAGONALIZE CI MATRIX
  130 CALL TRED12(NCONF,NB,E,E,COEF,F,-2)
      IROOT=1
      IF(IOP(27).NE.0)IROOT=IOP(27)
      ENERGY=ENERGY+COEF(IROOT)
      DO 150 I=1,NCONF
  150 COEF(I)=E(I,IROOT)
      RETURN
C*
C     FROM HERE GVB METHOD
C*
C     SUCCESSIVE 2*2 CI PROCEDURE
  500 ICORE=1-NCORE
      DO 511 I=1,NFOCK
  511 F(I)=ZERO
C     H-CORE PART
      JJ=0
      DO 520 I=1,NBASIS
      FIJ=TWO
      DO 520 J=1,I
      JJ=JJ+1
      IJ=LLIM(JJ)
      IF(J.EQ.I)FIJ=ONE
      DO 520 K=1,NFOCK
      IL=IJ+K
  520 F(K)=F(K)+FIJ*DB(IL)*H(JJ)
C
C     ADD ELECTRIC FIELD CONTRIBUTION TO FOCK MATRICES.
C
      IF (IOP(3) .NE. 1) GO TO 529
      CALL TREAD(34,XYZ(1,1),NBB,1,NN,1,0)
      CALL TREAD(35,XYZ(1,2),NBB,1,NN,1,0)
      CALL TREAD(36,XYZ(1,3),NBB,1,NN,1,0)
      JJ=0
      DO 521 I=1,NBASIS
      FIJ=TWO
      DO 521 J=1,I
      JJ=JJ+1
      IJ=LLIM(JJ)
      IF(J.EQ.I)FIJ=ONE
      DO 521 K=1,NFOCK
      IL=IJ+K
  521 F(K)=F(K)+FIJ*DB(IL)*(FX*XYZ(JJ,1)+FY*XYZ(JJ,2)+FZ*XYZ(JJ,3))
C
  529 ICYC=0
  900 ICYC=ICYC+1
      DO 600 I=1,NCONF
      II=MCINT(I)/1000
      IL=MCINT(I)-1000*II+ICORE
      IU=II+ICORE
C     ONE ELECTRON PART
      E1=F(IL)
      E2=ZERO
      E3=F(IU)
C     TWO-ELECTRON PART
      IF(NCORE.EQ.0) GO TO 611
      E1=E1+(TWO*EJK(IL,1)-EJK(1,IL))
      E3=E3+(TWO*EJK(IU,1)-EJK(1,IU))
  611 DO 700 J=1,NCONF
      IF(J.EQ.I) GO TO 750
      JJ=MCINT(J)/1000
      JL=MCINT(J)-1000*JJ+ICORE
      JU=JJ+ICORE
      CC=COEF(J)*COEF(J)
      E1=E1+CC*(TWO*EJK(JU,IL)-EJK(IL,JU))
      IF(IL.GT.JL)GO TO 720
      E1=E1+(ONE-CC)*(TWO*EJK(JL,IL)-EJK(IL,JL))
      GO TO 730
  720 E1=E1+(ONE-CC)*(TWO*EJK(IL,JL)-EJK(JL,IL))
  730 E3=E3+(ONE-CC)*(TWO*EJK(IU,JL)-EJK(JL,IU))
      IF(IU.GT.JU)GO TO 745
      E3=E3+CC*(TWO*EJK(JU,IU)-EJK(IU,JU))
      GO TO 700
  745 E3=E3+CC*(TWO*EJK(IU,JU)-EJK(JU,IU))
      GO TO 700
  750 E1=E1+PT5*EJK(IL,IL)
      E3=E3+PT5*EJK(IU,IU)
      E2=E2+PT5*EJK(IL,IU)
  700 CONTINUE
      IF(NOPEN.EQ.0) GO TO 650
      DO 620 J=1,NOPEN
      NCLOSE=IMO(3)-IMO(1)+1
      IJ=NCLOSE+J
      JJ=J*(J+1)/2+1
      E1=E1+(ALP(JJ)*EJK(IJ,IL)-BETA(JJ)*EJK(IL,IJ))
  620 E3=E3+(ALP(JJ)*EJK(IJ,IU)-BETA(JJ)*EJK(IU,IJ))
  650 E1=E1+E1
      E2=E2+E2
      E3=E3+E3
      EDIF=E3-E1
      TANX=PT5*(EDIF-DSQRT(EDIF*EDIF+FOUR*E2*E2))/E2
      TANX=DATAN(TANX)
  600 W(I)=-DABS(DSIN(TANX))
C     CHECK OF CONVERGENCE OF CI-COEFFICIENTS
      EDIF=ZERO
      DO 800 I=1,NCONF
      EDIF=EDIF+(COEF(I)-W(I))**2
  800 COEF(I)=W(I)
      EDIF=DSQRT(EDIF)
      IF(EDIF.LT.THRES) GO TO 950
      IF(ICYC.GT.MAXCYC) GO TO 950
      GO TO 900
  950 CALL VCOEF
C     READ CORE HAMILTONIAN IF NECESSARY.
      IF (IOP(3) .NE. 0) CALL TREAD(13,H,NBB,1,NN,1,0)
      ENERGY=ZERO
      JJ=0
      DO 960 I=1,NBASIS
      FIJ=TWO
      DO 960 J=1,I
      JJ=JJ+1
      IF(I.EQ.J)FIJ=ONE
      IJ=LLIM(JJ)
      SUM=ZERO
      DO 961 K=1,NFOCK
      KK=IJ+K
  961 SUM=SUM+RN(K)*DB(KK)
  960 ENERGY=ENERGY+FIJ*SUM*H(JJ)
C
C     ADD ELECTRIC FIELD CONTRIBUTION TO ENERGY.
C
      IF (IOP(3) .NE. 1) GO TO 969
      CALL TREAD(34,XYZ(1,1),NBB,1,NN,1,0)
      CALL TREAD(35,XYZ(1,2),NBB,1,NN,1,0)
      CALL TREAD(36,XYZ(1,3),NBB,1,NN,1,0)
      JJ=0
      DO 963 I=1,NBASIS
      FIJ=TWO
      DO 963 J=1,I
      JJ=JJ+1
      IF(I.EQ.J)FIJ=ONE
      IJ=LLIM(JJ)
      SUM=ZERO
      DO 962 K=1,NFOCK
      KK=IJ+K
  962 SUM=SUM+RN(K)*DB(KK)
  963 ENERGY=ENERGY+FIJ*SUM*(FX*XYZ(JJ,1)+FY*XYZ(JJ,2)+FZ*XYZ(JJ,3))
C
  969 ENERGY=ENERGY+ENERGY
      CALL TREAD(17,A,NF,NF2,NFOCK,NFOCK+2,0)
      DO 970 I=1,NFOCK
  970 ENERGY=ENERGY+A(I,I)*EJK(I,I)
      IF(NCORE.NE.0) ENERGY=ENERGY-EX11+EJK(1,1)
      SUM=ZERO
      DO 980 I=2,NFOCK
      IX=I-1
      DO 980 J=1,IX
  980 SUM=SUM+A(I,J)*EJK(I,J)+A(J,I)*EJK(J,I)
      ENERGY=ENERGY+SUM+SUM
      RETURN
      END
      SUBROUTINE VCOEF
C*
C     CALCULATE VECTOR COUPLING CONSTANTS. THIS ROUTINE WAS MODIFIED
C     BY MIKE PETERSON TO PERMIT GRADIENT CALCULATION.
C
C     THE COUPLING CONSTANTS ARE COLLECTED IN A(I,J), WHERE THE LOWER
C     TRIANGLE STORES A(I,J), THE UPPER TRIANGLE STORES B(I,J) AND
C     THE DIAGONAL ELEMENTS ARE A(I,I)+B(I,I). HOWEVER, THE ENERGY
C     GRADIENT (FORCE) REQUIRES A(I,I) AND B(I,I) SEPARATELY, SO THESE
C     ARE KEPT IN COLUMNS NFOCK+1 AND NFOCK+2 RESPECTIVELY.
C
C     USEFUL REFERENCE: F.W. BOBROWICZ AND W.A. GODDARD III, IN
C     MODERN THEORETICAL CHEMISTRY, VOL. 3, H.F. SCHAEFER III (ED.),
C     1977, P 79.
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA, NB=#NB)
C     PARAMETER (NF=#NF, NC=#NC, NE=2*NB)
C##
      PARAMETER (NA= 36, NB=200)
      PARAMETER (NF=120, NC=120, NE=2*NB)
C###
      PARAMETER (NBB=NB*(NB+1)/2, NB1=NB*(NB+1),
     1 NBP1=NB+1)
      PARAMETER (NF2=NF+2)
      PARAMETER (ZERO=0.0D0, ONE=1.0D0, TWO=2.0D0)
C
      COMMON /A/ IOP(99),
     1 NATOMS,ICHARG,MULTIP,IAN(NA),NAE,NBE,NED,NBASIS,CO(NA,3),
     2 DUMC(4),IDUMC(401)
C
      COMMON/SCF2/A(NF,NF2)
      COMMON/SCF4/EIG(NE),RN(NF),OCC(9),ALP(55),BETA(55),C(NC),
     1 OCCA(9),OCCB(9),
     2 MCINT(NC),IRHF,NCONF,NCORE,NVAL,NOPEN,NFOCK,IMO(4),ILIM(NBP1),
     3 LLIM(NBB)
C
      DIMENSION FILL2(NB1)
C
      EQUIVALENCE (FILL2(1),A(1,1))
C
      NFOCK1 = NFOCK + 1
      NFOCK2 = NFOCK + 2
      IF(IRHF.EQ.2)GO TO 500
C     OCCUPATION NUMBER OF H-CORE PART
      DO 1 I=1,NFOCK
    1 RN(I)=ZERO
      ICORE=1-NCORE
      RN(1)=ONE
      I1=IMO(1)+ICORE
      I2=IMO(2)-1+ICORE
      I3=IMO(3)-1+ICORE
      IF(NVAL.EQ.0) GO TO 25
      DO 11 I=I1,I2
   11 RN(I)=ONE
      DO 20 I=2,NCONF
      II=MCINT(I)/1000
      IL=MCINT(I)-1000*II+ICORE
      IU=II+ICORE
      CC=C(I)*C(I)
      RN(IL)=RN(IL)-CC
   20 RN(IU)=RN(IU)+CC
   25 IF(NOPEN.EQ.0) GO TO 50
C     OPEN-SHELL PART
      DO 21 I=1,NOPEN
      IL=I3+I
   21 RN(IL)=OCC(I)
C     VECTOR COUPLING CONSTANTS FROM TWO ELECTRON PARTS
C     A(I,J) ... LOWER TRIANGLE,  B(I,J) ... UPPER TRIANGLE
   50 DO 100 J=1,NFOCK2
      DO 100 I=1,NFOCK
  100 A(I,J)=ZERO
C     REFERENCE CONFIGURATION.
      A(1,1)=ONE
      A(1,NFOCK1)=TWO
      A(1,NFOCK2)=-ONE
      IF(NVAL.EQ.0)GO TO 822
      DO 110 I=I1,I2
      A(I,I)=ONE
      A(I,NFOCK1)=TWO
  110 A(I,NFOCK2)=-ONE
      DO 111 I=2,I2
      IX=I-1
      DO 111 J=1,IX
      A(I,J)=TWO
  111 A(J,I)=-ONE
  822 IF(NOPEN.EQ.0) GO TO 119
C     PAIR-OPEN
      DO 112 I=1,NOPEN
      II=I+I3
      IK=ILIM(I+1)+1
      DO 112 J=1,I2
      A(II,J)=ALP(IK)
  112 A(J,II)=-BETA(IK)
C     OPEN-OPEN
      DO 113 I=1,NOPEN
      J1=I3+I
      II=ILIM(I+2)
      A(J1,J1)=ALP(II)-BETA(II)
      A(J1,NFOCK1)=ALP(II)
  113 A(J1,NFOCK2)=-BETA(II)
      IF(NOPEN.EQ.1) GO TO 119
      DO 114 I=2,NOPEN
      J1=I3+I
      IX=I-1
      DO 114 J=1,IX
      J2=I3+J
      II=ILIM(I+1)+J+1
      A(J1,J2)=ALP(II)
  114 A(J2,J1)=-BETA(II)
  119 IF(NVAL.EQ.0) GO TO 600
      DO 120 I=2,NCONF
C     ( I IHI I )
      II=MCINT(I)/1000
      IL=MCINT(I)-1000*II+ICORE
      IU=II+ICORE
      CC= C(I)*C(I)
      IF(NCORE.EQ.0) GO TO 130
C     CORE - VALENCE
      A(IL,1)=A(IL,1)-TWO*CC
      A(1,IL)=A(1,IL) + CC
      A(IU,1)= A(IU,1)+TWO*CC
  130 A(1,IU)=A(1,IU)-CC
C     VALENCE-VALENCE
      A(IL,IL)=A(IL,IL)-CC
      A(IL,NFOCK1)=A(IL,NFOCK1)-TWO*CC
      A(IL,NFOCK2)=A(IL,NFOCK2)+CC
      A(IU,IU)=A(IU,IU)+CC
      A(IU,NFOCK1)=A(IU,NFOCK1)+TWO*CC
      A(IU,NFOCK2)=A(IU,NFOCK2)-CC
      IF(IL.EQ.I1) GO TO 136
      IL1=IL-1
      DO 131 J=I1,IL1
      A(IL,J)=A(IL,J)-TWO*CC
      A(J,IL)=A(J,IL)+CC
      A(IU,J)=A(IU,J)+TWO*CC
  131 A(J,IU)=A(J,IU)-CC
  136 IF(IL.EQ.I2) GO TO 135
      IL1=IL+1
      DO 132 J=IL1,I2
      A(J,IL)=A(J,IL)-TWO*CC
      A(IL,J)=A(IL,J)+CC
      A(IU,J)=A(IU,J)+TWO*CC
  132 A(J,IU)=A(J,IU)-CC
C     VALENCE -OPEN
  135 IF(NOPEN.EQ.0) GO TO 150
      DO 140 J=1,NOPEN
      J1=ILIM(J+1)+1
      JJ=I3+J
      A(JJ,IL)=A(JJ,IL)-CC*ALP(J1)
      A(IL,JJ)=A(IL,JJ)+CC*BETA(J1)
      A(JJ,IU)=A(JJ,IU)+CC*ALP(J1)
  140 A(IU,JJ)=A(IU,JJ)-CC*BETA(J1)
C     ( 0 IHI I )
  150 A(IL,IU)=C(1)*C(I)+A(IL,IU)
C     ( I IHI J )
      IX=I-1
      DO 120 IJ=1,IX
      JJ=MCINT(IJ)/1000
      IJL=MCINT(IJ)-1000*JJ+ICORE
      IJU=JJ+ICORE
      IF((IL-IJL)*(IU-IJU).NE.0) GO TO 120
      II=IL-IJL
      IF(II) 160,161,162
  161 II=IU-IJU
      IF(II) 163,120,164
  160 II=IL
      JJ=IJL
      GO TO 170
  162 II=IJL
      JJ=IL
      GO TO 170
  163 II=IU
      JJ=IJU
      GO TO 170
  164 II=IJU
      JJ=IU
  170 A(II,JJ)=A(II,JJ)+C(I)*C(IJ)
  120 CONTINUE
  600 CALL TWRITE(17,A,NF,NF2,NFOCK,NFOCK2,0)
      RETURN
C*
C     GVB VECTOR COUPLING COEFFICIENTS
C*
  500 ICORE=1-NCORE
      RN(1)=ONE
      DO 510 I=1,NCONF
      II=MCINT(I)/1000
      IL=MCINT(I)-1000*II+ICORE
      IU=II+ICORE
      CC=C(I)*C(I)
      RN(IL)=ONE-CC
  510 RN(IU)=CC
      JJ=NFOCK-NOPEN
      IF(NOPEN.EQ.0) GO TO 520
      DO 515 I=1,NOPEN
      II=JJ+I
  515 RN(II)=OCC(I)
  520 DO 530 I=2,JJ
      IX=I-1
      DO 530 J=1,IX
      A(I,J)=TWO*RN(I)*RN(J)
  530 A(J,I)=-RN(I)*RN(J)
      DO 531 I=1,JJ
      A(I,I)=RN(I)*RN(I)
      A(I,NFOCK1)=TWO*RN(I)*RN(I)
  531 A(I,NFOCK2)=-RN(I)*RN(I)
      DO 540 I=1,NCONF
      II=MCINT(I)/1000
      IL=MCINT(I)-1000*II+ICORE
      IU=II+ICORE
      A(IL,IL)=RN(IL)
      A(IL,NFOCK1)=RN(IL)
      A(IL,NFOCK2)=ZERO
      A(IU,IU)=RN(IU)
      A(IU,NFOCK1)=RN(IU)
      A(IU,NFOCK2)=ZERO
      A(IU,IL)=ZERO
  540 A(IL,IU)=C(I)*DSQRT(ONE-C(I)*C(I))
      IF(NOPEN.EQ.0)GO TO 700
      DO 550 I=1,NOPEN
      II=JJ+I
      J1=ILIM(I+1)+1
      DO 550 J=1,JJ
      A(II,J)=ALP(J1)*RN(J)
  550 A(J,II)=-BETA(J1)*RN(J)
      DO 560 I=1,NOPEN
      J1=JJ+I
      II=(I+1)*(I+2)/2
      A(J1,J1)=ALP(II)-BETA(II)
      A(J1,NFOCK1)=ALP(II)
  560 A(J1,NFOCK2)=-BETA(II)
      IF(NOPEN.EQ.1)GO TO 700
      DO 561 I=2,NOPEN
      J1=JJ+I
      IX=I-1
      DO 561 J=1,IX
      J2=JJ+J
      II=ILIM(I+1)+J+1
      A(J1,J2)=ALP(II)
  561 A(J2,J1)=-BETA(II)
  700 CALL TWRITE(17,A,NF,NF2,NFOCK,NFOCK2,0)
      RETURN
      END
