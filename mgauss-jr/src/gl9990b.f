C/    GL9990B      16 SEP 89                                         MRP
      SUBROUTINE CMPLTC(MAXDIM,NBASIS,NSTART,U,S)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA)
C##
      PARAMETER (NA= 36)
C###
      COMMON /A/ IOP(99),IDUM1(7),IDUM2(NA),DUM1(NA,3),DUM2(4),
     1 IDUM3(401)
      COMMON/IO/IN,IOUT,IODUM(215)
C
      DIMENSION U(MAXDIM,MAXDIM),S(MAXDIM,MAXDIM),A(100)
C
      DATA ZERO,ONE/0.0D0,1.0D0/
C
      IF (NBASIS.GT.100) THEN
         WRITE (IOUT,9000) NBASIS
 9000    FORMAT ('0NBASIS =',I6,' IS TOO LARGE IN CMPLTC - ',
     1    'RUN ABORTED.')
         IOP(1) = -2
         RETURN
      END IF
      IF(NBASIS.LE.1)RETURN
C
      DO 100 ICOL=1,NBASIS
      IF(ICOL.EQ.1)GO TO 50
C     COLLECT U DOT S TERMS.
      DO 10 I=1,NBASIS
      A(I)=ZERO
      DO 10 J=1,NBASIS
   10 A(I)=A(I)+U(J,ICOL)*S(J,I)
C     LOOP OVER COLUMNS UP TO THE CURRENT ONE.
      ICM1=ICOL-1
      DO 40 JCOL=1,ICM1
C     GET B.
      B=ZERO
      DO 20 I=1,NBASIS
   20 B=B+U(I,JCOL)*A(I)
C     UPDATE VECTOR.
      DO 30 I=1,NBASIS
   30 U(I,ICOL)=U(I,ICOL)-B*U(I,JCOL)
   40 CONTINUE
C     COMPUTE NORMALIZATION.
   50 T=ZERO
      DO 70 I=1,NBASIS
      T1=ZERO
      DO 60 J=1,NBASIS
   60 T1=T1+U(J,ICOL)*S(J,I)
   70 T =T +U(I,ICOL)*T1
      T=ONE/DSQRT(T)
C     UPDATE COLUMN.
      DO 80 I=1,NBASIS
   80 U(I,ICOL)=U(I,ICOL)*T
  100 CONTINUE
C
      RETURN
      END
      FUNCTION DINT2E(TABLE)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
C***********************************************************************
C     ROUTINE TO PERFORM EVERETT INTERPOLATION WITH THROW-BACK TO
C     FOURTH ORDER USING TABLE.
C***********************************************************************
C
      DIMENSION TABLE(403)
C
      COMMON/MTPC/AT,BT,AP,BP,CM1,C0,C1,C2,M
C
      EQUIVALENCE (CM2,BP), (C3,BT)
C
      X     =CM2*TABLE(M+1)+CM1*TABLE(M+2)+C0*TABLE(M+3)+C1*TABLE(M+4)+
     1       C2*TABLE(M+5)+C3*TABLE(M+6)
      DINT2E=X
C
      RETURN
      END
      SUBROUTINE FMTGEN(F,T,M,ICK)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      DIMENSION F(M)
C
      COMMON/IO/IN,IOUT,IODUM(215)
      COMMON/FM/GA(15),RPITWO,FMZERO(15),TOL,CUT0S,CUTSM,CUTML
C
      EQUIVALENCE (APPROX,OLDSUM)
C
      DATA ZERO,HALF,ONE,TWO
     1 /0.0D0,0.5D0,1.0D0,2.0D0/
C
 2001 FORMAT('0FAILURE IN FMTGEN FOR SMALL T   IX > 50'/
     1 ' IX = ',I3,',  T = ',D20.14)
C2002 FORMAT('0FAILURE IN FMTGEN FOR INTERMEDIATE T'/
C    1 '  T = ',D20.14,'  RATIO = ',D20.14)
C
C     ICK IS AN ERROR INDICATOR.
C     ON RETURN, ICK=0 IMPLIES THAT ALL IS WELL.
C     IF ON RETURN, ICK IS NON-ZERO, THE ASSYMPTOTIC EXPANSION
C     HAS FAILED.
      ICK=0
C     TEST FOR TYPE OF ALGORITHM.
      IF(DABS(T).GT.CUT0S)GO TO 3
C*********************************************************************
C        FILL F(M) FOR ARGUMENT OF ZERO.
C*********************************************************************
      DO 2 I=1,M
    2 F(I)=FMZERO(I)
      RETURN
C
C     TEST FOR EVALUATION OF THE EXP.
    3 TEXP=ZERO
      IF(DABS(T).GE.CUTML)GO TO 150
      TEXP=DEXP(-T)
      IF(DABS(T).GE.CUTSM)GO TO 80
C*********************************************************************
C     CUT0S .LT. T .LT. CUTSM
C*********************************************************************
      A=DFLOAT(M-1)+HALF
      TERM=ONE/A
      SUM=TERM
      DO 20 IX=2,400
      A=A+ONE
      TERM=TERM*T/A
      SUM=SUM+TERM
      IF(DABS(TERM/SUM)-TOL)30,20,20
   20 CONTINUE
      WRITE(IOUT,2001)IX,T
      ICK = 1
      RETURN
C
   30 F(M)=HALF*SUM*TEXP
      GO TO 160
C
C*********************************************************************
C     CUTSM .LE. T .LT. CUTML
C*********************************************************************
   80 A=DFLOAT(M-1)
      B=A+HALF
      A=A-HALF
      TX=ONE/T
      MM1=M-1
      APPROX=RPITWO* DSQRT(TX)*(TX**MM1)
      IF(MM1)90,110,90
   90 DO 100 IX=1,MM1
      B=B-ONE
  100 APPROX=APPROX*B
  110 FIMULT=HALF*TEXP*TX
      SUM=ZERO
      IF(FIMULT)120,140,120
  120 FIPROP=FIMULT/APPROX
      TERM=ONE
      SUM =ONE
      NOTRMS=  IDINT(T)+MM1
      DO 130 IX=2,NOTRMS
      TERM=TERM*A*TX
      SUM=SUM+TERM
      IF(DABS(TERM*FIPROP/SUM)-TOL)140,140,130
  130 A=A-ONE
      RATIO=DABS((TERM*FIPROP/SUM))
C     WRITE(IOUT,2002)T,RATIO
      ICK=1
      RETURN
  140 F(M)=APPROX-FIMULT*SUM
      GO TO 160
C*********************************************************************
C     T .GE. CUTML
C*********************************************************************
  150 TX=DFLOAT(M)-HALF
      F(M)=HALF*GA(M)/(T**TX)
C*********************************************************************
C        RECUR DOWNWARDS TO F(1)
C*********************************************************************
  160 TX=T+T
      SUM=DFLOAT(M+M-3)
      MM1=M-1
      IF(MM1)170,190,170
  170 DO 180 IX=1,MM1
      F(M-IX)=(TX*F(M-IX+1)+TEXP)/SUM
  180 SUM=SUM-TWO
  190 RETURN
      END
      SUBROUTINE FMTSET(KOP1,KOP2,KOP3)
C
C     ROUTINE TO PRE-SET CUTOFFS FOR FMTGEN.
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      COMMON/FM/GA(15),RPITWO,FMZERO(15),TOL,CUT0S,CUTSM,CUTML
      COMMON/IO/IN,IOUT,IODUM(215)
C
      DIMENSION F(15)
C
      DATA ONE,HALF,TWO,ZERO,TEN,TENM9,F20,F42
     1 /1.0D0,0.5D0,2.0D0,0.0D0,10.0D0,1.0D-09,20.0D0,42.0D0/
      DATA PI/3.14159265358979D0/
C
C2001 FORMAT(' FROM FMTSET, KOPS = ',3I2,' AND CUTS = ',3D10.3/
C    1       '              TOL  = ',D10.3)
C
C     COMPUTE PI RELATED CONSTANTS.
      GA(1)=DSQRT(PI)
      RPITWO=HALF*GA(1)
C
C     FILL GAMMA FUNCTION ARRAY.
      TOL=HALF
      DO 10 I=2,15
      GA(I)=GA(I-1)*TOL
   10 TOL=TOL+ONE
C
C     FILL FMZERO (FOR ARGUMENT OF ZERO).
      TOL=ONE
      FMZERO(1)=ONE
      DO 20 I=2,15
      TOL=TOL+TWO
   20 FMZERO(I)=ONE/TOL
C
C     OBTAIN CUTOFFS.
C
C        CUT0S = CUTOFF, ZERO TO SMALL.
C        CUTSM = CUTOFF, SMALL TO MEDIUM.
C        CUTML = CUTOFF, MEDIUM TO LARGE.
C
C     CUTOS IS OBTAINED FROM KOP1.
      CUT0S=ZERO
      IF(KOP1.NE.0)CUT0S=TEN**(-2*KOP1)
C
C     CUTSM IS OBTAINED FROM KOP2.
C     KOP2 SPECIFIES THE DESIRED ACCURACY OF THE ASSYMPTOTIC
C     EXPANSION.  ROUTINE FMTGEN IS CALLED TO CHECK THE VIABILITY
C     OF THE ASSYMPTOTIC EXPANSION FOR VARIOUS VALUES OF CUTSM.
      TOL=TENM9
      CUTSM=TEN
      CUTML=F42
      IF(KOP2.EQ.0)GO TO 90
      TOL=TEN**(-6-KOP2)
      T=F20
   60 CALL FMTGEN(F,T,1,ICK)
      IF(ICK)80,70,80
   70 T=T-ONE
      IF(T-TEN)90,60,60
   80 CUTSM=T+ONE
C
C     CUTML IS TAKEN FROM KOP3.
   90 CUTML=F42
      IF(KOP3.NE.0)CUTML=DFLOAT(KOP3)
C     IF((KOP1+KOP2+KOP3).NE.0)WRITE(IOUT,2001)KOP1,KOP2,KOP3,CUT0S,
C    1 CUTSM,CUTML ,TOL
C     WRITE(IOUT,2001)KOP1,KOP2,KOP3,CUT0S,CUTSM,CUTML,TOL
      RETURN
      END
      SUBROUTINE FORMFN(KOP,MAXDIM,F,N,X,FMT)
C
C     KOP IS THE INITIALIZATION VARIBLE FOR THE FMT ROUTINES.
C     F IS THE F MATRIX TO BE FILLED BY THIS ROUTINE.
C     N IS THE DESIRED ORDER OF THE RYS POLYNOMIAL.
C     X IS THE ARGUMENT FOR F(M,X).
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA)
C##
      PARAMETER (NA= 36)
C###
      COMMON /A/ IOP(99),IDUM1(7),IDUM2(NA),DUM1(NA,3),DUM2(4),
     1 IDUM3(401)
      COMMON/IO/IN,IOUT,IODUM(215)
C
      DIMENSION F(MAXDIM,MAXDIM),FMT(20)
C
C
C     N REFERS TO THE ORDER OF THE PROBLEM BEING SOLVED.  F IS FILLED
C     TO ORDER N+1.  WE MUST OBTAIN F(M,T) M=0,1,2,...,2*N.
      NFILL=N+1
      CALL FMTGEN(FMT,X,2*N+1,ICK)
      IF (ICK.NE.0) THEN
         WRITE (IOUT,9000) X
9000     FORMAT ('0FAILURE IN FORMFN FOR X =',F15.6,' - RUN ABORTED.')
         IOP(1) = -2
         RETURN
      END IF
C
C     FILL THE F-MATRIX.
      DO 20 J=1,NFILL
      DO 20 I=1,NFILL
      IND=I+J-1
   20 F(I,J)=FMT(IND)
C
      RETURN
      END
      SUBROUTINE FPX(NDEG,NFD,A,AP)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
C     ROUTINE TO COMPUTE THE COEFFICIENTS OF THE FIRST DERIVATIVE
C     OF A POLYNOMIAL STORED IN A.  THE FIRST DERIVATIVE
C     COEFFICIENTS ARE DELIVERED TO AP.
C
      DIMENSION A(NDEG), AP(NDEG)
C
      NFD = NDEG - 1
      IF(NDEG.LT.1) RETURN
      DO 10 I = 1, NDEG
   10     AP(I) = A(I) * DFLOAT(NDEG-I+1)
      RETURN
      END
      FUNCTION FX(N,X,A)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
C     THIS FUNCTION EVALUATES THE POLYNOMIAL OF DEGREE N WITH
C     COEFFICIENTS A AT THE POINT X.  THE POLYNOMIAL IS WRITTEN AS
C
C     A(1)*X**N+A(2)*X**(N-1)+...+A(N)*X+A(N+1)
C
C     NOTE THAT A IS USED TO N+1 LOCATIONS.
C
      DIMENSION A(N)
C
      DATA ZERO/0.0D0/
C
C     ALLOW FOR ZERO ORDER POLYNOMIAL.
C
      FX = ZERO
      IF(N.EQ.0) FX = A(1)
      IF(N.LT.1) RETURN
C
C     POLYNOMIAL IS NOT ZERO ORDER, COMPUTE AS NORMAL.
C
      SUM = A(N+1)
      XX = X
      DO 40 I = 1, N
      SUM = SUM + A(N-I+1) * XX
   40 XX = XX*X
      FX = SUM
      RETURN
      END
      SUBROUTINE RFPX(NDEG,NFD,A,AP)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      DIMENSION A(NDEG),AP(NDEG)
C
C     ROUTINE TO COMPUTE THE COEFFICIENTS OF THE FIRST DERIVATIVE
C     OF A POLYNOMIAL STORED IN A.
C     THE FIRST DERIVATIVE COEFFICIENTS ARE DELIVERED TO AP.
      NFD=NDEG-1
      K=NDEG
      DO 10 I=1,NDEG
      AP(I)=A(I)*DFLOAT(K)
   10 K=K-1
      RETURN
      END
      FUNCTION RFX(N,X,A)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      DIMENSION A(N)
C
      DATA ZERO/0.0D0/
C
C     THIS FUNCTION EVALUATES THE POLYNOMIAL OF DEGREE N WITH
C     COEFFICIENTS A AT THE POINT X.
C
C     THE POLYNOMIAL IS WRITTEN AS
C
C     A(1)*X**N+A(2)*X**(N-1)+...+A(N)*X+A(N+1)
C
C     NOTE THAT A IS USED TO N+1 LOCATIONS.
C
C     ALLOW FOR ZERO ORDER POLYNOMIAL.
      IF(N)10,10,30
   10 RFX=A(1)
   20 RETURN
C
C     POLYNOMIAL IS NOT ZERO ORDER, COMPUTE AS NORMAL.
   30 SUM=A(N+1)
      XX=X
      K=N
C
      DO 40 I=1,N
      SUM=SUM+A(K)*XX
      XX=XX*X
   40 K=K-1
C
      RFX=SUM
      GO TO 20
C
      END
      SUBROUTINE RPOLX(N,X,TP2,WP2)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      DIMENSION TP2(N),WP2(N)
C
C     GIVEN N (ORDER OF THE RYS POLYNOMIAL) AND X (THE ARGUMENT TO
C     THE F(M,T) ROUTINE), THIS ROUTINE USES COMMON/T2W2/ TO INTER-
C     POLATE THE ROOTS AND WEIGHTS OF THE RYS POLYNOMIAL.
C
      COMMON /T2W2/ IRYSCT,KINTRP,KCALC,KASSYM,NINTRP,NMAX,
     1 LENT(5),IADR(5),F6I,F20I,S(7),YSTEP(5),YCUT(2,7),
     2 HROOT2(28),HWEIGH(28),T2(3745),W2(3745)
      COMMON/MTPC/ATHETA,BTHETA,APHI,BPHI,CM1,C0,C1,C2,M
      COMMON/IO/IN,IOUT,IODUM(215)
C
C     FORCE LOADING OF COMMON /T2W2/.
C
      EXTERNAL BDT2W2
C
      EQUIVALENCE (TH2,PH2,BT2,Y100)
C
      DATA ONE/1.0D0/, FOUR/4.0D0/
C
C     GIVEN X, COMPUTE Y.
      SX=S(N)*X
      Y=SX/(ONE+SX)
C
C     GIVEN Y, DECIDE WHAT TO DO.
      IF(Y.GE.YCUT(2,N))GO TO 200
      IF(Y.GE.YCUT(1,N))GO TO 100
      IF((N.GT.NINTRP).OR.(IRYSCT.EQ.1))GO TO 100
C
C*****************************************************************
C     COMPUTE ROOTS AND WEIGHTS BY INTERPOLATION.
C*****************************************************************
C
C     MAP ONTO 100.
      KINTRP=KINTRP+1
      Y100=YSTEP(N)*Y
      M=IDINT(Y100)
      THETA=Y100-DFLOAT(M)
      PHI=ONE-THETA
C
C     COMPUTE POLYNOMIALS IN THETA AND PHI.
      TH2=THETA*THETA
      ATHETA=THETA*(TH2-ONE)*F6I
      BTHETA=ATHETA*(TH2-FOUR)*F20I
      PH2=PHI*PHI
      APHI=PHI*(PH2-ONE)*F6I
      BPHI=APHI*(PH2-FOUR)*F20I
C
C     COMPUTE INTERPOLATION COEFFICIENTS.
      AT2=ATHETA+ATHETA
      BT2=BTHETA+BTHETA
      BT3=BT2+BTHETA
      BT4=BT3+BTHETA
      AP2=APHI+APHI
      BP2=BPHI+BPHI
      BP3=BP2+BPHI
      BP4=BP3+BPHI
      CM1=BTHETA-BP4+APHI
      C0=PHI-BT4+(BP3+BP3)+ATHETA-AP2
      C1=THETA+(BT3+BT3)-BP4-AT2+APHI
      C2=BPHI+ATHETA-BT4
C
C     ALL REQUIRED INFORMATION IS NOW READY.  PERFORM INTERPOLATION.
C     THIS STEP CREATES N ROOTS (SQUARED) AND N WEIGHTS.
      IAD=IADR(N)
      DO 10 I=1,N
      TP2(I)=DINT2E(T2(IAD))
      WP2(I)=DINT2E(W2(IAD))
      WP2(I)=DSQRT(WP2(I))
   10 IAD=IAD+LENT(N)
      RETURN
C
C***************************************************************
C     COMPUTE ROOTS AND WEIGHTS BY DIRECT METHOD.
C***************************************************************
C
  100 KCALC=KCALC+1
      CALL RYSPOL(N,X,TP2,WP2,0)
      RETURN
C
C***************************************************************
C     COMPUTE RYS ROOTS AND WEIGHTS FOR LARGE X BY A HERMITE POLYNOMIAL
C     APPROXIMATION.
C     HROOT2 CONTAINS THE SQUARES OF THE ZEROES OF THE FIRST SEVEN
C     EVEN HERMITE POLYNOMIALS.
C     HWEIGH CONTAINS THE CORRESPONDING WEIGHTS (NOT SQUARED).
C***************************************************************
  200 KASSYM=KASSYM+1
      XI=ONE/X
      XROOTI=DSQRT(XI)
      IAD=(N*(N-1))/2
      DO 210 I=1,N
      IAD=IAD+1
      TP2(I)=HROOT2(IAD)**2*XI
  210 WP2(I)=HWEIGH(IAD)*XROOTI
      RETURN
      END
      SUBROUTINE RYSPOL(N,X,T,W,IPRINT)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA)
C##
      PARAMETER (NA= 36)
C###
      DOUBLE PRECISION RA,RAP,RR,THR1,RZERO
C
C     THIS ROUTINE RECEIVES N (THE DESIRED ORDER OF THE RYS
C     POLYNOMIAL) AND X (THE ARGUMENT OF FM) AND RETURNS THE N
C     POSITIVE ROOTS IN T AND THE N CORRESPONDING WEIGHTS IN W.
C     THE ROOTS ARE ORDERED IN ASCENDING VALUES.
C
      COMMON /A/ IOP(99),IDUM1(7),IDUM2(NA),DUM1(NA,3),DUM2(4),
     1 IDUM3(401)
      COMMON/IO/IN,IOUT,IODUM(215)
C
      DIMENSION T(N),W(N)
      DIMENSION F(10,10),C(10,10),A(20),RA(20),RR(20),DR(18),AP(20)
      DIMENSION RAP(20),FMT(20)
C
      EQUIVALENCE (C00,C(1,1)), (C01,C(1,2)), (C11,C(2,2))
      EQUIVALENCE (F0,F(1,1)), (F1,F(2,1)), (F2,F(2,2))
C
      DATA ZERO/0.0D0/,ONE/1.0D0/,THR3/1.0D-12/,THR2/1.0D-12/
      DATA THR1/1.0D-4/,RZERO/0.0D0/
      DATA ITMAX/50/,MAXDIM/10/
C
C2000 FORMAT(' ... IN RYSPOL  N=',I2,'   X=',E20.13)
 2001 FORMAT('0FROM RYSPOL, ILLEGAL N  ',I6/)
C2002 FORMAT(15X,'F-MATRIX')
C2003 FORMAT(//'0FLAMB1 = ',E32.25///15X,'INITIAL C-MATRIX'/)
C2004 FORMAT(///15X,'FINAL C-MATRIX'/)
C2005 FORMAT(///'0MODIFIED COEFFICIENTS'/(1X,I2,1X,E32.25))
C2007 FORMAT(///'0RAW DOUBLE-PRECISION ROOTS'/(1X,I2,2X,E32.25))
C2008 FORMAT(///'0DERIVATIVE ORDER = ',I2//'0COEFFICIENTS'/(1X,I2,2X,
C    1 E32.25))
 2009 FORMAT(/'0ITMAX EXCEEDED FOR I = ',I2/)
 2010 FORMAT(/'0ZERO DERIVATIVE AT I = ',I2,2X,E32.25/)
C2011 FORMAT('0FINAL ROOTS AND WEIGHTS'/(1X,I2,2E20.13))
C2012 FORMAT(' F(M,T)'/(1X,I2,1X,E20.13))
C2013 FORMAT(' FM-CHECK   M,DEL,RATIO=',I3,2E10.3)
C2014 FORMAT(1X,E24.16)
C
C
C     SET PRINT VARIABLE.
C     IF(IPRINT.NE.0)WRITE(IOUT,2000)N,X
      NP1=N+1
C
C     TEST FOR ILLEGAL N.
      IF(N.GT.0)GO TO 30
         WRITE(IOUT,2001)N
         IOP(1) = -2
         RETURN
C
C     COMPUTE ROOTS AND WEIGHTS BY BRUTE FORCE METHOD.
C
C     FIRST, COMPUTE F-MATRIX.
   30 CALL FORMFN(KOP1,MAXDIM,F,N,X,FMT)
C     IF(IPRINT.LE.1)GO TO 50
C        ITEMP=2*N+1
C        WRITE(IOUT,2012)(I,FMT(I),I=1,ITEMP)
C        WRITE(IOUT,2002)
C        CALL MATOUT(F,MAXDIM,MAXDIM,NP1,NP1)
C
C     INITIALIZE THE C-MATRIX AND THEN COMPUTE THE FIRST 3 TERMS
C     OF THE C-MATRIX.
   50 DO 70 I=1,NP1
      DO 60 J=1,NP1
   60 C(I,J)=ZERO
   70 C(I,I)=ONE
C
      C00=ONE/ DSQRT(F0)
      FLAMB1=ONE/( DSQRT(F0*(F0*F2-F1*F1)))
      C01=-F1*FLAMB1
      C11= F0*FLAMB1
C
C     IF(IPRINT.LE.1)GO TO 90
C        WRITE(IOUT,2003)FLAMB1
C        CALL MATOUT(C,MAXDIM,MAXDIM,NP1,NP1)
C
C     BYPASS ORTHOGONALIZATION IF N=1.
   90 IF(N.GT.1)CALL CMPLTC(MAXDIM,NP1,3,C,F)
C
C     IF(IPRINT.LE.1)GO TO 130
C        WRITE(IOUT,2004)
C        CALL MATOUT(C,MAXDIM,MAXDIM,NP1,NP1)
C
C     AT THIS POINT, THE COLUMNS OF THE C-MATRIX CONTAIN THE
C     COEFFICIENTS OF THE RYS POLYNOMIALS (FOR A GIVEN X).
C     THE COEFFICIENTS ARE ARRANGED IN ORDER OF INCREASING POWER OF T.
C
C     TEST FOR N=1, FORM THIS POINT ON N=1 IS TREATED SEPARATELY.
  130 IF(N.GT.1)GO TO 140
C
C     EXPLICIT CODE FOR N=1.
C     AT THIS POINT, BOTH THE F AND C-MATRICES EXIST.
C
C     WE MUST SOLVE THE EQUATION
C
C     Y=C01+C11*T**2
C
C     FOR Y=0.
C
      T(1)= DSQRT(-C01/C11)
      W(1)=F0
      GO TO 370
C
C     COPY THE COEFFICIENTS OF THE N(TH) POLYNOMIAL (RESIDING IN THE
C     N+1(TH) COLUMN OF C)  TO THE HOLDING ARRAY A, REVERSING THE ORDER
C     AND EXPANDING TO THE 2*N REPRESENTATION.  AT THIS TIME, PREPARE
C     THE SINGLE PRECISION COPY OF A.
  140 K=NP1+N
      DO 150 I=1,NP1
      A(K)=C(I,NP1)
      RA(K)= A(K)
  150 K=K-2
      NDEG=N+N
      NDEGP1=NDEG+1
C
C     ZERO THE REMAINING ELEMENTS OF A AND RA.
C     (CODE ADDED BY MIKE PETERSON, UNIV. OF TORONTO CHEMISTRY).
      DO 160 I=2,NDEG,2
      A(I) = ZERO
  160 RA(I) = ZERO
C
C     IF(IPRINT.LE.1)GO TO 170
C        WRITE(IOUT,2005)(I,A(I),I=1,NDEGP1)
C
C     COMPUTE CRUDE ZEROES.
  170 CALL RYSROT(NDEG,RA,RR,RAP,IPRINT)
C
      DO 200 I=1,N
  200 DR(I)=RR(I)
C
C     IF(IPRINT.LE.1)GO TO 270
C        WRITE(IOUT,2007)(I,DR(I),I=1,N)
C
C     THE RAW DOUBLE PRECISION ROOTS (N OF THEM) ARE IN DR.
C     THESE ARE NOW IMPROVED VIA A NEWTON-RAPHSON SCHEME.  THE ITERATION
C     IS CARRIED OUT UNTIL ITMAX IS EXCEEDED OR UNTIL THE RATIO OF THE
C     IMPROVEMENT TO THE TOTAL IS .LE. THR2.
C
C     OBTAIN THE COEFFICIENTS OF THE FIRST DERIVATIVE.
  270 CALL FPX(NDEG,NFD,A,AP)
      NFDP1=NFD+1
C
C     IF(IPRINT.LE.1)GO TO 300
C        WRITE(IOUT,2008)NFD,(I,AP(I),I=1,NFDP1)
C
C     COMMENCE LOOP OVER ZEROES.
  300 DO 330 I=1,N
      ROOT=DR(I)
      DO 320 J=1,ITMAX
C     OBTAIN F(X) AND FP(X).
      FF= FX(NDEG,ROOT,A)
      FFP=FX(NFD,ROOT,AP)
C     TEST FOR ZERO DERIVATIVE.
      IF( DABS(FFP)-THR3)325,310,310
C     OBTAIN EXTRAPOLATION QUANTITY.
  310 EXTRAP=FF/FFP
C     COMPUTE RATION OF CHANGE TO TOTAL.
      RATIO=EXTRAP/ROOT
C     TEST FOR CONVERGENCE.
      IF(DABS(RATIO)-THR2)330,330,320
C     CONTINUE ITERATING.
  320 ROOT=ROOT-EXTRAP
      WRITE(IOUT,2009)I
      IOP(1) = -2
      GO TO 330
  325 WRITE(IOUT,2010)I,FFP
      IOP(1) = -2
C     UPDATE ROOT.
  330 T(I)=ROOT
C
C     ROOTS NOW EXIST IN FULL DOUBLE PRECISION IN T.
C     COMPUTE WEIGHTS.
      DO 360 I=1,N
      W(I)=ZERO
      ROOT=T(I)
      DO 350 J=1,N
      SUM=ZERO
      DO 340 K=1,J
      KM1=K-1
  340 SUM=SUM+(C(K,J)*(ROOT**(2*KM1)))
  350 W(I)=W(I)+SUM*SUM
  360 W(I)=ONE/W(I)
C
C
C     IF REQUESTED, PRINT FINAL RESULTS AND RETURN.
  370 CONTINUE
C     IF(IPRINT.EQ.0)GO TO 380
C        WRITE(IOUT,2011)(I,T(I),W(I),I=1,N)
C
C     LAST, BUT NOT LEAST, SQUARE THE RESULTANT ROOTS.
  380 DO 390 I=1,N
  390 T(I)=T(I)*T(I)
C
C     TEST THE COMPUTED ROOTS AND WEIGHTS AGAINST THE
C     F(M,T) COMPUTED IN FORMFN.
C     MLIM=2*N
C     DO 399 M=1,MLIM
C     IF(M.GT.1)GO TO 394
C     FMTEST=ZERO
C     DO 391 I=1,N
C 391 FMTEST=FMTEST+W(I)
C     GO TO 398
C 394 FMTEST=ZERO
C     DO 395 I=1,N
C 395 FMTEST=FMTEST+(T(I)**(M-1)*W(I))
C 398 DEL=ABS(FMT(M)-FMTEST)
C     RATIO=DEL/FMT(M)
C     IF(IPRINT.EQ.0)GO TO 399
C     WRITE(IOUT,2013)M,DEL,RATIO
C     WRITE(IOUT,2014)FMT(M)
C     WRITE(IOUT,2014)FMTEST
C 399 CONTINUE
C
C     RETURN TO CALLING ROUTINE.
      RETURN
C
      END
      SUBROUTINE RYSROT(NDEG,A,R,AP,IPRINT)
C**********************************************************************
C     ROUTINE TO LOCATE RAW ROOTS FOR RYSPOL.  THIS ROUTINE
C     IS NOT PARTICULARY CLEVER.  IT MERELY SEARCHES DOWNWARDS
C     FROM 1.0 UNTIL IT LOCATES THE HEGHEST ROOT AND THE
C     SEQUENTIALLY ISOLATES THE REMAINING ROOTS BY LOOKING
C     FOR THEM.
C     THIS IS NOT INTENDED TO BE A GENERAL ROUTINE.
C**********************************************************************
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA)
C##
      PARAMETER (NA= 36)
C###
      COMMON /A/ IOP(99),IDUM1(7),IDUM2(NA),DUM1(NA,3),DUM2(4),
     1 IDUM3(401)
      COMMON/IO/IN,IOUT,IODUM(215)
C
      DIMENSION A(NDEG),R(NDEG),AP(NDEG)
C
      DATA ZERO,ONE/0.0D0,1.0D0/, ITMAX/30/, THR1,THR2/1.0D-5,1.0D-10/
      DATA PT5/0.5D0/, FUZZ/0.0001D0/, STEP/0.01D0/
C
 2001 FORMAT(' RYSROT   ITMAX EXCEEDED FOR ROOT=',I3)
 2002 FORMAT(' ZERO DERIVATIVE ',E20.13)
 2003 FORMAT(' X RAN OUT IN RYSROT.')
 2004 FORMAT(' ROOTS FROM RYSROT'/(I3,E20.13))
C
C     INITIALIZATION.
      CALL RFPX(NDEG,NFD,A,AP)
      NROOTS=NDEG/2
      IROOT=1
      R(1)=ONE
C
C     SEARCH DOWNWARDS UNTIL SIGN CHANGES.
   10 X=R(IROOT)-FUZZ
      SGN1=RFX(NDEG,X,A)
   20 X=X-STEP
C     IF X GOES NEGATIVE WE HAVE FAILED.
      IF(X.LT.ZERO)GO TO 100
      SGN2=RFX(NDEG,X,A)
      IF(DSIGN(ONE,SGN1).EQ.DSIGN(ONE,SGN2))GO TO 20
C     INTERPOLATE TO CENTER OF INTERVAL.
      R(IROOT)=X+PT5*STEP
C     ISOLATE ROOT VIA A NEWTON-RAPHSON SEARCH.
      DO 40 J=1,ITMAX
      F =RFX(NDEG,R(IROOT),A)
      FP=RFX(NFD,R(IROOT),AP)
      IF(DABS(FP).LT.THR2)GO TO 50
      EXTRAP=F/FP
      IF(DABS(EXTRAP/R(IROOT)).LE.THR1)GO TO 60
   40 R(IROOT)=R(IROOT)-EXTRAP
      WRITE(IOUT,2001)IROOT
      GO TO 60
   50 WRITE(IOUT,2002)FP
   60 IROOT=IROOT+1
      IF(IROOT.GT.NROOTS)GO TO 70
C     GUESS AT NEXT ROOT AND GO AGAIN.
      R(IROOT)=R(IROOT-1)
      GO TO 10
C     REVERSE ORDER OF ROOTS TO CONFORM WITH EXPECTATIONS
C     OF RYSPOL.
   70 NHALF=NROOTS/2
      IF(1.GT.NHALF)GO TO 90
      DO 80 I=1,NHALF
      X=R(I)
      R(I)=R(NROOTS+1-I)
   80 R(NROOTS+1-I)=X
   90 IF(IPRINT.GE.2)WRITE(IOUT,2004)(I,R(I),I=1,NROOTS)
      RETURN
C
  100 WRITE(IOUT,2003)
      IOP(1) = -2
      RETURN
      END
      SUBROUTINE RYSSET(IACCIN,IPRINT)
C*
C     ----------------
C     GAUSSIAN 82
C     U OF T VERSION
C     APRIL 1987
C     ----------------
C*
C*********************************************************************
C     ROUTINE TO INITIALIZE RYS INTERPOLATION/CALCULATION
C     CODE.
C
C     ARGUMENTS
C     IACCIN ... DESIRED ACCURACY OF RESULTS.
C               -1 ... END OF RUN ... PRINT STATISTICS.
C                0 ... (DEFAULT) 9 SIGNIFICANT FIGURES
C                      USE COMBINATION OF INTERPOLATION,
C                      CALCULATION AND ASSYMPTOTIC FORMULA.
C                1 ... USE ONLY CALCULATION AND ASSYMPTOTIC
C                      METHODS, GOOD TO ABOUT 13 FIGURES.
C                ALL OTHER VALUES OF IACCIN ARE TREATED AS 0.
C     IPRINT ... PRINT VARIABLE.
C                0 ... PRINT STATISTICS.
C                1 ... DO NOT PRINT STATISTICS.
C********************************************************************
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      COMMON /T2W2/ IRYSCT,KINTRP,KCALC,KASSYM,NINTRP,NMAX,
     1 LENT(5),IADR(5),F6I,F20I,S(7),YSTEP(5),YCUT(2,7),
     2 HR(28),HW(28),T2(3745),W2(3745)
      COMMON/IO/IN,IOUT,IODUM(215)
C
      DIMENSION XCDAT1(7,2),XCDAT2(7,2)
C
      DATA XCDAT1/ 5*60.0D0,2*0.0D0,
     1             7*0.0D0/
      DATA XCDAT2/ 22.0D0,33.0D0,40.0D0,45.0D0,50.0D0,55.0D0,60.0D0,
     1             30.0D0,42.0D0,49.0D0,55.0D0,62.0D0,68.0D0,73.0D0/
      DATA ONE/1.0D0/, SIX/6.0D0/, PT05/0.05D0/
C
C2001 FORMAT(' RYSSET:  CUTOFFS ...'/(I3,2F11.4))
C2002 FORMAT(' RYSSET:  KINTRP=',I9,'   KCALC=',I9,'   KASSYM=',I9)
 2002 FORMAT ('0RYSSET ROOT STATISTICS:     INTERPOLATED:',I9,5X,
     1 'CALCULATED:',I9,5X,'ASSYMPTOTIC APPROXIMATION:',I9)
C
      IF(IACCIN.EQ.-1)GO TO 100
      KINTRP=0
      KCALC=0
      KASSYM=0
      IF (IACCIN .EQ. 1) THEN
         IACC = 1
      ELSE
         IACC = 0
      END IF
      IRYSCT=IACC
      F6I=ONE/SIX
      F20I=PT05
      CALL FMTSET(0,6,50)
      DO 10 I=1,7
      YCUT(1,I)=S(I)*XCDAT1(I,IACC+1)/(ONE+S(I)*XCDAT1(I,IACC+1))
   10 YCUT(2,I)=S(I)*XCDAT2(I,IACC+1)/(ONE+S(I)*XCDAT2(I,IACC+1))
C     IF(IPRINT.NE.0)WRITE(IOUT,2001)(I,YCUT(1,I),YCUT(2,I),I=1,7)
      RETURN
C
  100 IF (IPRINT .EQ. 0) WRITE(IOUT,2002)KINTRP,KCALC,KASSYM
      RETURN
      END
