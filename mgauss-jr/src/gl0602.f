C     GL0602       01 APR 90                                         MRP
C?IBM/GLD/GBR/VAX/UNX
      SUBROUTINE PMO
C??
C?CDC
C     PROGRAM PMO
C??
C=PMO
C CHAPTER 9: PERTURBATIONAL MOLECULAR ORBITAL ANALYSIS.
C **********
C
C1INTRODUCTION
C     LINK 0602
C*
C     --------------
C     U OF T VERSION
C     APRIL 1990
C     --------------
C*
C     SETUP PROGRAM FOR PMO ANALYSIS.
C
C     FOR DETAILS OF THE QUANTITATIVE PMO ANALYSIS SEE:
C     M.-H. WHANGBO, H.B. SCHLEGEL AND S. WOLFE, J. AM. CHEM. SOC., 99,
C     1296 (1977). D. KOST, H.B. SCHLEGEL, D.J. MITCHELL AND S. WOLFE,
C     CAN. J. CHEM., 57, 729 (1979).
C*
C     THE TYPE OF ANALYSIS TO BE PERFORMED IS SPECIFIED BY ONE CARD
C
C     TYPE . MOLNO . TRANSF . BODY3 . EPART  (A4,4I4)
C
C     WHERE
C
C     TYPE IS ONE OF ...
C     FRAG ... FRAGMENT ORBITAL ANALYSIS FROM FOCK MATRIX PARTITIONING
C     FSEP ... FRAGMENT ORBITAL ANALYSIS FROM SEPARATE MOLECULES
C     PERT ... PERTURBATION ANALYSIS (BASED ON SEPARATE MOLECULES)
C     FSTD ... FRAGMENT ORBITAL ANALYSIS FROM 'STANDARD' MOLECULES
C
C     MOLNO ... MOLECULE INDEX NUMBER
C     FOR FRAG MOLNO IS IGNORED
C     FOR FSEP MOLNO IS 1 FOR THE FIRST MOLECULAR FRAGMENT, 2 FOR
C     THE SECOND, AND 3 FOR THE THIRD (IF PRESENT), AND 0 FOR THE
C     COMPOSITE MOLECULE
C     FOR PERT MOLNO IS 1 FOR THE UNPERTURBED MOLECULE, 2 FOR THE
C     PERTURBED MOLECULE
C     FOR FSTD MOLNO IS 1 FOR THE A-H FRAGMENT, 2 FOR THE B-H FRAGMENT,
C     AND 0 FOR THE A-B COMPOSITE
C
C     TRANSF ... FRAGMENT ORBITAL TRANSFORMATION
C     0  NO TRANSFORMATION REQUIRED
C     1  TRANSFORMATION REQUIRED ... ONE CARD CONTAINING M . N . NORB
C        (3I4) IS READ PER PAIR OF ORBITALS TO BE TRANSFORMED. IF NORB
C        IS 0, THE OVERLAP OF ORBITAL M WITH ALL OTHER FRAGMENT
C        ORBITALS IS MINIMIZED. IF NORB IS NON-ZERO, THE OVERLAP OF
C        ORBITAL M WITH ORBITAL NORB IS MINIMIZED. TERMINATE THE
C        TRANSFORMATIONS WITH A BLANK CARD.
C
C     BODY3 ... 3 BODY INTERACTIONS NEEDED (IE THERE ARE 3 FRAGMENTS)
C     0  NO
C     1  YES
C
C     EPART ... PERFORM ENERGY PARTITIONING
C     0  NO
C     1  YES
C*
C     THE INPUT SEQUENCE IS
C     1  INFORMATION CARD
C     2  FRAGMENT SPECIFICATION (FOR FRAG AND FSTD)
C     3  TRANSFORMATION CARDS (IF TRANSF IS 1)
C*
C     NOTE THAT THE FOCK MATRIX MUST BE SAVED IN FILE 15 OF UNIT IMAT
C     ... SEE IOP(19) OF LINK 0501 (CLOSED).
C*
C     PMO ANALYSIS IS POSSIBLE ONLY FOR CLOSED SHELL MOLECULES.
C*
C1OPTIONS
C     ******************************************************************
C     OPTIONS ... IOP()
C     ******************************************************************
C     IOP(13) TO IOP(60) ... NOT USED
C     ******************************************************************
C*
C==
C1
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA, NB=#NB)
C##
      PARAMETER (NA= 36, NB=200)
C###
      COMMON /A/ IOP(99)
      COMMON /A/ NATOMS,ICHARG,MULTIP,IAN(NA),NAE,NBE,NE,NBASIS
      COMMON /A/ CD1(NA,3),CD2(4),ICD(401)
C
      COMMON/C602A/FF(NB),F(NB,NB)
      COMMON/C602B/DD(NB),D(NB,NB)
      COMMON/C602C/IP(6),LFRG(NB),V(NB,NB)
C
      COMMON/IO/IN,IOUT,IODUM(215)
C
      CHARACTER*4 IFRAG,IFSEP,IPERT,IFSTD,ITYPE
C
 1000 FORMAT ('1',12('*')/' PMO ANALYSIS'/1X,12('*'))
 1010 FORMAT ('0PMO NOT POSSIBLE FOR OPEN SHELL MOLECULES')
 1020 FORMAT (A4,4I4)
 1030 FORMAT ('0ILLEGAL PMO TYPE ',A4,' REQUESTED')
 1050 FORMAT ('0OPTION CARD: ',A4,4I4)
C*
      DATA IFRAG/'FRAG'/,IFSEP/'FSEP'/,IPERT/'PERT'/,IFSTD/'FSTD'/
C*
      WRITE (IOUT,1000)
      IF (NAE .EQ. NBE) GO TO 10
C     OPEN SHELL
      WRITE (IOUT,1010)
      IOP(1)=-2
      RETURN
C     READ INFORMATION CARD
   10 READ (IN,1020) ITYPE,(IP(I),I=1,4)
      WRITE (IOUT,1050) ITYPE,(IP(I),I=1,4)
      IP(5)=0
      IP(6)=0
C
C     IP IS USED AS FOLLOWS:
C     IP(1) ... MOLNO.
C     IP(2) ... TRANSF.
C     IP(3) ... BODY3.
C     IP(4) ... EPART.
C     IP(5) ... 0 FOR FSEP, 1 FOR PERT.
C     IP(6) ... 0 FOR FRAG/FSTD, 1 FOR FSEP/PERT.
C
      CALL UPPER (ITYPE)
      IF (ITYPE .EQ. IFRAG) GO TO 60
      IF (ITYPE .EQ. IFSEP) GO TO 80
      IF (ITYPE .EQ. IPERT) GO TO 70
      IF (ITYPE .EQ. IFSTD) GO TO 90
      WRITE (IOUT,1030) ITYPE
      IOP(1)=-2
      RETURN
C     FRAGMENT ORBITALS FROM FOCK MATRIX PARTITIONING
   60 CALL FRGMNT
      RETURN
C     PERTURBATION CALCULATION
   70 IP(5)=1
C     PMO FROM SEPARATE MOLECULES
   80 IP(6)=1
      CALL PARTS
      RETURN
C     FRAGMENTS BASED ON STANDARD MOLECULES
   90 CALL PARTSE
      RETURN
      END
      SUBROUTINE FRGMNT
C*
C     --------------
C     U OF T VERSION
C     APRIL 1990
C     --------------
C*
C=PMO
C FRAGMENT ANALYSIS.
C ******************
C
C1FRAG
C     PROGRAM ADDITION TO MONSTERGAUSS TO PERMIT FRAGMENT
C     ORBITAL ANALYSIS OF RHF-SCF MO CALCULATIONS BY A FOCK
C     MATRIX PARTITIONING PROCEDURE.
C*
C     INPUT CONSISTS OF LFRG(I) (I=1,NBASIS)  (36I2)
C     WHERE LFRG(I) SPECIFIES THE FRAGMENT ATOMIC ORBITAL I BELONGS TO -
C     THE FRAGMENTS MUST BE NUMBERED SEQUENTIALLY: 1, 2 (AND
C     OPTIONALLY 3). E.G.,
C     FOR CH3OH DISSECTED INTO CH3...OH, USING AN STO-NG BASIS SET AND
C     WITH THE ATOMS READ INTO THE Z-MATRIX IN THE ORDER C H H H O H
C                           123456789012345678901234567890123456...
C     CARD INPUT WOULD BE    1 1 1 1 1 1 1 1 2 2 2 2 2 2
C*
C     AUTHORS  M.-H. WHANGBO, H.B. SCHLEGEL AND D.J. MITCHELL
C              QUEEN'S UNIVERSITY, KINGSTON, ONTARIO, CANADA
C     EXTENSIVELY MODIFIED BY M.R. PETERSON, UNIVERSITY OF TORONTO,
C     TORONTO, ONTARIO, CANADA
C*
C==
C1
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA, NB=#NB)
C##
      PARAMETER (NA= 36, NB=200)
C###
      COMMON /A/ IOP(99)
      COMMON /A/ NATOMS,ICHARG,MULTIP,IAN(NA),NAE,NBE,NE,NBASIS
      COMMON /A/ CD1(NA,3),CD2(4),ICD(401)
C
      COMMON/C602A/FF(NB),F(NB,NB)
      COMMON/C602B/DD(NB),D(NB,NB)
      COMMON/C602C/IP(6),LFRG(NB),V(NB,NB)
C
      COMMON/NFRAG/IFRG(3),NAEFRG(3)
      COMMON/IO/IN,IOUT,IODUM(215)
C
      DIMENSION Y(NB,NB),IOCC(NB)
C
      EQUIVALENCE (Y(1,1),V(1,1))
C
      DATA ZERO/0.0D0/,PT5/0.5D0/,ONEP25/1.25D0/
      DATA ONE/1.0D0/,PT75/0.75D0/,CRIT/1.0D-4/
C
 1000 FORMAT (36I2)
 1010 FORMAT (/'0FRAGMENT ORBITALS FROM FOCK MATRIX PARTITIONING OF A ',
     1 'COMPOSITE MOLECULE'//'0FRAGMENT SPECIFICATION'//(1X,30I3))
 1020 FORMAT ('1FRAGMENT ORBITALS'//)
 1030 FORMAT ('1OVERLAP IN FO BASIS'//)
 1040 FORMAT ('1FOCK MATRIX IN FO BASIS'//)
 1050 FORMAT ('1MO''S IN FO BASIS'//)
 1060 FORMAT ('1GROUP ORBITAL POPULATION'//)
 1070 FORMAT (/'0TOTAL FRAGMENT ORBITAL POPULATION'//)
 1080 FORMAT ('1ENERGY MATRIX FOR 3-BODY INTERACTIONS'//)
 1090 FORMAT ('1PARTITIONED ENERGY'//)
 1100 FORMAT ('1TOTAL FRAGMENT ORBITAL POPULATION'//)
 1110 FORMAT ('0FO SPECIFICATION ERROR')
 1120 FORMAT('1TWO-ELECTRON STABILIZING AND FOUR-ELECTRON DESTABILIZING'
     1 ,' INTERACTION ENERGIES (HARTREES)'/'0FO WITH A POPULATION'
     2 ,' GREATER THAN 1.25 ARE CONSIDERED DOUBLY OCCUPIED,'/
     3 ' FO WITH A POPULATION LESS THAN 0.75 ARE CONSIDERED ',
     4 'UNOCCUPIED AND'/' ALL OTHER INTERACTIONS ARE SET TO 0.0'//)
C
      READ (IN,1000) (LFRG(I),I=1,NBASIS)
      WRITE (IOUT,1010) (LFRG(I),I=1,NBASIS)
      IF (IOP(10) .EQ. 0) GO TO 55
      IFRG(1)=0
      IFRG(2)=0
      IFRG(3)=0
C
      CALL TREAD (8,V,NB,NB,NBASIS,NBASIS,1)
      CALL TREAD (15,F,NB,NB,NBASIS,NBASIS,1)
C*
C     ENTRY FOR STANDARD FRAGMENTS
C*
      ENTRY FSTD
      IF (IOP(10) .EQ. 0) GO TO 55
C
C     OBTAIN FRAGMENT ORBITALS
C
C     THIS IS COMPLICATED SINCE THE ORBITALS ON EACH FRAGMENT MUST BE
C     OBTAINED SEPARATELY. FIRST SAVE THE OVERLAP (V) AND FOCK (F)
C     MATRICES IN SCRATCH FILES ON DISK.
      CALL TWRITE (31,V,NB,NB,NBASIS,NBASIS,1)
      CALL TWRITE (32,F,NB,NB,NBASIS,NBASIS,1)
      N=0
C     NOW LOOP OVER THE POSSIBLE FRAGMENT NUMBERS.
      DO 40 K=1,3
      IF (K .GT. 1) CALL TREAD (31,V,NB,NB,NBASIS,NBASIS,1)
      CALL TRUNCA(LFRG,V,NBASIS,K,NFO)
      IF (NFO .EQ. 0) GO TO 50
      IFRG(K)=NFO
      CALL FRGTRS(NFO)
      IF (K .GT. 1) CALL TREAD (32,F,NB,NB,NBASIS,NBASIS,1)
      CALL TRUNCA(LFRG,F,NBASIS,K,NFO)
      CALL MATPAC(V,F,D,NFO,1)
      CALL MATPAC(D,V,F,NFO,3)
      CALL TRED12(NFO,NB,F,D,FF,DD,2)
      CALL MATPAC(V,D,F,NFO,2)
C     NOW ACCUMULATE EIGENVECTORS AND EIGENVALUES IN D AND DD.
      IF (K .EQ. 1) GO TO 20
      CALL TREAD (33,DD,NB,1,N,1,0)
      CALL TREAD (4,D,NB,NB,NBASIS,N,0)
   20 DO 30 J=1,NFO
      IQ=N+J
      DD(IQ)=FF(J)
      IPP=0
      DO 30 I=1,NBASIS
      TEMP=ZERO
      IF (LFRG(I) .NE. K) GO TO 30
      IPP=IPP+1
      TEMP=F(IPP,J)
   30 D(I,IQ)=TEMP
      N=N+NFO
      CALL TWRITE (4,D,NB,NB,NBASIS,N,0)
   40 CALL TWRITE (33,DD,NB,1,N,1,0)
   50 IF (N .NE. NBASIS) GO TO 310
      CALL TREAD (33,FF,NB,1,NBASIS,1,0)
      CALL TREAD (4,F,NB,NB,NBASIS,NBASIS,0)
C
      WRITE (IOUT,1020)
      CALL GBSOUT(F,FF,NB,NB,NBASIS,1)
C
   55 IF (IP(2) .NE. 0) CALL TRANSF
      IF (IOP(1) .NE. 0 .OR. IOP(10).EQ.0) RETURN
      GO TO 100
C*
C     ENTRY FOR SEPARATE MOLECULES
C*
      ENTRY FSEP
      WRITE (IOUT,1020)
      CALL GBSOUT(F,FF,NB,NB,NBASIS,1)
C     SET OCCUPANCY VECTOR - ALL FO DOUBLY OCCUPIED OR UNOCCUPIED.
C     LOOP OVER POSSIBLE FRAGMENTS.
      K=0
      DO 80 J=1,3
      IFJ=IFRG(J)
      IF (IFJ .EQ. 0) GO TO 100
C     LOOP OVER OCCUPIED ORBITALS FROM THIS FRAGMENT.
      IFI=NAEFRG(J)
      DO 60 I=1,IFI
      K=K+1
   60 IOCC(K)=2
C     LOOP OVER UNOCCUPIED ORBITALS FROM THIS FRAGMENT.
      IF (IFI .EQ. IFJ) GO TO 80
      IFI=IFI+1
      DO 70 I=IFI,IFJ
      K=K+1
   70 IOCC(K)=0
   80 CONTINUE
C
C     OVERLAP IN FO BASIS
C
  100 CALL TREAD (8,V,NB,NB,NBASIS,NBASIS,1)
      CALL MATPAC(F,V,D,NBASIS,2)
      CALL MATPAC(D,F,V,NBASIS,1)
C     SAVE OVERLAP (V) ON DISK TEMPORARILY TO SAVE CORE
      CALL TWRITE (31,V,NB,NB,NBASIS,NBASIS,1)
C     SAVE F (COEFFICIENTS) ON DISK (NEEDED FOR ENERGY PARTITIONING)
      IF (IP(4) .NE. 0) CALL TWRITE (4,F,NB,NB,NBASIS,NBASIS,0)
      WRITE (IOUT,1030)
      CALL MATOUT(V,NB,NB,NBASIS,NBASIS)
C
C     FOCK MATRIX OVER FO BASIS
C
      CALL TREAD (15,V,NB,NB,NBASIS,NBASIS,1)
      CALL MATPAC(F,V,D,NBASIS,2)
      CALL MATPAC(D,F,V,NBASIS,1)
      WRITE (IOUT,1040)
      CALL MATOUT(V,NB,NB,NBASIS,NBASIS)
C     SAVE FOCK MATRIX IN FILE 33.
      CALL TWRITE (33,V,NB,NB,NBASIS,NBASIS,1)
C
      IF (IP(5) .EQ. 1) GO TO 120
C     FRAGMENT ORBITAL CALCULATION
      CALL TREAD (8,D,NB,NB,NBASIS,NBASIS,1)
      CALL TRUNCA(LFRG,D,NBASIS,0,NFO)
      IF (IP(6) .EQ. 1) GO TO 130
C     RESET LFRG TO REPRESENT THE NEW FO ORDER (BY FRAGMENTS).
      K=0
      DO 110 I=1,3
      N=IFRG(I)
      IF (N .EQ. 0) GO TO 130
      DO 110 J=1,N
      K=K+1
  110 LFRG(K)=I
      GO TO 130
C     PERTURBATION CALCULATION
  120 CALL TREAD (17,D,NB,NB,NBASIS,NBASIS,1)
C
C     TRANSFORMATION MATRIX (FO IN TERMS OF MO)
C
  130 CALL MATPAC(F,D,Y,NBASIS,2)
      CALL TREAD (25,F,NB,NB,NBASIS,NBASIS,0)
      CALL MATPAC(Y,F,D,NBASIS,1)
      WRITE (IOUT,1050)
      CALL MATOUT(D,NB,NB,NBASIS,NBASIS)
C
C     GROUP ORBITAL POPULATION
C
      DO 200 I=1,NBASIS
      DO 200 J=1,I
      SUM=ZERO
      DO 201 K=1,NAE
  201 SUM=SUM+D(I,K)*D(J,K)
      Y(I,J)=SUM
  200 Y(J,I)=SUM
C
C     BRING BACK OVERLAP MATRIX (IN D THIS TIME)
      CALL TREAD (31,D,NB,NB,NBASIS,NBASIS,1)
C     SAVE Y (OMEGA) MATRIX TEMPORARILY FOR ENERGY PARTITIONING
      IF (IP(4) .NE. 0) CALL TWRITE (32,Y,NB,NB,NBASIS,NBASIS,1)
      DO 202 J=1,NBASIS
      DO 202 I=J,NBASIS
      TEMP=Y(I,J)*D(I,J)
      TEMP=TEMP+TEMP
      F(I,J)=TEMP
  202 F(J,I)=TEMP
      WRITE (IOUT,1060)
      CALL MATOUT(F,NB,NB,NBASIS,NBASIS)
C
      DO 204 I=1,NBASIS
      SUM=ZERO
      DO 203 J=1,NBASIS
  203 SUM=SUM+F(J,I)
      IF (IP(6) .EQ. 1) GO TO 204
C     CLASSIFY FO AS DOUBLY OCCUPIED, UNOCCUPIED OR UNKNOWN.
      IOCC(I)=1
      IF (SUM .GE. ONEP25) IOCC(I)=2
      IF (SUM .LE. PT75) IOCC(I)=0
  204 DD(I)=SUM
      IF (NBASIS .LE. 10) WRITE (IOUT,1070)
      IF (NBASIS .GT. 10) WRITE (IOUT,1100)
      CALL MATOUT(DD,NB,1,NBASIS,1)
C*
C     CALCULATE INTERACTION ENERGY MATRIX.
C*
C     RETRIEVE FOCK MATRIX.
      CALL TREAD (33,F,NB,NB,NBASIS,NBASIS,1)
C
      DO 450 I=1,NBASIS
      IFI=3*IOCC(I)+1
      LFRGI=LFRG(I)
      DO 450 J=1,I
      IF (LFRG(J) .EQ. LFRGI) GO TO 400
      IFJ=IFI+IOCC(J)
      GO TO (400,400,420,400,400,400,410,400,430), IFJ
C     SAME FRAGMENT, OR A FO UNIDENTIFIED - SET TO 0.0.
  400 TEMP=ZERO
      GO TO 440
C     FI DOUBLY OCCUPIED, FJ UNOCCUPIED.
  410 IF (DABS(FF(I)-FF(J)) .LE. CRIT) GO TO 400
      TEMP=F(I,J)-FF(I)*D(I,J)
      TEMP=TEMP*TEMP/(FF(I)-FF(J))
      GO TO 440
C     FJ DOUBLY OCCUPIED, FI UNOCCUPIED.
  420 IF (DABS(FF(I)-FF(J)) .LE. CRIT) GO TO 400
      TEMP=F(I,J)-FF(J)*D(I,J)
      TEMP=TEMP*TEMP/(FF(J)-FF(I))
      GO TO 440
C     FI AND FJ DOUBLY OCCUPIED.
  430 SIJ2=D(I,J)*D(I,J)
      IF (DABS(SIJ2-ONE) .LE. CRIT) GO TO 400
      TEMP=D(I,J)*F(I,J)
      TEMP=TEMP+TEMP
      TEMP=(-TEMP+(FF(I)+FF(J))*SIJ2)/(ONE-SIJ2)
  440 TEMP=TEMP+TEMP
      V(I,J)=TEMP
  450 V(J,I)=TEMP
      WRITE (IOUT,1120)
      CALL MATOUT(V,NB,NB,NBASIS,NBASIS)
C
C     ENERGY PARTITIONING
C
      IF (IP(4) .EQ. 0) RETURN
C     FORM H+F AND SAVE IN V
      CALL TREAD (13,V,NB,NB,NBASIS,NBASIS,1)
      CALL TREAD (15,D,NB,NB,NBASIS,NBASIS,1)
      DO 205 J=1,NBASIS
      DO 205 I=J,NBASIS
      V(I,J)=V(I,J)+D(I,J)
  205 V(J,I)=V(I,J)
C
C     RETRIEVE COEFFICIENTS
      CALL TREAD (4,F,NB,NB,NBASIS,NBASIS,0)
C
      DO 206 IPP=1,NBASIS
      DO 206 IQ=1,IPP
      TEMP=ZERO
      DO 207 I=1,NBASIS
      DO 208 J=1,I
      FIM=(F(I,IPP)*F(J,IQ)+F(I,IQ)*F(J,IPP))*V(J,I)
  208 TEMP=TEMP+FIM+FIM
  207 TEMP=TEMP-FIM
      IF (IPP .EQ. IQ) TEMP=TEMP*PT5
      D(IPP,IQ)=TEMP
  206 D(IQ,IPP)=TEMP
C
      IF (IP(3) .EQ. 0) GO TO 211
      WRITE (IOUT,1080)
      CALL MATOUT(D,NB,NB,NBASIS,NBASIS)
C
C     RETRIEVE Y (OMEGA) FROM DISK
C
  211 CALL TREAD (32,Y,NB,NB,NBASIS,NBASIS,1)
      DO 209 IQ=1,NBASIS
      DO 209 IPP=IQ,NBASIS
      D(IPP,IQ)=Y(IPP,IQ)*D(IPP,IQ)
  209 D(IQ,IPP)=D(IPP,IQ)
C
      WRITE (IOUT,1090)
      CALL MATOUT(D,NB,NB,NBASIS,NBASIS)
C
      RETURN
C     ERROR IN FO SPECIFICATION.
  310 WRITE (IOUT,1110)
      IOP(1)=-2
      RETURN
      END
      SUBROUTINE PARTS
C*
C     --------------
C     U OF T VERSION
C     FEBRUARY 1987
C     --------------
C*
C=PMO
C ANALYSIS BASED ON SEPARATE MOLECULES.
C *************************************
C
C1FSEP
C     PROGRAM ADDITION TO MONSTERGAUSS TO PERMIT FRAGMENT AND
C     PERTURBATION ANALYSES OF RHF-SCF MO CALCULATIONS
C     BASED UPON THE SEPARATE CONSTITUENT MOLECULES
C*
C     FRAGMENT ANALYSIS BASED UPON SEPARATE MOLECULES (IP(5)=0)
C     REFERS TO A SITUATION WHERE A MOLECULAR COMPLEX IS DISSECTED
C     INTO THE COMPONENT MOLECULES, E.G.,
C                         H3BCO ---> BH3 + CO
C*
C1
C PERTURBATIONAL ANALYSIS.
C ************************
C
C1PERT
C     PERTURBATION ANALYSIS BASED UPON SEPARATE MOLECULES (IP(5)=1)
C     REFERS TO A MOLECULAR SYSTEM UNDERGOING A GEOMETRY CHANGE
C     E.G.,             NH3(PLANAR) ---> NH3(PYRAMIDAL)
C*
C1FSEP
C1PERT
C     AUTHORS  M.-H. WHANGBO, H.B. SCHLEGEL AND D.J. MITCHELL
C              QUEEN'S UNIVERSITY, KINGSTON, ONTARIO, CANADA
C     EXTENSIVELY MODIFIED BY M.R. PETERSON, UNIVERSITY OF TORONTO,
C     TORONTO, ONTARIO, CANADA
C*
C==
C1
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA, NB=#NB)
C##
      PARAMETER (NA= 36, NB=200)
C###
      COMMON /A/ IOP(99)
      COMMON /A/ NATOMS,ICHARG,MULTIP,IAN(NA),NAE,NBE,NE,NBASIS
      COMMON /A/ CD1(NA,3),CD2(4),ICD(401)
C
      COMMON/C602A/FF(NB),F(NB,NB)
      COMMON/C602B/DD(NB),D(NB,NB)
      COMMON/C602C/IP(6),LFRG(NB),V(NB,NB)
C
      COMMON/IO/IN,IOUT,IODUM(215)
      COMMON/NFRAG/IFRG1,IFRG2,IFRG3,NAE1,NAE2,NAE3
C
 1000 FORMAT ('0DATA INPUT FOR FRAGMENT',I2)
 1010 FORMAT('0ERROR - THERE ARE',I4,' BASIS FUNCTIONS ON THE FRAGMENTS'
     1 ,' (OR UNPERTURBED MOLECULE)'/' BUT',I4,' ON THE COMPOSITE (OR ',
     2 'PERTURBED MOLECULE)')
 1020 FORMAT ('0',I5,' IS AN ILLEGAL FRAGMENT NUMBER')
 1030 FORMAT (/'0FRAGMENT ANALYSIS BASED ON SEPARATE MOLECULES')
 1040 FORMAT (/'0PERTURBATION ANALYSIS')
 1050 FORMAT ('0ERROR - THERE ARE',I4,' OCCUPIED MO ON THE FRAGMENTS'
     1 ,' (OR UNPERTURBED MOLECULE)'/' BUT',I4,' ON THE COMPOSITE (OR ',
     2 'PERTURBED MOLECULE)')
C
      IP5=IP(5)
      NFG=IP(1)
      IF (IP5.EQ.0 .AND. NFG.EQ.0) GO TO 2
      IF (IP5.EQ.1 .AND. NFG.EQ.2) GO TO 2
C
      IF (IOP(10) .EQ. 0) GO TO 300
      CALL TREAD (25,F,NB,NB,NBASIS,NBASIS,0)
      CALL TREAD (5,FF,NB,1,NBASIS,1,0)
  300 WRITE (IOUT,1000) NFG
C
      IF (NFG .EQ. 1) GO TO 64
      IF (IP5 .NE. 0) GO TO 1
      IF (NFG .EQ. 2) GO TO 60
      IF (NFG .EQ. 3) GO TO 59
C     TOO MANY FRAGMENTS
    1 WRITE (IOUT,1020) NFG
      IOP(1)=-2
      RETURN
C
C     SAVE COEFFICIENT MATRIX FOR FRAGMENT 1 OR UNPERTURBED MOLECULE
C
   64 IF (IOP(10) .EQ. 0) GO TO 310
      CALL TWRITE (27,F,NB,NB,NBASIS,NBASIS,0)
      CALL TWRITE (21,FF,NB,1,NBASIS,1,0)
  310 IFRG1=NBASIS
      NAE1=NAE
      IFRG2=0
      NAE2=0
      IFRG3=0
      NAE3=0
      IF (IP5.EQ.0 .OR. IOP(10).EQ.0) RETURN
C     SAVE OVERLAP MATRIX FOR UNPERTURBED MOLECULE
      CALL TREAD (8,F,NB,NB,NBASIS,NBASIS,1)
      CALL TWRITE (17,F,NB,NB,NBASIS,NBASIS,1)
      RETURN
C
C     SAVE COEFFICIENTS FOR FRAGMENT 2
C
   60 IFRG2=NBASIS
      NAE2=NAE
      ISUM=IFRG1
      GO TO 100
C
C     SAVE COEFFICIENTS FOR FRAGMENT 3
C
   59 IFRG3=NBASIS
      NAE3=NAE
      ISUM=IFRG1+IFRG2
C
C     SAVE COEFFICIENT MATRIX
C
  100 IF (IOP(10) .EQ. 0) RETURN
      CALL TREAD (27,V,NB,NB,ISUM,ISUM,0)
      CALL TREAD (21,DD,NB,1,ISUM,1,0)
C
      DO 110 J=1,NBASIS
      JD=ISUM+J
      DD(JD)=FF(J)
      DO 110 I=1,NBASIS
      ID=ISUM+I
  110 V(ID,JD)=F(I,J)
C
      ISUM=ISUM+NBASIS
      CALL TWRITE (27,V,NB,NB,ISUM,ISUM,0)
      CALL TWRITE (21,DD,NB,1,ISUM,1,0)
      RETURN
C
C     PERFORM ANALYSIS.
C
    2 IF (IP5 .EQ. 0) WRITE (IOUT,1030)
      IF (IP5 .EQ. 1) WRITE (IOUT,1040)
      IF (IOP(10) .EQ. 0) GO TO 320
      CALL TREAD (27,F,NB,NB,NBASIS,NBASIS,0)
      CALL TREAD (21,FF,NB,1,NBASIS,1,0)
  320 JD=IFRG1
      IF (IP5 .EQ. 1) GO TO 120
C
      DO 61 I=1,IFRG1
   61 LFRG(I)=1
C
      DO 62 J=1,IFRG2
      JD=JD+1
   62 LFRG(JD)=2
C
      IF (IP(3) .EQ. 0) GO TO 58
      DO 57 J=1,IFRG3
      JD=JD+1
   57 LFRG(JD)=3
C
   58 IF (IOP(10) .NE. 0) CALL TRUNCA(LFRG,F,NBASIS,0,J)
      GO TO 67
C
C     PERTURBATION CALCULATION - TREAT EACH MO AS A SEPARATE FRAGMENT.
C
  120 DO 130 I=1,NBASIS
  130 LFRG(I)=I
C
C     CHECK THAT THE TOTAL NUMBER OF FRAGMENT BASIS FUNCTIONS IS NBASIS.
C
   67 IF (JD .NE. NBASIS) THEN
         WRITE (IOUT,1010) JD,NBASIS
         IOP(1)=-2
         RETURN
      END IF
C
C     CHECK THAT THE TOTAL NUMBER OF OCCUPIED ORBITALS IS NAE.
C
      I = NAE1 + NAE2 + NAE3
      IF (I  .NE.  NAE) THEN
         WRITE (IOUT,1050) I, NAE
         IOP(1)=-2
         RETURN
      END IF
C
      IF (IOP(10) .NE. 0) CALL FSEP
      RETURN
      END
      SUBROUTINE PARTSE
C*
C     --------------
C     U OF T VERSION
C     JANUARY 1987
C     --------------
C*
C=PMO
C ANALYSIS BASED ON 'STANDARD' FRAGMENTS.
C ***************************************
C
C1FSTD
C     PROGRAM ADDITION TO MONSTERGAUSS TO PERMIT FRAGMENT ORBITAL
C     ANALYSIS OF A COMPOSITE MOLECULE A-B IN TERMS OF FRAGMENTS
C     OBTAINED BY FOCK MATRIX PARTITIONING OF A-H AND B-H, WHICH
C     ARE USED AS MODELS OF 'STANDARD' FRAGMENTS 'A' AND 'B'.
C*
C     INPUT CONSISTS OF LFAB(I) (I=1,ISUM) (36I2) WHERE ISUM IS THE
C     TOTAL NUMBER OF BASIS FUNCTIONS FOR A-H AND B-H
C     THIS SPECIFIES HOW THE BASIS ORBITALS ARE TO BE DIVIDED INTO THE
C     REQUIRED FRAGMENTS, USING A 1 FOR FRAGMENT 1, 2 FOR FRAGMENT 2,
C     AND A 0 TO INDICATE ORBITALS (I.E. THE H ORBITALS FROM A-H AND
C     B-H) TO BE DROPPED, E.G.,
C     FOR CH3-OH CONSTRUCTED FROM CH3-H AND HO-H, USING AN STO-NG BASIS
C     SET AND THE ATOMS DEFINED IN THE ORDER C H H H H H O H
C                           123456789012345678901234567890123456...
C     CARD INPUT WOULD BE    1 1 1 1 1 1 1 1 0 2 2 2 2 2 2 0
C*
C     AUTHORS  M.-H. WHANGBO, H.B. SCHLEGEL AND D.J. MITCHELL
C              QUEEN'S UNIVERSITY, KINGSTON, ONTARIO, CANADA
C     EXTENSIVELY MODIFIED BY M.R. PETERSON, UNIVERSITY OF TORONTO,
C     TORONTO, ONTARIO, CANADA
C==
C*
C/
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA, NB=#NB)
C##
      PARAMETER (NA= 36, NB=200)
C###
      COMMON /A/ IOP(99)
      COMMON /A/ NATOMS,ICHARG,MULTIP,IAN(NA),NAE,NBE,NE,NBASIS
      COMMON /A/ CD1(NA,3),CD2(4),ICD(401)
C
      COMMON/C602A/FF(NB),F(NB,NB)
      COMMON/C602B/DD(NB),D(NB,NB)
      COMMON/C602C/IP(6),LFRG(NB),V(NB,NB)
C
      COMMON/IO/IN,IOUT,IODUM(215)
      COMMON/NFRAG/IFRG1,IFRG2,IFRG3,NAEFRG(3)
C
      DIMENSION LFAB(NB)
C
      EQUIVALENCE (LFAB(1),FF(1))
C
 1000 FORMAT ('0',I5,' IS AN ILLEGAL FRAGMENT NUMBER')
 1010 FORMAT ('0DATA INPUT FOR FRAGMENT A-H')
 1020 FORMAT ('0DATA INPUT FOR FRAGMENT B-H')
 1030 FORMAT (/'0FRAGMENT SPECIFICATION IN TERMS OF A-B'//(1X,30I3))
 1040 FORMAT('0ERROR - THERE ARE',I4,' BASIS FUNCTIONS ON A- AND B- BUT'
     1 ,I4,' ON A-B')
 1050 FORMAT (/'0FRAGMENTS FROM SEPARATE MOLECULES A-H AND B-H'//
     1 '0FRAGMENT SPECIFICATION IN TERMS OF A-H AND B-H'//(1X,30I3))
 1060 FORMAT (36I2)
C*
      NFG=IP(1)
      IF (NFG .EQ. 0) GO TO 2
      IF (NFG .EQ. 1) GO TO 100
      IF (NFG .EQ. 2) GO TO 110
C     TOO MANY FRAGMENTS
      WRITE (IOUT,1000) NFG
      IOP(1)=-2
      RETURN
C
C     FRAGMENT A-H ... SAVE S AND F MATRICES
  100 WRITE (IOUT,1010)
      IFRG1=NBASIS
      IFRG2=0
      IFRG3=0
      IF (IOP(10) .EQ. 0) RETURN
      CALL TREAD (8,F,NB,NB,NBASIS,NBASIS,1)
      CALL TWRITE (17,F,NB,NB,NBASIS,NBASIS,1)
      CALL TREAD (15,F,NB,NB,NBASIS,NBASIS,1)
      CALL TWRITE (21,F,NB,NB,NBASIS,NBASIS,1)
      RETURN
C
C     FRAGMENT B-H ... ADD OVERLAP TO THAT FOR A-H FRAGMENT
  110 WRITE (IOUT,1020)
      IFRG2=NBASIS
      IF (IOP(10) .EQ. 0) RETURN
      ISUM=IFRG1+NBASIS
      NFA=17
      NFB=8
C
  120 CALL TREAD (NFB,V,NB,NB,NBASIS,NBASIS,1)
      CALL TREAD (NFA,F,NB,NB,IFRG1,IFRG1,1)
      DO 130 J=1,NBASIS
      JD=IFRG1+J
      DO 130 I=1,J
      ID=IFRG1+I
      T=V(I,J)
      F(ID,JD)=T
  130 F(JD,ID)=T
      CALL TWRITE (NFA,F,NB,NB,ISUM,ISUM,1)
C
      IF (NFB .EQ. 15) RETURN
C     REPEAT FOR FOCK MATRIX
      NFA=21
      NFB=15
      GO TO 120
C
    2 ISUM=IFRG1+IFRG2
      READ (IN,1060) (LFAB(I),I=1,ISUM)
      WRITE (IOUT,1050) (LFAB(I),I=1,ISUM)
      IF (IOP(10) .EQ. 0) GO TO 140
C     RETRIEVE OVERLAP AND FOCK MATRICES FOR A-H AND B-H
      CALL TREAD (17,V,NB,NB,ISUM,ISUM,1)
      CALL TREAD (21,F,NB,NB,ISUM,ISUM,1)
C
C     ELIMINATE ORBITALS WITH LFAB = 0
C
  140 JD=0
      DO 210 J=1,ISUM
      IF (LFAB(J) .EQ. 0) GO TO 210
      JD=JD+1
      LFRG(JD)=LFAB(J)
      IF (IOP(10) .EQ. 0) GO TO 210
      ID=0
      DO 200 I=1,ISUM
      IF (LFAB(I) .EQ. 0) GO TO 200
      ID=ID+1
      V(ID,JD)=V(I,J)
      F(ID,JD)=F(I,J)
  200 CONTINUE
  210 CONTINUE
C
      WRITE (IOUT,1030) (LFRG(I),I=1,NBASIS)
      IF (JD .NE. NBASIS) GO TO 300
C
      CALL FSTD
      RETURN
C
C     NUMBER OF BASIS FUNCTIONS ON A- AND B- NOT SAME AS ON A-B
C
  300 WRITE (IOUT,1040) JD,NBASIS
      IOP(1)=-2
      RETURN
      END
      SUBROUTINE TRUNCA(LFRG,V,NBASIS,KEY,NFO)
C*
C     --------------
C     U OF T VERSION
C     JANUARY 1987
C     --------------
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NB=#NB)
C##
      PARAMETER (NB=200)
C###
      DIMENSION LFRG(NB),V(NB,NB)
C
      DATA ZERO/0.0D0/
C
C     IF KEY IS ZERO, BLOCK OFF MATRIX V.
      IF (KEY .NE. 0) GO TO 10
      DO 1 I=1,NBASIS
      DO 1 J=I,NBASIS
      IF (LFRG(I) .EQ. LFRG(J)) GO TO 1
      V(I,J)=ZERO
      V(J,I)=ZERO
    1 CONTINUE
      RETURN
C     IF KEY IS NON-ZERO, COLLECT ONLY THE V MATRIX ELEMENTS
C     CORRESPONDING TO LFRG(I)=KEY.
C     NFO RETURNS THE NUMBER OF ORBITALS IN V WITH LFRG(I)=KEY.
   10 NFO=0
      DO 30 J=1,NBASIS
      IF (LFRG(J) .NE. KEY) GO TO 30
      NFO=NFO+1
      IP=0
      DO 20 I=1,NBASIS
      IF (LFRG(I) .NE. KEY) GO TO 20
      IP=IP+1
      V(IP,NFO)=V(I,J)
   20 CONTINUE
   30 CONTINUE
      RETURN
      END
      SUBROUTINE FRGTRS(NBASIS)
C*
C     --------------
C     U OF T VERSION
C     JANUARY 1987
C     --------------
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NB=#NB)
C##
      PARAMETER (NB=200)
C###
      PARAMETER (ONE=1.0D0)
C
      COMMON/C602A/FF(NB),F(NB,NB)
      COMMON/C602B/DD(NB),D(NB,NB)
      COMMON/C602C/IP(6),LFRG(NB),V(NB,NB)
C
      CALL TRED12(NBASIS,NB,V,D,DD,FF,2)
      DO 1 J=1,NBASIS
      FACT=ONE/DSQRT(DD(J))
      DO 2 I=1,NBASIS
    2 V(J,I)=D(I,J)*FACT
    1 CONTINUE
      RETURN
      END
      SUBROUTINE TRANSF
C*
C     --------------
C     U OF T VERSION
C     JANUARY 1987
C     --------------
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA, NB=#NB)
C##
      PARAMETER (NA= 36, NB=200)
C###
      PARAMETER (ZERO=0.0D0, ONE=1.0D0)
C
      COMMON /A/ IOP(99)
      COMMON /A/ NATOMS,ICHARG,MULTIP,IAN(NA),NAE,NBE,NE,NBASIS
      COMMON /A/ CD1(NA,3),CD2(4),ICD(401)
C
      COMMON/C602A/FF(NB),F(NB,NB)
      COMMON/C602B/DD(NB),D(NB,NB)
      COMMON/C602C/IP(6),LFRG(NB),V(NB,NB)
C
      COMMON/IO/IN,IOUT,IODUM(215)
C
 1000 FORMAT ('0ERROR RETURN (K=4). MAXF EVALUATIONS OF SUMSQ ',
     1'HAVE BEEN MADE AND THE REQUIRED MINIMUM NOT YET FOUND')
 1010 FORMAT ('0ERROR RETURN (K=3). ROUNDING ERRORS HAVE MADE ',
     1'IT IMPOSSIBLE TO ACHIEVE THE REQUIRED ACCURACY')
 1020 FORMAT ('0EXECUTION ALLOWED TO CONTINUE')
 1030 FORMAT ('1TRANSFORMED FRAGMENT ORBITALS'//)
 1050 FORMAT (3I4)
 1060 FORMAT('0TRANSFORM ORBITAL PAIR ',2I4,', MINIMIZING OVERLAP FOR ',
     1 'ORBITAL',I4/)
 1070 FORMAT ('0TRANSFORM ORBITAL PAIR ',2I4,', MINIMIZING OVERLAP OF ',
     1 'ORBITAL',I4,' WITH ORBITAL',I4/)
 1080 FORMAT ('0ILLEGAL VALUE OF M, N OR NORB IN TRANSF')
 1090 FORMAT ('1FRAGMENT ORBITAL TRANSFORMATION')
C*
      WRITE (IOUT,1090)
C
C     INITIALIZE ORTHOGONAL TRANSFORMATION MATRIX
C
      DO 10 J=1,NBASIS
      DO 5 I=1,J
      D(I,J)=ZERO
    5 D(J,I)=ZERO
   10 D(J,J)=ONE
      GO TO 30
C
C     UPDATE TRANSFORMATION MATRIX
C
   20 CALL TREAD (31,D,NB,NB,NBASIS,NBASIS,0)
      DO 25 I=1,NBASIS
      FM=D(I,M)
      FN=D(I,N)
      D(I,M)=FM*COST-FN*SINT
   25 D(I,N)=FM*SINT+FN*COST
C
   30 READ (IN,1050) M,N,NORB
      IF (M .EQ. 0) GO TO 120
      IF (NORB .EQ. 0) WRITE (IOUT,1060)M,N,M
      IF (NORB .NE. 0) WRITE (IOUT,1070)M,N,M,NORB
      IF (M.LT.0 .OR. M .GT. NBASIS) GO TO 200
      IF (N.LE.0 .OR. N.GT.NBASIS) GO TO 200
      IF (NORB.LT.0 .OR. NORB.GT.NBASIS) GO TO 200
      IF (IOP(10) .EQ. 0) GO TO 30
      K=2
      THETA=ZERO
C     SAVE CURRENT TRANSFORMATION AND COEFFICIENT MATRICES
      CALL TWRITE (31,D,NB,NB,NBASIS,NBASIS,0)
      CALL TWRITE (4,F,NB,NB,NBASIS,NBASIS,0)
C
C     FIND THETA FOR THIS PAIR OF M AND N
C
   40 CALL VD01A(K,THETA,SUMSQ,15)
      GO TO (50,20,80,80), K
   50 COST=DCOS(THETA)
      SINT=DSIN(THETA)
C
C     TRANSFORM COEFFICIENT MATRIX
C
      CALL TREAD (4,F,NB,NB,NBASIS,NBASIS,0)
      DO 60 I=1,NBASIS
      FM=F(I,M)
      FN=F(I,N)
      F(I,M)=FM*COST-FN*SINT
   60 F(I,N)=FM*SINT+FN*COST
C
C     DO SIMILARITY TRANSFORMATION OF OVERLAP MATRIX
C     AND CALCULATE SUMSQ
C
      CALL TREAD (8,V,NB,NB,NBASIS,NBASIS,1)
      CALL MATPAC(F,V,D,NBASIS,2)
      CALL MATPAC(D,F,V,NBASIS,1)
      IF (NORB .EQ. 0) GO TO 65
      SUMSQ=V(NORB,M)**2
      GO TO 40
   65 SUMSQ=ZERO
      DO 70 I=1,NBASIS
   70 IF (I .NE. M) SUMSQ=SUMSQ+V(I,M)**2
      GO TO 40
C
   80 IF (K .EQ. 3) WRITE (IOUT,1010)
      IF (K .EQ. 4) WRITE (IOUT,1000)
      WRITE (IOUT,1020)
      GO TO 20
C
C     EXIT FROM TRANSFORMATION ITERATIONS ---
C     GO ON TO CALCULATE FO ENERGIES AND DO PRINTING
C
  120 IF (IOP(10) .EQ. 0) RETURN
      DO 140 J=1,NBASIS
      SUMSQ=ZERO
      DO 130 I=1,NBASIS
  130 SUMSQ=SUMSQ+FF(I)*D(I,J)**2
  140 DD(J)=SUMSQ
      DO 150 J=1,NBASIS
  150 FF(J)=DD(J)
      WRITE (IOUT,1030)
      CALL GBSOUT(F,FF,NB,NB,NBASIS,1)
      RETURN
C
C     TRANSFORMATION SPECIFICATION ERROR.
C
  200 WRITE (IOUT,1080)
      IOP(1)=-2
      RETURN
      END
      SUBROUTINE VD01A(ITEST,X,F,MAXFUN)
C*
C     --------------
C     U OF T VERSION
C     DECEMBER 1988
C     --------------
C*
C     BY ITERATION, FINDS THE VALUE OF THETA WHICH MINIMIZES
C     SUMSQ (SUM OF SQUARES OF THE OVERLAP INTEGRALS BETWEEN
C     FRAGMENT ORBITAL M AND THE ORBITALS OF THE OTHER FRAGMENT).
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C*
      COMMON/IO/IN,IOUT,IODUM(215)
C
      SAVE
C*
      DATA PT5/0.5D0/,ABSACC/0.0003D0/,RELACC/0.0001D0/,XSTEP/0.2618D0/
C*
 1000 FORMAT (' THETA=',F10.5,'   SUMSQ=',F10.7,'   ITER=',I3)
C*
      IF (ITEST .EQ. 1) GO TO 1
      IS=6-ITEST
      ITEST=1
      IINC=1
      XINC=XSTEP+XSTEP
      MC=IS-3
      IF (MC) 4,4,15
    3 MC=MC+1
      IF (MAXFUN-MC) 12,15,15
   12 ITEST=4
   43 X=DB
      F=FB
      IF (FB-FC) 15,15,44
   44 X=DC
      F=FC
   15 RETURN
C*
    1 WRITE (IOUT,1000) X,F,MC
      GO TO (5,6,7,8), IS
    8 IS=3
    4 DC=X
      FC=F
      X=X+XSTEP
      GO TO 3
    7 IF (FC-F) 9,10,11
   10 X=X+XINC
      XINC=XINC+XINC
      GO TO 3
    9 DB=X
      FB=F
      XINC=-XINC
      GO TO 13
   11 DB=DC
      FB=FC
      DC=X
      FC=F
   13 X=DC+DC-DB
      IS=2
      GO TO 3
    6 DA=DB
      DB=DC
      FA=FB
      FB=FC
   32 DC=X
      FC=F
      GO TO 14
    5 IF (FB-FC) 16,17,17
   17 IF (F-FB) 18,32,32
   18 FA=FB
      DA=DB
   19 FB=F
      DB=X
      GO TO 14
   16 IF (FA-FC) 21,21,20
   20 XINC=FA
      FA=FC
      FC=XINC
      XINC=DA
      DA=DC
      DC=XINC
   21 XINC=DC
      IF ((W-DB)*(W-DC)) 32,22,22
   22 IF (F-FA) 23,24,24
   23 FC=FB
      DC=DB
      GO TO 19
   24 FA=F
      DA=X
   14 IF (FB-FC) 25,25,29
   25 IINC=2
      XINC=DC
      IF (FB-FC) 29,45,29
   29 W=(FA-FB)/(DA-DB)-(FA-FC)/(DA-DC)
      IF (W*(DB-DC))33,33,37
   37 W=PT5*(DB+DC-(FB-FC)/W)
      IF (DABS(W-X)-DABS(ABSACC)) 34,34,35
   35 IF (DABS(W-X)-DABS(W*RELACC)) 34,34,36
   34 ITEST=2
      GO TO 43
   36 IS=1
      X=W
      IF ((DA-DC)*(DC-W)) 3,26,38
   38 IS=2
      GO TO (39,40), IINC
   39 IF (DABS(XINC)-DABS(DC-W)) 41,3,3
   33 IS=2
      GO TO (41,42), IINC
   41 X=DC
      GO TO 10
   40 IF (DABS(XINC-X)-DABS(X-DC)) 42,42,3
   42 X=PT5*(XINC+DC)
      IF ((XINC-X)*(X-DC)) 26,26,3
   45 X=PT5*(DB+DC)
      IF ((DB-X)*(X-DC)) 26,26,3
   26 ITEST=3
      GO TO 43
      END
