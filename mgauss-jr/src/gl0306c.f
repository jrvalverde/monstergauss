C/    GL0306C      28 NOV 88                                         MRP
      SUBROUTINE R30001
C*
C     --------------
C     QCPE VERSION
C     DECEMBER 1971
C     --------------
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C*
      COMMON/GEOM/AX,AY,AZ,BX,BY,BZ,CX,CY,CZ,DX,DY,DZ,RAB,RABSQ,RCD,
     1 RCDSQ,P11,P12,P13,P21,P22,P23,P31,P32,P33,Q11,Q12,Q13,
     2 Q21,Q22,Q23,Q31,Q32,Q33,GDUM(834)
      COMMON/GOUT/X1,X2,X3,X4,X(252)
C*
      T1=X2
      T2=X3
      T3=X4
      X2=P11*T1+P21*T2+P31*T3
      X3=P12*T1+P22*T2+P32*T3
      X4=P13*T1+P23*T2+P33*T3
      RETURN
      END
      SUBROUTINE R30011
C*
C     --------------
C     QCPE VERSION
C     DECEMBER 1971
C     --------------
C*
C     ROTATES UP TO 256 INTEGRALS TO SPACE FIXED AXES
C     INCOMING AND OUTGOING INTEGRALS IN COMMON GOUT
C     INDICES IN ORDER 0000,0001,0002,...0010,0011,...0100,0101,...ETC.
C     P11,...ARE DIRECTION COSINES OF SPACE FIXED AXES WRT AXES AT P
C     Q11,...ARE DIRECTION COSINES OF SPACE FIXED AXES WRT AXES AT Q
C     APPLIES TO CASE 0011
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C*
      COMMON/GEOM/AX,AY,AZ,BX,BY,BZ,CX,CY,CZ,DX,DY,DZ,RAB,RABSQ,RCD,
     1 RCDSQ,P11,P12,P13,P21,P22,P23,P31,P32,P33,Q11,Q12,Q13,
     2 Q21,Q22,Q23,Q31,Q32,Q33,GDUM(834)
      COMMON/GOUT/X(256)
C*
      IND=0
      DO 3 L=1,4
      IND=IND+1
      I1=4+IND
      I2=8+IND
      I3=12+IND
      T1=X(I1)
      T2=X(I2)
      T3=X(I3)
      X(I1     )=P11*T1+P21*T2+P31*T3
      X(I2     )=P12*T1+P22*T2+P32*T3
      X(I3     )=P13*T1+P23*T2+P33*T3
    3 CONTINUE
      IND=-3
      DO 4 K=1,4
      IND=IND+4
      I1=1+IND
      I2=2+IND
      I3=3+IND
      T1=X(I1)
      T2=X(I2)
      T3=X(I3)
      X(I3     )=P13*T1+P23*T2+P33*T3
      X(I1     )=P11*T1+P21*T2+P31*T3
      X(I2     )=P12*T1+P22*T2+P32*T3
    4 CONTINUE
      RETURN
      END
      SUBROUTINE R30101
C*
C     --------------
C     QCPE VERSION
C     DECEMBER 1971
C     --------------
C*
C     ROTATES UP TO 256 INTEGRALS TO SPACE FIXED AXES
C     INCOMING AND OUTGOING INTEGRALS IN COMMON GOUT
C     INDICES IN ORDER 0000,0001,0002,...0010,0011,...0100,0101,...ETC.
C     P11,...ARE DIRECTION COSINES OF SPACE FIXED AXES WRT AXES AT P
C     Q11,...ARE DIRECTION COSINES OF SPACE FIXED AXES WRT AXES AT Q
C     APPLIES TO CASE 0101
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C*
      COMMON/GEOM/AX,AY,AZ,BX,BY,BZ,CX,CY,CZ,DX,DY,DZ,RAB,RABSQ,RCD,
     1 RCDSQ,P11,P12,P13,P21,P22,P23,P31,P32,P33,Q11,Q12,Q13,
     2 Q21,Q22,Q23,Q31,Q32,Q33,GDUM(834)
      COMMON/GOUT/X(256)
C*
      IND=0
      DO 2 L=1,4
      DO 2 K=1,4
      IND=IND+1
      I1=16+IND
      I2=32+IND
      I3=48+IND
      T1=X(I1)
      T2=X(I2)
      T3=X(I3)
      X(I1     )=P11*T1+P21*T2+P31*T3
      X(I2     )=P12*T1+P22*T2+P32*T3
      X(I3     )=P13*T1+P23*T2+P33*T3
    2 CONTINUE
      IND=-15
      DO 4 J=1,4
      IND=IND+16
      I1=1+IND
      I2=2+IND
      I3=3+IND
      T1=X(I1)
      T2=X(I2)
      T3=X(I3)
      X(I1     )=P11*T1+P21*T2+P31*T3
      X(I2     )=P12*T1+P22*T2+P32*T3
      X(I3     )=P13*T1+P23*T2+P33*T3
    4 CONTINUE
      RETURN
      END
      SUBROUTINE R30111
C*
C     --------------
C     QCPE VERSION
C     DECEMBER 1971
C     --------------
C*
C     ROTATES UP TO 256 INTEGRALS TO SPACE FIXED AXES
C     INCOMING AND OUTGOING INTEGRALS IN COMMON GOUT
C     INDICES IN ORDER 0000,0001,0002,...0010,0011,...0100,0101,...ETC.
C     P11,...ARE DIRECTION COSINES OF SPACE FIXED AXES WRT AXES AT P
C     Q11,...ARE DIRECTION COSINES OF SPACE FIXED AXES WRT AXES AT Q
C     APPLIES TO CASE 0111
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C*
      COMMON/GEOM/AX,AY,AZ,BX,BY,BZ,CX,CY,CZ,DX,DY,DZ,RAB,RABSQ,RCD,
     1 RCDSQ,P11,P12,P13,P21,P22,P23,P31,P32,P33,Q11,Q12,Q13,
     2 Q21,Q22,Q23,Q31,Q32,Q33,GDUM(834)
      COMMON/GOUT/X(256)
C*
      IND=0
      DO 2 K=1,4
      DO 2 L=1,4
      IND=IND+1
      I1=16+IND
      I2=32+IND
      I3=48+IND
      T1=X(I1)
      T2=X(I2)
      T3=X(I3)
      X(I1     )=P11*T1+P21*T2+P31*T3
      X(I2     )=P12*T1+P22*T2+P32*T3
      X(I3     )=P13*T1+P23*T2+P33*T3
    2 CONTINUE
      IND=-12
      DO 3 J=1,4
      IND=IND+12
      DO 3 L=1,4
      IND=IND+1
      I1=4+IND
      I2=8+IND
      I3=12+IND
      T1=X(I1)
      T2=X(I2)
      T3=X(I3)
      X(I1     )=P11*T1+P21*T2+P31*T3
      X(I2     )=P12*T1+P22*T2+P32*T3
      X(I3     )=P13*T1+P23*T2+P33*T3
    3 CONTINUE
      IND=-3
      DO 4 J=1,4
      DO 4 K=1,4
      IND=IND+4
      I1=1+IND
      I2=2+IND
      I3=3+IND
      T1=X(I1)
      T2=X(I2)
      T3=X(I3)
      X(I1     )=P11*T1+P21*T2+P31*T3
      X(I2     )=P12*T1+P22*T2+P32*T3
      X(I3     )=P13*T1+P23*T2+P33*T3
    4 CONTINUE
      RETURN
      END
      SUBROUTINE R31111
C*
C     --------------
C     QCPE VERSION
C     DECEMBER 1971
C     --------------
C*
C     ROTATES UP TO 256 INTEGRALS TO SPACE FIXED AXES
C     INCOMING AND OUTGOING INTEGRALS IN COMMON GOUT
C     INDICES IN ORDER 0000,0001,0002,...0010,0011,...0100,0101,...ETC.
C     P11,...ARE DIRECTION COSINES OF SPACE FIXED AXES WRT AXES AT P
C     Q11,...ARE DIRECTION COSINES OF SPACE FIXED AXES WRT AXES AT Q
C     APPLIES TO CASE 1111
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C*
      COMMON/GEOM/AX,AY,AZ,BX,BY,BZ,CX,CY,CZ,DX,DY,DZ,RAB,RABSQ,RCD,
     1 RCDSQ,P11,P12,P13,P21,P22,P23,P31,P32,P33,Q11,Q12,Q13,
     2 Q21,Q22,Q23,Q31,Q32,Q33,GDUM(834)
      COMMON/GOUT/X(256)
C*
      I1=64
      I2=128
      I3=192
      DO 1 J=1,4
      DO 1 K=1,4
      DO 1 L=1,4
      I1=I1+1
      I2=I2+1
      I3=I3+1
      T1=X(I1)
      T2=X(I2)
      T3=X(I3)
      X(I1     )=P11*T1+P21*T2+P31*T3
      X(I2     )=P12*T1+P22*T2+P32*T3
      X(I3     )=P13*T1+P23*T2+P33*T3
    1 CONTINUE
      IND=-48
      DO 2 I=1,4
      IND=IND+48
      DO 2 K=1,4
      DO 2 L=1,4
      IND=IND+1
      I1=16+IND
      I2=32+IND
      I3=48+IND
      T1=X(I1)
      T2=X(I2)
      T3=X(I3)
      X(I1     )=P11*T1+P21*T2+P31*T3
      X(I2     )=P12*T1+P22*T2+P32*T3
      X(I3     )=P13*T1+P23*T2+P33*T3
    2 CONTINUE
      IND=-12
      DO 3 I=1,4
      DO 3 J=1,4
      IND=IND+12
      DO 3 L=1,4
      IND=IND+1
      I1=4+IND
      I2=8+IND
      I3=12+IND
      T1=X(I1)
      T2=X(I2)
      T3=X(I3)
      X(I1     )=P11*T1+P21*T2+P31*T3
      X(I2     )=P12*T1+P22*T2+P32*T3
      X(I3     )=P13*T1+P23*T2+P33*T3
    3 CONTINUE
      IND=-3
      DO 4 I=1,4
      DO 4 J=1,4
      DO 4 K=1,4
      IND=IND+4
      I1=1+IND
      I2=2+IND
      I3=3+IND
      T1=X(I1)
      T2=X(I2)
      T3=X(I3)
      X(I1     )=P11*T1+P21*T2+P31*T3
      X(I2     )=P12*T1+P22*T2+P32*T3
      X(I3     )=P13*T1+P23*T2+P33*T3
    4 CONTINUE
      RETURN
      END
      SUBROUTINE SHLOUT(LIMIT,GOUT,IGOUT)
C*
C     --------------
C     U OF T VERSION
C     NOVEMBER 1988
C     --------------
C*
C     TWO ELECTRON INTEGRAL OUTPUT ROUTINE
C     THE TWO ELECTRON INTEGRALS ARE WRITTEN ON UNIT ITWOEL IN BLOCKS
C     OF 3072 WORDS.
C     THE INTEGRAL LABELS ARE WRITTEN SUCH THAT AN OFFSET MUST
C     BE ADDED TO EACH LABEL, DEPENDING ON THE ATOM NUMBER THE
C     ATOMIC ORBITAL CAME FROM. THE INTEGRAL FILE CONTAINS INDICATORS
C     WHEN THE OFFSETS MUST BE CHANGED - THE PACKED LABEL IS 0,
C     WITH THE NEW OFFSETS PACKED INTO THE INTEGRAL POSITION.
C     THESE OFFSETS ARE ONLY USED WHEN THERE ARE MORE THAN 127
C     BASIS FUNCTIONS, AND ARE NEVER USED WITH THE CDC VERSION.
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA, NB=#NB)
C     PARAMETER (NS=#NS, NP=#NP)
C##
      PARAMETER (NA= 36, NB=200)
      PARAMETER (NS=120, NP=300)
C###
      PARAMETER (NA3=3*NA, NZ=NA3-6)
C
      INTEGER SHELLA,SHELLN,SHELLT,AOS,SHELLC,SINDX
C
      LOGICAL NOOFF
C?GBR
C     CHARACTER TITLE*72, IELEM*4, NAMES*8
C     CHARACTER NSH*2, LAO*4, LABEL*4, LSHELL*2
C     CHARACTER LABSAV*4, LABSYM*4, BLABEL*200
C??
      COMMON /A/ IOP(99),IC1(NA),IC2(6),NBASIS,CD1(NA,3),CD2(4),IC3(401)
      COMMON/B/IXYZ(NS),SHELLA(NS),SHELLN(NS),SHELLT(NS),
     1 SHELLC(NS),AOS(NS),NSHELL,MAXTYP,EXX(NP),C1(NP),C2(NP)
      COMMON/BSINFO/NVO(NA),IAOFF(NA)
      COMMON/IO/IIN,IOUT,IPUNCH,IMAT,ITWOEL,IDUMIO(212)
      COMMON /SHLCOM/ INEW,JNEW,KNEW,LNEW,
     1 IEND,JEND,KEND,LEND
      COMMON/C300/IXP(4),JXP(4),KXP(4),LXP(4),XXP(4),IX(3072,2)
C?GBR DEFINE ALL GLOBAL COMMON BLOCKS HERE FOR BASE REGISTER VERSION.
C     COMMON /ZMAT/ IZ1(NA,4),Z1(NA,3),
C    1 IPAR(15,3),NIPAR(3),NPAR,NSTEP,DX(3),NUM,NUMB,
C    2 IZ2(NA,3),IZMASS(NA),ZMASS(NA)
C     COMMON /ZMATC/ TITLE,IELEM(NA),NAMES(NZ)
C     COMMON /BSINFC/ NSH(NB), LAO(NB), LABEL(NS), LSHELL(NS),
C    1 BLABEL
C     COMMON /GEN/ E(6),DCONV,SPIN(2),FIELD(3),FE,EMOL,ESOL,DPOLE(4),VCM
C     COMMON /PACKED/ INTLAB(5)
C     COMMON /NFRAG/ NFRAGS(6)
C     COMMON /OEPLAB/ LABSAV(90)
C     COMMON /CILAB/ LABSYM(8)
C     COMMON /GLDDATA/ MYID(12)
C??
      DIMENSION GOUT(IGOUT), INTOUT(2)
C
      EQUIVALENCE (MINDX,KN), (SINDX,LN), (OUT,INTOUT(1))
C
      SAVE CUTOFF, IOP18, ICOUNT, IQ, NTINTS, IATOLD, JATOLD,
     1 KATOLD, LATOLD, NOOFF, NBUFF, LBUFF
C
      DATA TEN/10.0D0/
C?IBM/GLD/GBR/VAX/UNX  LABEL/INTEGRAL OCCUPIES 3 WORDS.
      DATA NWORDS/3/
C??
C?CDC LABEL/INTEGRAL OCCUPIES 2 WORDS.
C     DATA NWORDS/2/, NOOFF/.TRUE./
C??
 1000 FORMAT(1X,4I4,1PD14.6,3(I8,3I4,D14.6))
 1010 FORMAT('1TWO ELECTRON INTEGRALS'/'0   I   J   K   L',4X,
     1 'INTEGRAL',3(9X,'I   J   K   L',4X,'INTEGRAL')/)
 1020 FORMAT(//1X,I10,' TWO ELECTRON INTEGRALS WRITTEN OUT ON UNIT',I3,
     1 ' WITH INTEGRAL CUTOFF',1PD13.5)
C*
      IF(LIMIT)10,350,50
C*
C     PRELIMINARY ENTRY
C*
   10 CUTOFF = TEN**(-(6+IOP(15)))
      IOP18=IOP(18)
      ICOUNT=1
      REWIND ITWOEL
      IQ=1
      IF(IOP18.NE.0) WRITE (IOUT,1010)
C     COUNT NUMBER OF TWO ELECTRON INTEGRALS WRITTEN TO UNIT ITWOEL
      NTINTS=0
C     SET ATOM INDICATORS TO ZERO.
      IATOLD=0
      JATOLD=0
      KATOLD=0
      LATOLD=0
C?GLD/GBR/IBM/VAX/UNX NO OFFSETS USED IN CDC VERSION.
      NOOFF = NBASIS .LE. 127
C??
C     SETUP FOR DOUBLE BUFFERING (ASYNCHRONOUS I/O).
C     NBUFF IS THE CURRENT BUFFER NUMBER (BEING FILLED WITH INTEGRALS).
C     LBUFF IS THE PREVIOUS BUFFER NUMBER (I/O IN PROGRESS).
C
      NBUFF = 1
      LBUFF = 0
      RETURN
C*
C     NORMAL ENTRY
C*
C     INTEGRALS IN ARRAY GOUT WAITING TO BE WRITTEN OUT
C     DETERMINE NUMBERS OF THE FIRST ATOMIC ORBITALS IN EACH OF THE FOUR
C     SHELLS.
C
   50 IP=AOS(INEW)-1
      JP=AOS(JNEW)-1
      KP=AOS(KNEW)-1
      LP=AOS(LNEW)-1
      NCOUNT=0
C
C     LOOP OVER SET OF INTEGRALS DEFINED BY SHELLS INEW ...
C
      DO 340 I=1,IEND
      DO 340 J=1,JEND
      DO 340 K=1,KEND
      DO 340 L=1,LEND
      NCOUNT=NCOUNT+1
C     DECIDE WHETHER OR NOT A PARTICULAR INTEGRAL IS LARGE ENOUGH
C     TO WARRANT KEEPING
      OUT=GOUT(NCOUNT)
      IF(DABS(OUT).LE.CUTOFF)GO TO 340
C     KEEP THE INTEGRAL
C     ORDER ATOMIC ORBITALS SUCH THAT
C     I GE J
C     K GE L
C     I GE K
C     IF I EQ K
C     THEN J GE L
C     INTEGRAL OVER ATOMIC ORBITALS  (IJ/KL)
      IN=IP+I
      JN=JP+J
      KN=KP+K
      LN=LP+L
      IAT=IXYZ(INEW)
      JAT=IXYZ(JNEW)
      KAT=IXYZ(KNEW)
      LAT=IXYZ(LNEW)
C
      IF(IN-JN)80,90,90
   80 NN=IN
      IN=JN
      JN=NN
      NN=IAT
      IAT=JAT
      JAT=NN
C
   90 IF(KN-LN)100,110,110
C
  100 NN=KN
      KN=LN
      LN=NN
      NN=KAT
      KAT=LAT
      LAT=NN
C
  110 IF(IN-KN)120,130,140
C
  120 NN=IN
      IN=KN
      KN=NN
      NN=JN
      JN=LN
      LN=NN
      NN=IAT
      IAT=KAT
      KAT=NN
      NN=JAT
      JAT=LAT
      LAT=NN
      GO TO 140
C
  130 IF(JN-LN)120,140,140
C
  140 NTINTS=NTINTS+1
C
C     HAS PRINTING BEEN REQUESTED?
C
      IF(IOP18.EQ.0)GO TO 500
C     STORE LABELS AND INTEGRALS AS A LITTLE BUFFER FOR PRINTING
      IXP(IQ)=IN
      JXP(IQ)=JN
      KXP(IQ)=KN
      LXP(IQ)=LN
      XXP(IQ)=OUT
      IQ=IQ+1
      IF(IQ.LE.4)GO TO 500
      IQ=1
      WRITE (IOUT,1000) (IXP(IIP),JXP(IIP),KXP(IIP),LXP(IIP),XXP(IIP),
     1 IIP=1,4)
C*
C     WRITE OUT A NEW OFFSET LABEL IF THE OFFSETS HAVE CHANGED.
C*
  500 IF (NOOFF) GO TO 150
      IF (IAT.EQ.IATOLD .AND. JAT.EQ.JATOLD .AND. KAT.EQ.KATOLD .AND.
     1 LAT.EQ.LATOLD) GO TO 150
      IX(ICOUNT,NBUFF)=0
C?IBM/GLD/GBR/VAX
C     JA=((IAT*256+JAT)*256+KAT)*256+LAT
C     IX(ICOUNT+2,NBUFF)=0
C??
C?UNX
      JA = IPACK (IAT, JAT, KAT, LAT)
      IX(ICOUNT+2,NBUFF)=0
C??
      IX(ICOUNT+1,NBUFF)=JA
      ICOUNT=ICOUNT+NWORDS
C
C     CHECK FOR FILLED BUFFER AREA.
C
      IF(ICOUNT.LT.3073)GO TO 510
C     FILLED ... SHIP OUT BUFFER - WAIT FOR PREVIOUS BUFFER (LBUFF).
C
      IF (LBUFF .NE. 0) THEN
         CALL NWIOWT (ITWOEL, 3072, .FALSE., 'SHLOUT', IOP(1), *9000)
      END IF
      LBUFF = NBUFF
      CALL NWIOWR (ITWOEL, IX(1,LBUFF), 3072, .FALSE., 'SHLOUT',
     1 IOP(1), *9000)
      NBUFF = 3 - NBUFF
      ICOUNT=1
C
C     RESET OLD OFFSET VALUES.
C
  510 IATOLD=IAT
      JATOLD=JAT
      KATOLD=KAT
      LATOLD=LAT
C*
C     THE FOLLOWING CODE (STATEMENTS 150-280), BASED ON GAUSSIAN 76,
C     SEARCHES THE 4-TUPLE (IN,JN,KN,LN) TO DETERMINE IF ALL 4 INDICES
C     ARE DIFFERENT (THIS IS REFERRED TO AS A TYPE 1 INTEGRAL), OR IF
C     THERE ARE COINCIDENCES (THIS IS REFERRED TO AS A TYPE 2 INTEGRAL).
C     TYPE 1 INTEGRAL LABELS HAVE A 0 IN THE LEFT-MOST BIT (SIGN BIT)
C     SO IN THE SCF IF THE LABEL IS POSITIVE, THE INTEGRAL HAS 4
C     DIFFERENT INDICES. IN THE CASE OF COINCIDENCES, THE ENTIRE LABEL
C     IS NEGATED, SO THE LABEL IS NEGATIVE IN THE SCF.
C*
C     32 BIT MACHINES: THE LABEL IS (FROM LEFT TO RIGHT) P, Q, R AND
C     SINDX, EACH OCCUPYING 8 BITS (A BYTE), WITH THE LEADING BIT OF
C     EACH BYTE SET TO 0. SINDX IS THE SUPER INDEX, AND FURTHER
C     CLASSIFIES THE TYPE 2 INTEGRALS, WHOSE INDICES ARE P, Q AND R -
C     SEE THE TABLE BELOW FOR DETAILS. IF SINDX=6, A MINOR INDEX
C     (MINDX) IS USED TO FURTHER CLASSIFY THE INTEGRAL, AND IT OCCUPIES
C     THE PLACE OF R IN THE LABEL.
C     NOTE THAT P, Q, R AND SINDX ARE PACKED INTO ONE WORD, THEN THE
C     ENTIRE PACKED LABEL IS NEGATED TO PLACE A 1 IN THE SIGN BIT.
C     THE INTEGRAL VALUE FOLLOWS IN THE NEXT 2 WORDS.
C*
C     60 BIT MACHINES: THE LABEL IS (FROM LEFT TO RIGHT) P, Q, R AND
C     SINDX, EACH OCCUPYING 10 BITS.
C     SINDX IS THE SUPER INDEX, AND FURTHER
C     CLASSIFIES THE TYPE 2 INTEGRALS, WHOSE INDICES ARE P, Q AND R -
C     SEE THE TABLE BELOW FOR DETAILS. IF SINDX=6, A MINOR INDEX
C     (MINDX) IS USED TO FURTHER CLASSIFY THE INTEGRAL, AND IT OCCUPIES
C     THE PLACE OF R IN THE LABEL.
C     NOTE THAT P, Q, R AND SINDX ARE PACKED INTO ONE WORD, THEN THE
C     ENTIRE PACKED LABEL IS NEGATED TO PLACE A 1 IN THE SIGN BIT.
C     THE INTEGRAL VALUE FOLLOWS IN THE NEXT WORD.
C*
C     APPLY OFFSETS TO EACH ORBITAL NUMBER SO THAT EACH LABEL
C     CONTAINS ONLY A NUMBER BETWEEN 1 AND 127.
C     IF THE LABEL FIELD IS 0, THE FIRST WORD OF THE INTEGRAL FIELD
C     CONTAINS NEW ATOM NUMBERS, WHICH ARE PACKED AND UNPACKED JUST LIKE
C     THE INTEGRAL LABELS THEMSELVES. IF THE INTEGRAL IS 0, THIS IS
C     THE LAST INTEGRAL ON THE INTEGRAL FILE.
C     NOTE: THESE OFFSETS ARE NOT USED IF THE TOTAL NUMBER OF BASIS
C     FUNCTIONS IS 127 OR LESS, OR IN CDC VERSIONS.
C*
C     FOR TYPE 1 INTEGRALS, THE FOUR INDICES (IN, JN, KN AND LN) ARE
C     PACKED IN THE PLACE OF P, Q, R AND SINDX.
C*
C     SINDX   MINDX   DESIGNATION
C
C       0      N/A      (PQ,PR)
C       1      N/A      (PQ,QR)
C       2      N/A      (PQ,RQ)
C       3      N/A      (PQ,PQ)
C       4      N/A      (PP,QR)
C       5      N/A      (PQ,RR)
C       6       1       (PQ,QQ)
C       6       2       (PP,QQ)
C       6       3       (PP,PQ)
C       7      N/A      (PP,PP)
C
C     NOTE THAT THE FOLLOWING VARIABLES ARE EQUIVALENCED:
C     KN AND MINDX, LN AND SINDX SO CARE MUST BE TAKEN NOT TO
C     DESTROY INFORMATION THAT WILL BE NEEDED LATER.
C
C     SINDX IS INCREMENTED BY 1 BEFORE THE LABEL IS PACKED, FOR USE IN
C     GO TO STATEMENTS IN THE SCF.
C*
  150 IF(IN.NE.JN)GO TO 190
C     I=J.
      IF(IN.NE.KN)GO TO 170
      IF(IN.NE.LN)GO TO 160
C     SINDX=7 (PP,PP).
      IF (.NOT. NOOFF) IN=IN-IAOFF(IAT)
      JN=0
      KN=0
      SINDX=7
      GO TO 280
C     SINDX=6, MINDX=3 (PP,PQ).
  160 IF (NOOFF) THEN
         JN=LN
      ELSE
         IN=IN-IAOFF(IAT)
         JN=LN-IAOFF(LAT)
      END IF
      MINDX=3
      SINDX=6
      GO TO 280
  170 IF(KN.EQ.LN)GO TO 180
C     SINDX=4 (PP,QR).
      IF (NOOFF) THEN
         JN=KN
         KN=LN
      ELSE
         IN=IN-IAOFF(IAT)
         JN=KN-IAOFF(KAT)
         KN=LN-IAOFF(LAT)
      END IF
      SINDX=4
      GO TO 280
C     SINDX=6, MINDX=2 (PP,QQ).
  180 IF (NOOFF) THEN
         JN=KN
      ELSE
         IN=IN-IAOFF(IAT)
         JN=KN-IAOFF(KAT)
      END IF
      MINDX=2
      SINDX=6
      GO TO 280
C     I AND J ARE DIFFERENT.
  190 IF(IN.NE.KN)GO TO 210
C     I=K.
      IF(JN.NE.LN)GO TO 200
C     SINDX=3 (PQ,PQ).
      IF (.NOT. NOOFF) THEN
         IN=IN-IAOFF(IAT)
         JN=JN-IAOFF(JAT)
      END IF
      KN=0
      SINDX=3
      GO TO 280
C     SINDX=0 (PQ,PR).
  200 IF (NOOFF) THEN
         KN=LN
      ELSE
         IN=IN-IAOFF(IAT)
         JN=JN-IAOFF(JAT)
         KN=LN-IAOFF(LAT)
      END IF
      SINDX=0
      GO TO 280
C     I AND K ARE DIFFERENT.
  210 IF(JN.NE.KN)GO TO 230
C     J=K.
      IF(KN.NE.LN)GO TO 220
C     SINDX=6, MINDX=1 (PQ,QQ).
      IF (.NOT. NOOFF) THEN
         IN=IN-IAOFF(IAT)
         JN=JN-IAOFF(JAT)
      END IF
      MINDX=1
      SINDX=6
      GO TO 280
C     SINDX=1 (PQ,QR).
  220 IF (NOOFF) THEN
         KN=LN
      ELSE
         IN=IN-IAOFF(IAT)
         JN=JN-IAOFF(JAT)
         KN=LN-IAOFF(LAT)
      END IF
      SINDX=1
      GO TO 280
C     J AND K ARE DIFFERENT.
  230 IF(KN.NE.LN)GO TO 240
C     K=L ONLY.
C     SINDX=5 (PQ,RR).
      IF (.NOT. NOOFF) THEN
         IN=IN-IAOFF(IAT)
         JN=JN-IAOFF(JAT)
         KN=KN-IAOFF(KAT)
      END IF
      SINDX=5
      GO TO 280
C     K AND L DIFFERENT - TRY J AND L.
  240 IF(JN.EQ.LN)GO TO 250
C     NO COINCIDENCES - TYPE 1 INTEGRAL (IJ,KL).
      ITYPE=1
      IF (.NOT. NOOFF) THEN
         IN=IN-IAOFF(IAT)
         JN=JN-IAOFF(JAT)
         KN=KN-IAOFF(KAT)
         LN=LN-IAOFF(LAT)
      END IF
      GO TO 290
C     SINDX=2 (PQ,RQ).
  250 IF (.NOT. NOOFF) THEN
         IN=IN-IAOFF(IAT)
         JN=JN-IAOFF(JAT)
         KN=KN-IAOFF(KAT)
      END IF
      SINDX=2
C     SET SIGN BIT OF LABEL TO 1 FOR TYPE 2 INTEGRALS.
  280 SINDX=SINDX+1
      ITYPE=2
C
C     PACK LABEL.
C
C?IBM/GLD/GBR/VAX
C 290 JA=((IN*256+JN)*256+KN)*256+LN
C??
C?CDC
C 290 JA=((IN*1024+JN)*1024+KN)*1024+LN
C??
C?UNX
  290 JA = IPACK (IN, JN, KN, LN)
C??
      IF(ITYPE.EQ.2)JA=-JA
      IX(ICOUNT,NBUFF)=JA
      IX(ICOUNT+1,NBUFF) = INTOUT(1)
C?IBM/GLD/GBR/VAX/UNX
      IX(ICOUNT+2,NBUFF) = INTOUT(2)
C??
      ICOUNT=ICOUNT+NWORDS
C
C     CHECK FOR FILLED BUFFER AREA.
C
      IF(ICOUNT.LT.3073)GO TO 340
C     FILLED ... SHIP OUT BUFFER.
      ICOUNT=1
      IF (LBUFF .NE. 0) THEN
         CALL NWIOWT (ITWOEL, 3072, .FALSE., 'SHLOUT', IOP(1), *9000)
      END IF
      LBUFF = NBUFF
      CALL NWIOWR (ITWOEL, IX(1,LBUFF), 3072, .FALSE., 'SHLOUT',
     1 IOP(1), *9000)
      NBUFF = 3 - NBUFF
  340 CONTINUE
      RETURN
C*
C     ALL DONE.
C*
C     ARE WE TO PRINT THE REMAINING INTEGRALS
  350 IF(IOP18.EQ.0)GO TO 380
C
C     ARE THERE INTEGRALS REMAINING TO BE PRINTED.
C
      IQ=IQ-1
      IF(IQ)380,380,370
C     YES ... PRINT THEM.
  370 WRITE (IOUT,1000) (IXP(IIP),JXP(IIP),KXP(IIP),LXP(IIP),XXP(IIP),
     1 IIP=1,IQ)
C
C     PLACE SEMI-FILLED BUFFER ON DISK OR TAPE, AND WAIT FOR I/O TO
C     COMPLETE.
C
  380 IX(ICOUNT,NBUFF)=0
      IX(ICOUNT+1,NBUFF)=0
C?IBM/GLD/GBR/VAX/UNX
      IX(ICOUNT+2,NBUFF)=0
C??
      IF (LBUFF .NE. 0) THEN
         CALL NWIOWT (ITWOEL, 3072, .FALSE., 'SHLOUT', IOP(1), *9000)
      END IF
      LBUFF = NBUFF
      CALL NWIOWR (ITWOEL, IX(1,LBUFF), 3072, .FALSE., 'SHLOUT',
     1 IOP(1), *9000)
      CALL NWIOWT (ITWOEL, 3072, .FALSE., 'SHLOUT', IOP(1), *9000)
C?GLD/IBM/CDC/VAX/UNX OMIT FOR GBR VERSION DUE TO RUN-TIME LIBRARY BUG.
      ENDFILE ITWOEL
C??
      REWIND ITWOEL
      IF(IOP(23).EQ.1)RETURN
      WRITE(IOUT,1020)NTINTS,ITWOEL,CUTOFF
 9000 RETURN
      END
