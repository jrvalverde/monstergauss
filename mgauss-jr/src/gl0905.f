C     GL0905       04 DEC 88                                         MRP
C?IBM/GLD/GBR/VAX/UNX
      SUBROUTINE FORMTP
C??
C?CDC
C     PROGRAM FORMTP
C??
C1INTRODUCTION
C     LINK 0905
C
C     AUTHORS: N.C. HANDY, J.D. GODDARD AND H.F. SCHAEFER.
C     MODIFIED BY R.A. POIRIER AND M.R. PETERSON,
C     UNIVERSITY OF TORONTO CHEMISTRY DEPT., TORONTO, ONTARIO, CANADA.
C     OPEN SHELL SINGLET ADDED BY P.S. MARTIN AND M.R. PETERSON,
C     UNIVERSITY OF TORONTO CHEMISTRY DEPT., TORONTO, ONTARIO, CANADA.
C
C     THIS PROGRAM CREATES THE CI FORMULA TAPE ON UNIT IFORMT
C     FROM THE INTEGRAL LABELS (UNIT ILABEL) AND COUPLING COEFFICIENTS
C     (UNIT ICOUPL).
C
C     THE CURRENT PACKING OF THE FORMULA TAPE GIVES AN ABSOLUTE
C     MAXIMUM OF 32000 CONFIGURATIONS.
C*
C/
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA)
C     PARAMETER (NT=#NT, MA=#MA, MV=#MV)
C##
      PARAMETER (NA= 36)
      PARAMETER (NT= 70, MA= 25, MV= 50)
C###
      PARAMETER (MA1=MA*(MA+1)/2, MV1=MV*(MV+1)/2)
C?IBM/GLD/GBR/VAX/UNX
      INTEGER*2 MD1,MD2
C??
      COMMON /A/ IOP(99),NATOMS,ICHARG,MULTIP,IC1(NA),NAE,NBE,NE,NBASIS,
     1 CD1(NA,3),CD2(4),IC3(401)
      COMMON/C905A/NOCC,NOCC1,NHALF,NMO,NDF,NSF,NSTAT,NDOUB,NBF,NS,
     1 ITY(NT,2),ITV(NT,2),IN(NT,NT),MS1(MA,NT),MS2(MA,NT),ICASE
      COMMON/C905B/MD1(MA1,MV1)
C?IBM/GLD/GBR/VAX/UNX  USE ARRAY MD2.
      COMMON/C905C/MD2(MA1,MV1)
C??
      COMMON/C905D/ICUP(24,24,4),I3(2,1680),MT,NCD(24),NCS(6),ISNG(6,6),
     1 II(1680),NFORMT
      COMMON/IO/INN,IOUT,IODUM1(3),
     1 IMOINT,ISCRCH,IFINT,ILABEL,ICOUPL,IFORMT,IODUM2(206)
C
      DIMENSION X(128)
C?GLD/GBR/IBM/VAX/UNX
      DIMENSION IX(256)
C??
C?CDC
C     DIMENSION IX(128)
C??
      EQUIVALENCE (X(1),IX(1))
      EQUIVALENCE (X(1),ICUP(1,1,1)),(X0905A,NOCC),(X0905B,MD1(1,1))
C?IBM/GLD/GBR/VAX/UNX
      EQUIVALENCE (X0905C,MD2(1,1))
C??
 1000 FORMAT(/'0NUMBER OF 3360 WORD BLOCKS WRITTEN TO THE FORMULA TAPE:'
     1 ,I10)
C*
      IF (IOP(10).EQ.0) RETURN
      ICASE = MULTIP
      IF(IOP(11).EQ.1)ICASE=5
C
C     CALCULATE LENGTH OF CONFIGURATION DATA.
C
C?IBM/GLD/GBR/VAX/UNX
      L3132=(MA1*MV1+3)/4
      L0905A=(NT*(NT+2*MA+4)+11)/2
      NIX = 256
C??
C?CDC
C     L3132=MA1*MV1
C     L0905A=NT*(NT+2*MA+4)+10
C     NIX = 128
C??
      CALL TREAD (31,X0905B,L3132,1,L3132,1,0)
C?IBM/GLD/GBR/VAX/UNX  USE ARRAY MD2.
      CALL TREAD (32,X0905C,L3132,1,L3132,1,0)
C??
      CALL TREAD (9,X0905A,L0905A,1,L0905A,1,0)
      MT=0
      REWIND IFORMT
      REWIND ILABEL
      REWIND ICOUPL
C
C     READ SPIN COUPLING COEFFICIENT TAPE
C
      READ (ICOUPL) NCD,NCS
      READ (ICOUPL) X
      CALL NWIOWR (IFORMT, IX, NIX, .TRUE., 'FORMTP',
     1 IOP(1), *9000)
      NFORMT=1
C
      READ (ICOUPL) ICUP
      CALL OPENO1 (IOP)
      IF (IOP(1) .NE. 0) GO TO 100
C
      READ (ICOUPL) ICUP
      IF(ICASE.EQ.5)THEN
         READ (ICOUPL) ISNG
      ELSE
         DO 60 I=1,4
         DO 60 J=1,4
   60    ISNG(I,J)=ICUP(24,I,J)
      END IF
      CALL OPENO2 (IOP)
      IF (IOP(1) .NE. 0) GO TO 100
C
      READ (ICOUPL) ICUP
      CALL OPENO3 (IOP)
      IF (IOP(1) .NE. 0) GO TO 100
C
      READ (ICOUPL) ICUP
      CALL OPENO4 (IOP)
      IF (IOP(1) .NE. 0) GO TO 100
C
      READ (ICOUPL) ICUP
      CALL OPENO5 (IOP)
      IF (IOP(1) .NE. 0) GO TO 100
C
      READ (ICOUPL) ICUP
      IF(ICASE.EQ.5)THEN
         READ (ICOUPL) ISNG
      ELSE
         DO 61 I=1,4
         DO 61 J=1,4
   61    ISNG(I,J)=ICUP(24,I,J)
      END IF
      CALL OPENO6 (IOP)
      IF (IOP(1) .NE. 0) GO TO 100
C
      CALL FNOPEN (IOP)
      IF (IOP(1) .NE. 0) GO TO 100
C
C     OPEN SHELL SINGLET ONLY.
C
      IF(ICASE.EQ.5)THEN
         DO 50 I=1,NOCC
         DO 50 J=NOCC1,NMO
         MM=MS2(I,J)
         IF(MM.EQ.1)GO TO 50
         MU=MS1(I,J)
         NCSMU=NCS(MU)
         DO 49 K=1,NCSMU
         NU=MU+K-1
         NN=MM+K-1
         IF(NU.EQ.5)GO TO 49
         IF(NU.LT.5)N1=2
         IF(NU.EQ.6)N1=18
         CALL WRT(NN,N1,NN,1)
   49    CONTINUE
   50    CONTINUE
C
         DO 65 I=1,NOCC
         DO 65 J=I,NOCC
         IJ=IN(I,J)
         DO 65 IA=NOCC1,NMO
         DO 65 IB=IA,NMO
         IAB=IN(IA-NDOUB,IB-NDOUB)
C?IBM/GLD/GBR/VAX/UNX
         MM=MD2(IJ,IAB)
         IF(MM.EQ.1)GO TO 65
C??
         MU=MD1(IJ,IAB)
C?CDC
C        MM=AND(MU,65535)
C        IF(MM.EQ.1)GO TO 65
C        MU=SHIFT(MU,-16)
C??
         NCSMU=NCD(MU)
         DO 48 K=1,NCSMU
         NU=MU+K-1
         NN=MM+K-1
         N1=2
         IF(NU.LE.3.OR.NU.EQ.20.OR.NU.EQ.21.OR.NU.EQ.23)GO TO 48
         IF(NU.EQ.22)N1=18
         CALL WRT(NN,N1,NN,1)
   48    CONTINUE
   65    CONTINUE
C
         MT = MT + 1
         I3(1,MT) = 32004
      END IF
C
C     WRITE OUT LAST BUFFER TO FORMULA TAPE.
C
      CALL NWIOWR (IFORMT, I3, 3360, .TRUE., 'FORMTP',
     1 IOP(1), *9000)
      NFORMT = NFORMT + 1
C?GLD/IBM/CDC/VAX/UNX OMIT FOR GBR VERSION DUE TO RUN-TIME LIBRARY BUG.
      ENDFILE IFORMT
C??
      REWIND ILABEL
      REWIND ICOUPL
      REWIND IFORMT
  100 IF (IOP(19).EQ.0) WRITE (IOUT,1000) NFORMT
 9000 RETURN
      END
      SUBROUTINE OPENO1 (IOP)
C#
C     PARAMETER (NT=#NT, MA=#MA, MV=#MV)
C##
      PARAMETER (NT= 70, MA= 25, MV= 50)
C###
      PARAMETER (MA1=MA*(MA+1)/2, MV1=MV*(MV+1)/2)
C?IBM/GLD/GBR/VAX/UNX
      INTEGER*2 MD1,MD2
C??
      COMMON/C905A/NOCC,NOCC1,NHALF,NMO,NDF,NSF,NSTAT,NDOUB,NBF,NS,
     1 ITY(NT,2),ITV(NT,2),IN(NT,NT),MS1(MA,NT),MS2(MA,NT),ICASE
      COMMON/C905B/MD1(MA1,MV1)
C?IBM/GLD/GBR/VAX/UNX  USE ARRAY MD2.
      COMMON/C905C/MD2(MA1,MV1)
C??
      COMMON/C905D/IFILL(2304),I3(2,1680),MT,NCD(24),NCS(6),ISNG(6,6),
     1 II(1680),NFORMT
      COMMON/PACKED/I,K1,J1,L1,JA
      COMMON/IO/IODUM1(5),IMOINT,ISCRCH,IFINT,ILABEL,ICOUPL,IFORMT,
     1 IODUM2(206)
C*
      LOGICAL JUMP,SKIP
C*
      DIMENSION IOP(99)
C*
 1111 READ (ILABEL) II
      DO 2222 IQ=1,1680
      JA=II(IQ)
      IF (JA.EQ.0) RETURN
C?IBM/GLD/GBR/VAX/CDC
C     CALL UNPACK
C??
C?UNX
      CALL UNPACK (JA, I, K1, J1, L1)
C??
      MT=MT+1
      I3(1,MT)=32001
      IF (MT.LT.1680) GO TO 2
      CALL NWIOWR (IFORMT, I3, 3360, .TRUE., 'OPENO1',
     1 IOP(1), *9000)
      NFORMT=NFORMT+1
      MT=0
    2 IJ1=IN(I,J1)
      KL1=IN(K1,L1)
      IL=IN(I,L1)
      JK=IN(J1,K1)
      DO 45 IA=NOCC1,NMO
      DO 45 IB=NOCC1,IA
      J=J1
      K=K1
      L=L1
      IJ=IJ1
      KL=KL1
      IPERM=1
      IAB=IN(IA-NDOUB,IB-NDOUB)
      JUMP=.TRUE.
      GO TO 15
   10 J=L1
      L=K1
      K=J1
      IJ=IL
      KL=JK
      IPERM=-1
   15 SKIP=.FALSE.
      ND=2
C?IBM/GLD/GBR/VAX/UNX
      MU=MD1(IJ,IAB)
      MM=MD2(IJ,IAB)
      NU=MD1(KL,IAB)
      NN=MD2(KL,IAB)
C??
C?CDC
C     NU=MD1(KL,IAB)
C     NN=AND(NU,65535)
C     NU=SHIFT(NU,-16)
C     MU=MD1(IJ,IAB)
C     MM=AND(MU,65535)
C     MU=SHIFT(MU,-16)
C??
      IF ((I-J)*(K-L).LT.0) IPERM=-IPERM
      IF (IJ.EQ.KL) ND=1
      IF (J1.EQ.L1.OR.I.EQ.K1) JUMP=.FALSE.
   20 NJK=1
      IF (IPERM.EQ.-1) NJK=2
      MQ=NCD(MU)
      NS=NCD(NU)
      CALL WST (MM,NN,1,NJK,ND,MQ,NS,MU,NU)
      IF ((I.NE.J.AND.K.NE.L).OR.SKIP) GO TO 40
      SKIP=.TRUE.
      IPERM=-IPERM
      GO TO 20
   40 IF (.NOT.JUMP) GO TO 45
      JUMP=.FALSE.
      GO TO 10
   45 CONTINUE
 2222 CONTINUE
      GO TO 1111
C
C     ERROR EXIT.
C
 9000 RETURN
      END
      SUBROUTINE OPENO2 (IOP)
C#
C     PARAMETER (NT=#NT, MA=#MA, MV=#MV)
C##
      PARAMETER (NT= 70, MA= 25, MV= 50)
C###
      PARAMETER (MA1=MA*(MA+1)/2, MV1=MV*(MV+1)/2)
C?IBM/GLD/GBR/VAX/UNX
      INTEGER*2 MD1,MD2
C??
      COMMON/C905A/NOCC,NOCC1,NHALF,NMO,NDF,NSF,NSTAT,NDOUB,NBF,NS,
     1 ITY(NT,2),ITV(NT,2),IN(NT,NT),MS1(MA,NT),MS2(MA,NT),ICASE
      COMMON/C905B/MD1(MA1,MV1)
C?IBM/GLD/GBR/VAX/UNX  USE ARRAY MD2.
      COMMON/C905C/MD2(MA1,MV1)
C??
      COMMON/C905D/IFILL(2304),I3(2,1680),MT,NCD(24),NCS(6),ISNG(6,6),
     1 II(1680),NFORMT
      COMMON/PACKED/IA1,I1,IC1,K1,JA
      COMMON/IO/IODUM1(5),IMOINT,ISCRCH,IFINT,ILABEL,ICOUPL,IFORMT,
     1 IODUM2(206)
C
      LOGICAL JUMP
C*
      DIMENSION IPE(4),IOP(99)
C*
 1111 READ (ILABEL) II
      DO 2222 IQ=1,1680
      JA=II(IQ)
      IF (JA.EQ.0) RETURN
C?IBM/GLD/GBR/VAX/CDC
C     CALL UNPACK
C??
C?UNX
      CALL UNPACK (JA, IA1, I1, IC1, K1)
C??
      MT=MT+1
      I3(1,MT)=32001
      IF (MT.LT.1680) GO TO 4
      CALL NWIOWR (IFORMT, I3, 3360, .TRUE., 'OPENO2',
     1 IOP(1), *9000)
      NFORMT=NFORMT+1
      MT=0
    4 DO 30 J=1,NOCC
      DO 30 IB=NOCC1,NMO
      JUMP=.FALSE.
      IA=IA1
      IC=IC1
      I=I1
      K=K1
  110 IJ=IN(I,J)
      KJ=IN(K,J)
      IAB=IN(IA-NDOUB,IB-NDOUB)
      ICB=IN(IC-NDOUB,IB-NDOUB)
      IF (IJ.EQ.KJ.AND.IAB.EQ.ICB) JUMP=.TRUE.
C?IBM/GLD/GBR/VAX/UNX
      MU=MD1(IJ,IAB)
      MM=MD2(IJ,IAB)
      NU=MD1(KJ,ICB)
      NN=MD2(KJ,ICB)
C??
C?CDC
C     NU=MD1(KJ,ICB)
C     NN=AND(NU,65535)
C     NU=SHIFT(NU,-16)
C     MU=MD1(IJ,IAB)
C     MM=AND(MU,65535)
C     MU=SHIFT(MU,-16)
C??
      IF (MM.LT.NN) GO TO 26
      IP1=1
      IP2=1
      IP3=1
      IP4=1
      IF (J.LT.K) IP1=-1
      IF (K.LT.J) IP2=-1
      IF (IB.LT.IC) IP3=-1
      IF (IC.LT.IB) IP4=-1
      IPE(1)=IP1*IP3
      IPE(2)=IP2*IP4
      IPE(3)=IP1*IP4
      IPE(4)=IP2*IP3
      DO 25 LAB=1,4
      IPERM=IPE(LAB)
      IF (IPERM.EQ.-1) IPERM=2
      IF (LAB.EQ.1.AND.(J.LT.I.OR.IB.LT.IA)) GO TO 25
      IF (LAB.EQ.2.AND.(I.LT.J.OR.IA.LT.IB)) GO TO 25
      IF (LAB.EQ.3.AND.(J.LT.I.OR.IA.LT.IB)) GO TO 25
      IF (LAB.EQ.4.AND.(I.LT.J.OR.IB.LT.IA)) GO TO 25
      MQ=NCD(MU)
      NS=NCD(NU)
      CALL WST (MM,NN,IPERM,LAB,1,MQ,NS,MU,NU)
   25 CONTINUE
   26 IF (JUMP) GO TO 30
      IA=IC1
      IC=IA1
      I=K1
      K=I1
      JUMP=.TRUE.
      GO TO 110
   30 CONTINUE
      K=K1
      I=I1
      IA=IA1
      IC=IC1
      ND=2
      IF (I.EQ.K.AND.IC.EQ.IA) ND=1
      MU=MS1(K,IC)
      NU=MS1(I,IA)
      MM=MS2(K,IC)
      NN=MS2(I,IA)
      MQ=NCS(MU)
      NS=NCS(NU)
      DO 90 N5=1,MQ
      DO 90 N6=1,NS
      JT=ISNG(MU+N5-1,NU+N6-1)
   90 CALL WRT (MM+N5-1,JT,NN+N6-1,ND)
      IJ=IN(I,K)
      KL=IN(IA-NDOUB,IC-NDOUB)
      NU=MD1(IJ,KL)
C?IBM/GLD/GBR/VAX/UNX
      NN=MD2(IJ,KL)
C??
C?CDC
C     NN=AND(NU,65535)
C     NU=SHIFT(NU,-16)
C??
      IF ((I-K)*(IA-IC).LT.0) GO TO 2
      NS=NCD(NU)
      IPSM2=23
      IF(ICASE.EQ.5)IPSM2=24
      CALL WST (3,NN,1,1,2,1,NS,IPSM2,NU)
      GO TO 2222
    2 NS=NCD(NU)
      CALL WST (3,NN,1,2,2,1,NS,IPSM2,NU)
 2222 CONTINUE
      GO TO 1111
C
C     ERROR EXIT.
C
 9000 RETURN
      END
      SUBROUTINE OPENO3 (IOP)
C#
C     PARAMETER (NT=#NT, MA=#MA, MV=#MV)
C##
      PARAMETER (NT= 70, MA= 25, MV= 50)
C###
      PARAMETER (MA1=MA*(MA+1)/2, MV1=MV*(MV+1)/2)
C?IBM/GLD/GBR/VAX/UNX
      INTEGER*2 MD1,MD2
C??
      COMMON/C905A/NOCC,NOCC1,NHALF,NMO,NDF,NSF,NSTAT,NDOUB,NBF,NS,
     1 ITY(NT,2),ITV(NT,2),IN(NT,NT),MS1(MA,NT),MS2(MA,NT),ICASE
      COMMON/C905B/MD1(MA1,MV1)
C?IBM/GLD/GBR/VAX/UNX  USE ARRAY MD2.
      COMMON/C905C/MD2(MA1,MV1)
C??
      COMMON/C905D/IFILL(2304),I3(2,1680),MT,NCD(24),NCS(6),ISNG(6,6),
     1 II(1680),NFORMT
      COMMON/PACKED/IA,K,J1,I1,JA
      COMMON/IO/IODUM1(5),IMOINT,ISCRCH,IFINT,ILABEL,ICOUPL,IFORMT,
     1 IODUM2(206)
C
      LOGICAL JUMP,SKIP1,SKIP2
C*
      DIMENSION IQLAB(2,2),IOP(99)
C*
      IQLAB(1,1)=1
      IQLAB(2,1)=2
      IQLAB(1,2)=4
      IQLAB(2,2)=3
 1111 READ (ILABEL) II
      DO 2222 IQ=1,1680
      JA=II(IQ)
      IF (JA.EQ.0) RETURN
C?IBM/GLD/GBR/VAX/CDC
C     CALL UNPACK
C??
C?UNX
      CALL UNPACK (JA, IA, K, J1, I1)
C??
      MT=MT+1
      I3(1,MT)=32001
      IF (MT.LT.1680) GO TO 2
      CALL NWIOWR (IFORMT, I3, 3360, .TRUE., 'OPENO3',
     1 IOP(1), *9000)
      NFORMT=NFORMT+1
      MT=0
    2 DO 40 IC=NOCC1,NMO
      IAC=IN(IA-NDOUB,IC-NDOUB)
      I=I1
      J=J1
      JUMP=.FALSE.
   10 SKIP1=.FALSE.
      SKIP2=.FALSE.
      KJ=IN(K,J)
      MU=MD1(KJ,IAC)
C?IBM/GLD/GBR/VAX/UNX
      MM=MD2(KJ,IAC)
C??
C?CDC
C     MM=AND(MU,65535)
C     MU=SHIFT(MU,-16)
C??
      NU=MS1(I,IC)
      NN=MS2(I,IC)
      LAB1=1
      LAB2=1
      IF (J.LT.K) LAB1=2
   15 IF (IC.LT.IA) LAB2=2
  115 LAB=IQLAB(LAB1,LAB2)
      MQ=NCD(MU)
      NS=NCS(NU)
      CALL WST (MM,NN,1,LAB,2,MQ,NS,MU,NU)
      IF (SKIP1.OR.IA.NE.IC) GO TO 35
      SKIP1=.TRUE.
      LAB2=2
      GO TO 115
   35 IF (SKIP2.OR.K.NE.J) GO TO 30
      SKIP2=.TRUE.
      LAB1=2
      SKIP1=.FALSE.
      LAB2=1
      GO TO 15
   30 IF (JUMP.OR.I.EQ.J) GO TO 40
      I=J1
      J=I1
      JUMP=.TRUE.
      GO TO 10
   40 CONTINUE
 2222 CONTINUE
      GO TO 1111
C
C     ERROR EXIT.
C
 9000 RETURN
      END
      SUBROUTINE OPENO4 (IOP)
C#
C     PARAMETER (NT=#NT, MA=#MA, MV=#MV)
C##
      PARAMETER (NT= 70, MA= 25, MV= 50)
C###
      PARAMETER (MA1=MA*(MA+1)/2, MV1=MV*(MV+1)/2)
C?IBM/GLD/GBR/VAX/UNX
      INTEGER*2 MD1,MD2
C??
      COMMON/C905A/NOCC,NOCC1,NHALF,NMO,NDF,NSF,NSTAT,NDOUB,NBF,NS,
     1 ITY(NT,2),ITV(NT,2),IN(NT,NT),MS1(MA,NT),MS2(MA,NT),ICASE
      COMMON/C905B/MD1(MA1,MV1)
C?IBM/GLD/GBR/VAX/UNX  USE ARRAY MD2.
      COMMON/C905C/MD2(MA1,MV1)
C??
      COMMON/C905D/IFILL(2304),I3(2,1680),MT,NCD(24),NCS(6),ISNG(6,6),
     1 II(1680),NFORMT
      COMMON/PACKED/IA1,IC1,IB1,ID1,JA
      COMMON/IO/IODUM1(5),IMOINT,ISCRCH,IFINT,ILABEL,ICOUPL,IFORMT,
     1 IODUM2(206)
C
      LOGICAL JUMP,SKIP
C*
      DIMENSION IOP(99)
C*
 1111 READ (ILABEL) II
      DO 2222 IQ=1,1680
      JA=II(IQ)
      IF (JA.EQ.0) RETURN
C?IBM/GLD/GBR/VAX/CDC
C     CALL UNPACK
C??
C?UNX
      CALL UNPACK (JA, IA1, IC1, IB1, ID1)
C??
      MT=MT+1
      I3(1,MT)=32001
      IF (MT.LT.1680) GO TO 2
      CALL NWIOWR (IFORMT, I3, 3360, .TRUE., 'OPENO4',
     1 IOP(1), *9000)
      NFORMT=NFORMT+1
      MT=0
    2 IAD=IN(IA1-NDOUB,ID1-NDOUB)
      IBC=IN(IB1-NDOUB,IC1-NDOUB)
      ICD1=IN(IC1-NDOUB,ID1-NDOUB)
      IAB1=IN(IA1-NDOUB,IB1-NDOUB)
      IA=IA1
      DO 45 I=1,NOCC
      DO 45 J=1,I
      JUMP=.FALSE.
      IB=IB1
      IAB=IAB1
      ICD=ICD1
      IC=IC1
      ID=ID1
      IPERM=1
      GO TO 15
   10 IC=IB1
      ID=IC1
      IB=ID1
      IAB=IAD
      ICD=IBC
      IPERM=-1
   15 SKIP=.FALSE.
      IJ=IN(I,J)
C?IBM/GLD/GBR/VAX/UNX
      MU=MD1(IJ,IAB)
      MM=MD2(IJ,IAB)
      NU=MD1(IJ,ICD)
      NN=MD2(IJ,ICD)
C??
C?CDC
C     NU=MD1(IJ,ICD)
C     NN=AND(NU,65535)
C     NU=SHIFT(NU,-16)
C     MU=MD1(IJ,IAB)
C     MM=AND(MU,65535)
C     MU=SHIFT(MU,-16)
C??
      IF ((IA-IB)*(IC-ID).LT.0) IPERM=-IPERM
      ND=2
      IF (IAB.EQ.ICD) ND=1
      IF (IA1.EQ.IC1.OR.IB1.EQ.ID1) JUMP=.TRUE.
   20 NJK=1
      IF (IPERM.EQ.-1) NJK=2
      MQ=NCD(MU)
      NS=NCD(NU)
      CALL WST (MM,NN,1,NJK,ND,MQ,NS,MU,NU)
      IF ((IA.NE.IB.AND.IC.NE.ID).OR.SKIP) GO TO 40
      SKIP=.TRUE.
      IPERM=-IPERM
      GO TO 20
   40 IF (JUMP) GO TO 45
      JUMP=.TRUE.
      GO TO 10
   45 CONTINUE
 2222 CONTINUE
      GO TO 1111
C
C     ERROR EXIT.
C
 9000 RETURN
      END
      SUBROUTINE OPENO5 (IOP)
C#
C     PARAMETER (NT=#NT, MA=#MA, MV=#MV)
C##
      PARAMETER (NT= 70, MA= 25, MV= 50)
C###
      PARAMETER (MA1=MA*(MA+1)/2, MV1=MV*(MV+1)/2)
C?IBM/GLD/GBR/VAX/UNX
      INTEGER*2 MD1,MD2
C??
      COMMON/C905A/NOCC,NOCC1,NHALF,NMO,NDF,NSF,NSTAT,NDOUB,NBF,NS,
     1 ITY(NT,2),ITV(NT,2),IN(NT,NT),MS1(MA,NT),MS2(MA,NT),ICASE
      COMMON/C905B/MD1(MA1,MV1)
C?IBM/GLD/GBR/VAX/UNX  USE ARRAY MD2.
      COMMON/C905C/MD2(MA1,MV1)
C??
      COMMON/C905D/IFILL(2304),I3(2,1680),MT,NCD(24),NCS(6),ISNG(6,6),
     1 II(1680),NFORMT
      COMMON/PACKED/IA1,IC1,IB,J,JA
      COMMON/IO/IODUM1(5),IMOINT,ISCRCH,IFINT,ILABEL,ICOUPL,IFORMT,
     1 IODUM2(206)
C
      LOGICAL JUMP,SKIP1,SKIP2
C*
      DIMENSION IQLAB(2,2),IOP(99)
C*
      IQLAB(1,1)=1
      IQLAB(2,1)=2
      IQLAB(1,2)=4
      IQLAB(2,2)=3
 1111 READ (ILABEL) II
      DO 2222 IQ=1,1680
      JA=II(IQ)
      IF (JA.EQ.0) RETURN
C?IBM/GLD/GBR/VAX/CDC
C     CALL UNPACK
C??
C?UNX
      CALL UNPACK (JA, IA1, IC1, IB, J)
C??
      MT=MT+1
      I3(1,MT)=32001
      IF (MT.LT.1680) GO TO 2
      CALL NWIOWR (IFORMT, I3, 3360, .TRUE., 'OPENO5',
     1 IOP(1), *9000)
      NFORMT=NFORMT+1
      MT=0
    2 DO 40 I=1,NOCC
      IJ=IN(I,J)
      IA=IA1
      IC=IC1
      JUMP=.FALSE.
   10 SKIP1=.FALSE.
      SKIP2=.FALSE.
      IAB=IN(IA-NDOUB,IB-NDOUB)
      MU=MD1(IJ,IAB)
C?IBM/GLD/GBR/VAX/UNX
      MM=MD2(IJ,IAB)
C??
C?CDC
C     MM=AND(MU,65535)
C     MU=SHIFT(MU,-16)
C??
      NU=MS1(I,IC)
      NN=MS2(I,IC)
      LAB1=1
      LAB2=1
      IF (J.LT.I) LAB2=2
   15 IF (IB.LT.IA) LAB1=2
  115 LAB=IQLAB(LAB1,LAB2)
      MQ=NCD(MU)
      NS=NCS(NU)
      CALL WST (MM,NN,1,LAB,2,MQ,NS,MU,NU)
      IF (SKIP1.OR.IA.NE.IB) GO TO 35
      SKIP1=.TRUE.
      LAB1=2
      GO TO 115
   35 IF (SKIP2.OR.I.NE.J) GO TO 30
      SKIP2=.TRUE.
      LAB2=2
      LAB1=1
      SKIP1=.FALSE.
      GO TO 15
   30 IF (JUMP.OR.IA.EQ.IC) GO TO 40
      IA=IC1
      IC=IA1
      JUMP=.TRUE.
      GO TO 10
   40 CONTINUE
 2222 CONTINUE
      GO TO 1111
C
C     ERROR EXIT.
C
 9000 RETURN
      END
      SUBROUTINE OPENO6 (IOP)
C#
C     PARAMETER (NT=#NT, MA=#MA, MV=#MV)
C##
      PARAMETER (NT= 70, MA= 25, MV= 50)
C###
      PARAMETER (MA1=MA*(MA+1)/2, MV1=MV*(MV+1)/2)
C?IBM/GLD/GBR/VAX/UNX
      INTEGER*2 MD1,MD2
C??
      COMMON/C905A/NOCC,NOCC1,NHALF,NMO,NDF,NSF,NSTAT,NDOUB,NBF,NS,
     1 ITY(NT,2),ITV(NT,2),IN(NT,NT),MS1(MA,NT),MS2(MA,NT),ICASE
      COMMON/C905B/MD1(MA1,MV1)
C?IBM/GLD/GBR/VAX/UNX  USE ARRAY MD2.
      COMMON/C905C/MD2(MA1,MV1)
C??
      COMMON/C905D/IFILL(2304),I3(2,1680),MT,NCD(24),NCS(6),ISNG(6,6),
     1 II(1680),NFORMT
      COMMON/IO/IODUM1(5),IMOINT,ISCRCH,IFINT,ILABEL,ICOUPL,IFORMT,
     1 IODUM2(206)
      COMMON/PACKED/IA1,IC1,I11,K11,JA
C
      LOGICAL JUMP,JUMP1
C*
      DIMENSION IPE(4),IOP(99)
C*
 1111 READ (ILABEL) II
      DO 2222 IQ=1,1680
      JA=II(IQ)
      IF (JA.EQ.0) RETURN
C?IBM/GLD/GBR/VAX/CDC
C     CALL UNPACK
C??
C?UNX
      CALL UNPACK (JA, IA1, IC1, I11, K11)
C??
      MT=MT+1
      I3(1,MT)=32001
      IF (MT.LT.1680) GO TO 2
      CALL NWIOWR (IFORMT, I3, 3360, .TRUE., 'OPENO6',
     1 IOP(1), *9000)
      NFORMT=NFORMT+1
      MT=0
    2 DO 45 J=1,NOCC
      DO 45 IB=NOCC1,NMO
      I1=I11
      K1=K11
      JUMP=.FALSE.
   10 JUMP1=.FALSE.
      I=I1
      K=K1
      IA=IA1
      IC=IC1
   15 IF (I.EQ.K.OR.IA.EQ.IC) JUMP=.TRUE.
      IJ=IN(I,J)
      KJ=IN(K,J)
      IAB=IN(IA-NDOUB,IB-NDOUB)
      ICB=IN(IC-NDOUB,IB-NDOUB)
      IF (IJ.EQ.KJ.AND.IAB.EQ.ICB) JUMP1=.TRUE.
C?IBM/GLD/GBR/VAX/UNX
      MU=MD1(IJ,IAB)
      MM=MD2(IJ,IAB)
      NU=MD1(KJ,ICB)
      NN=MD2(KJ,ICB)
C??
C?CDC
C     NU=MD1(KJ,ICB)
C     NN=AND(NU,65535)
C     NU=SHIFT(NU,-16)
C     MU=MD1(IJ,IAB)
C     MM=AND(MU,65535)
C     MU=SHIFT(MU,-16)
C??
      IF (MM.LT.NN) GO TO 36
      IP1=1
      IP2=1
      IP3=1
      IP4=1
      IF (J.LT.K) IP1=-1
      IF (K.LT.J) IP2=-1
      IF (IB.LT.IC) IP3=-1
      IF (IC.LT.IB) IP4=-1
      IPE(1)=IP3*IP1
      IPE(2)=IP4*IP2
      IPE(3)=IP4*IP1
      IPE(4)=IP2*IP3
      DO 35 LAB=1,4
      IPERM=IPE(LAB)
      IF (IPERM.EQ.-1) IPERM=2
      IF (LAB.EQ.1.AND.(J.LT.I.OR.IB.LT.IA)) GO TO 35
      IF (LAB.EQ.2.AND.(I.LT.J.OR.IA.LT.IB)) GO TO 35
      IF (LAB.EQ.3.AND.(J.LT.I.OR.IA.LT.IB)) GO TO 35
      IF (LAB.EQ.4.AND.(I.LT.J.OR.IB.LT.IA)) GO TO 35
      MQ=NCD(MU)
      NS=NCD(NU)
      CALL WST (MM,NN,IPERM,LAB,1,MQ,NS,MU,NU)
   35 CONTINUE
   36 IF (JUMP1) GO TO 40
      I=K1
      K=I1
      IA=IC1
      IC=IA1
      JUMP1=.TRUE.
      GO TO 15
   40 IF (JUMP) GO TO 45
      JUMP=.TRUE.
      I1=K11
      K1=I11
      GO TO 10
   45 CONTINUE
      ND=2
      IP=1
      IF (I.EQ.K.AND.IA.EQ.IC) ND=1
      IF (I.EQ.K.OR.IA.EQ.IC) IP=-1
      MU=MS1(I,IA)
      MM=MS2(I,IA)
      NU=MS1(K,IC)
      NN=MS2(K,IC)
   39 MQ=NCS(MU)
      NS=NCS(NU)
      DO 90 N5=1,MQ
      DO 90 N6=1,NS
      JT=ISNG(MU+N5-1,NU+N6-1)
   90 CALL WRT (MM+N5-1,JT,NN+N6-1,ND)
      IP=-IP
      IF (IP.EQ.1) GO TO 2222
      MU=MS1(I,IC)
      MM=MS2(I,IC)
      NU=MS1(K,IA)
      NN=MS2(K,IA)
      GO TO 39
 2222 CONTINUE
      GO TO 1111
C
C     ERROR EXIT.
C
 9000 RETURN
      END
      SUBROUTINE FNOPEN (IOP)
C#
C     PARAMETER (NT=#NT, MA=#MA, MV=#MV)
C##
      PARAMETER (NT= 70, MA= 25, MV= 50)
C###
      PARAMETER (MA1=MA*(MA+1)/2, MV1=MV*(MV+1)/2)
C?IBM/GLD/GBR/VAX/UNX
      INTEGER*2 MD1,MD2
C??
      COMMON/C905A/NOCC,NOCC1,NHALF,NMO,NDF,NSF,NSTAT,NDOUB,NBF,NS,
     1 ITY(NT,2),ITV(NT,2),IN(NT,NT),MS1(MA,NT),MS2(MA,NT),ICASE
      COMMON/C905B/MD1(MA1,MV1)
C?IBM/GLD/GBR/VAX/UNX  USE ARRAY MD2.
      COMMON/C905C/MD2(MA1,MV1)
C??
      COMMON/C905D/JCUP(24,24,4),JL(2,1680),MT,NCD(24),NCS(6),
     1 IFILL(1716),NFORMT
      COMMON/IO/IODUM1(5),IMOINT,ISCRCH,IFINT,ILABEL,ICOUPL,IFORMT,
     1 IODUM2(206)
C
      LOGICAL JUMP
C*
      DIMENSION IOP(99)
C*
      IPSM1=2
      IF(ICASE.EQ.5)IPSM1=3
      DO 6666 III=1,IPSM1
      MT=MT+1
      JL(1,MT)=32002
      IF (MT.LT.1680) GO TO 2
      CALL NWIOWR (IFORMT, JL, 3360, .TRUE., 'FNOPEN',
     1 IOP(1), *9000)
      NFORMT=NFORMT+1
      MT=0
    2 READ (ICOUPL) JCUP
      DO 40 I=1,NOCC
      DO 40 J=I,NOCC
      IJ=IN(I,J)
      DO 40 IA2=NOCC1,NMO
      DO 40 IB2=IA2,NMO
      IAB=IN(IA2-NDOUB,IB2-NDOUB)
      MU=MD1(IJ,IAB)
C?IBM/GLD/GBR/VAX/UNX
      MM=MD2(IJ,IAB)
C??
C?CDC
C     MM=AND(MU,65535)
C     MU=SHIFT(MU,-16)
C??
      DO 35 IC=NOCC1,NMO
      IA=IA2
      IB=IB2
      LAB=1
      JUMP=.FALSE.
   10 IAC=IN(IC-NDOUB,IA-NDOUB)
C?IBM/GLD/GBR/VAX/UNX
      NN=MD2(IJ,IAC)
C??
C?CDC
C     NN=AND(MD1(IJ,IAC),65535)
C??
      IF (MM.LT.NN) GO TO 25
      KBC=IN(IB,IC)
      IPERM=1
      IF (LAB.EQ.1.AND.IC.LT.IA) IPERM=2
      IF (LAB.EQ.2.AND.IA.LT.IC) IPERM=2
C?IBM/GLD/GBR/VAX/UNX
      NU=MD1(IJ,IAC)
C??
C?CDC
C     NU=SHIFT(MD1(IJ,IAC),-16)
C??
      MQ=NCD(MU)
      NS=NCD(NU)
      CALL WST3 (MM,NN,IPERM,LAB,1,MQ,NS,MU,NU,KBC)
   25 IF (JUMP) GO TO 35
      IB=IA2
      IA=IB2
      LAB=2
      JUMP=.TRUE.
      GO TO 10
   35 CONTINUE
   40 CONTINUE
      DO 70 IA=NOCC1,NMO
      DO 70 IB=IA,NMO
      IAB=IN(IA-NDOUB,IB-NDOUB)
      DO 70 I1=1,NOCC
      DO 70 J1=I1,NOCC
      IJ=IN(I1,J1)
      MU=MD1(IJ,IAB)
C?IBM/GLD/GBR/VAX/UNX
      MM=MD2(IJ,IAB)
C??
C?CDC
C     MM=AND(MU,65535)
C     MU=SHIFT(MU,-16)
C??
      DO 65 K=1,NOCC
      I=I1
      J=J1
      LAB=3
      JUMP=.FALSE.
   45 KKJ=IN(K,J)
      IK=IN(I,K)
C?IBM/GLD/GBR/VAX/UNX
      NN=MD2(IK,IAB)
C??
C?CDC
C     NN=AND(MD1(IK,IAB),65535)
C??
      IF (MM.LT.NN) GO TO 60
      IPERM=1
      IF (LAB.EQ.3.AND.K.LT.I) IPERM=2
      IF (LAB.EQ.4.AND.I.LT.K) IPERM=2
C?IBM/GLD/GBR/VAX/UNX
      NU=MD1(IK,IAB)
C??
C?CDC
C     NU=SHIFT(MD1(IK,IAB),-16)
C??
      MQ=NCD(MU)
      NS=NCD(NU)
      CALL WST3 (MM,NN,IPERM,LAB,1,MQ,NS,MU,NU,KKJ)
   60 IF (JUMP) GO TO 65
      JUMP=.TRUE.
      I=J1
      LAB=4
      J=I1
      GO TO 45
   65 CONTINUE
   70 CONTINUE
      READ (ICOUPL) JCUP
      DO 90 I1=1,NOCC
      DO 90 J1=I1,NOCC
      DO 90 IA1=NOCC1,NMO
      DO 90 IB1=IA1,NMO
      IAB=IN(IA1-NDOUB,IB1-NDOUB)
      IJ=IN(I1,J1)
      MU=MD1(IJ,IAB)
C?IBM/GLD/GBR/VAX/UNX
      MM=MD2(IJ,IAB)
C??
C?CDC
C     MM=AND(MU,65535)
C     MU=SHIFT(MU,-16)
C??
      DO 90 LAB=1,4
      IF (LAB.NE.1) GO TO 901
      I=I1
      J=J1
      IA=IA1
      IB=IB1
      KK=IN(IB,J)
      GO TO 904
  901 IF (LAB.NE.2) GO TO 902
      I=I1
      IA=IB1
      KK=IN(IA1,J1)
      GO TO 904
  902 IF (LAB.NE.3) GO TO 903
      I=J1
      IA=IA1
      KK=IN(IB1,I1)
      GO TO 904
  903 I=J1
      IA=IB1
      KK=IN(IA1,I1)
  904 NU=MS1(I,IA)
      NN=MS2(I,IA)
      MQ=NCD(MU)
      NS=NCS(NU)
      CALL WST3 (MM,NN,1,LAB,2,MQ,NS,MU,NU,KK)
   90 CONTINUE
      DO 100 I=1,NOCC
      DO 100 IA=NOCC1,NMO
      MU=MS1(I,IA)
      MM=MS2(I,IA)
      DO 95 IB=NOCC1,NMO
      NU=MS1(I,IB)
      NN=MS2(I,IB)
      IF (MM.LT.NN) GO TO 95
      KAB=IN(IA,IB)
      MQ=NCS(MU)
      NS=NCS(NU)
      CALL WST3 (MM,NN,2,1,1,MQ,NS,MU,NU,KAB)
   95 CONTINUE
      DO 100 J=1,NOCC
      KIJ=IN(I,J)
      NU=MS1(J,IA)
      NN=MS2(J,IA)
      IF (MM.LT.NN) GO TO 100
      MQ=NCS(MU)
      NS=NCS(NU)
      CALL WST3 (MM,NN,2,2,1,MQ,NS,MU,NU,KIJ)
  100 CONTINUE
      DO 101 I=1,NOCC
      DO 101 IA=NOCC1,NMO
      MU=MS1(I,IA)
      MM=MS2(I,IA)
      KAI=IN(IA,I)
      MQ=NCS(MU)
      CALL WST3 (3,MM,1,2,2,1,MQ,24,MU,KAI)
  101 CONTINUE
 6666 CONTINUE
      MT=MT+1
      JL(1,MT)=32003
      IF (MT .LT. 1680) RETURN
      CALL NWIOWR (IFORMT, JL, 3360, .TRUE., 'FNOPEN',
     1 IOP(1), *9000)
      NFORMT=NFORMT+1
      MT = 0
      RETURN
C
C     ERROR EXIT.
C
 9000 RETURN
      END
      SUBROUTINE WRT (M1,N1,M2,J)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA)
C##
      PARAMETER (NA= 36)
C###
      COMMON /A/ IOP(99),IC1(NA),IC2(7),CD1(NA,3),CD2(4),IC3(401)
      COMMON/C905D/IFILL(2304),I3(2,1680),MT,IFILL2(1746),NFORMT
      COMMON/IO/IODUM1(10),IFORMT,IODUM3(206)
C*
      IF (N1.EQ.1) RETURN
      IF (J.EQ.1.AND.M1.LT.M2) RETURN
      J1=J
   20 MT=MT+1
      I3(1,MT)=N1*65536+M1
      I3(2,MT)=M2
      IF (MT.LT.1680) GO TO 10
      CALL NWIOWR (IFORMT, I3, 3360, .TRUE., 'WRT',
     1 IOP(1), *9000)
      NFORMT=NFORMT+1
      MT=0
   10 IF (M1.NE.M2) RETURN
      J1=J1-1
      IF (J1.EQ.0) RETURN
      GO TO 20
C
C     ERROR EXIT.
C
 9000 RETURN
      END
      SUBROUTINE WRT3 (M1,N1,M2,N2,J)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA)
C##
      PARAMETER (NA= 36)
C###
      COMMON /A/ IOP(99),IC1(NA),IC2(7),CD1(NA,3),CD2(4),IC3(401)
      COMMON/C905D/IFILL(2304),I3(2,1680),MT,IFILL2(1746),NFORMT
      COMMON/IO/IODUM1(10),IFORMT,IODUM3(206)
C*
      IF (M1.LT.3.OR.M2.LT.3) RETURN
      IF (J.EQ.1.AND.M1.LT.M2) RETURN
      IF (N1.EQ.1) RETURN
      J1=J
   20 MT=MT+1
      I3(1,MT)=N1*65536+M1
      I3(2,MT)=N2*65536+M2
      IF (MT.LT.1680) GO TO 10
      CALL NWIOWR (IFORMT, I3, 3360, .TRUE., 'WRT3',
     1 IOP(1), *9000)
      NFORMT=NFORMT+1
      MT=0
   10 IF (M1.NE.M2) RETURN
      J1=J1-1
      IF (J1.EQ.0) RETURN
      GO TO 20
C
C     ERROR EXIT.
C
 9000 RETURN
      END
      SUBROUTINE WST (MM,NN,IP,L,J,MS,NS,MU,NU)
      IF (MM.EQ.1.OR.NN.EQ.1) RETURN
C*
      DO 50 I1=1,MS
      DO 50 J1=1,NS
      JT=ICUP(MU+I1-1,NU+J1-1,IP,L)
   50 CALL WRT (MM+I1-1,JT,NN+J1-1,J)
      RETURN
      END
      SUBROUTINE WST3 (MM,NN,IP,L,J,MS,NS,MU,NU,K)
C*
      IF (MM.EQ.1.OR.NN.EQ.1) RETURN
      DO 50 I1=1,MS
      DO 50 J1=1,NS
      JT=ICUP(MU+I1-1,NU+J1-1,IP,L)
   50 CALL WRT3 (MM+I1-1,JT,NN+J1-1,K,J)
      RETURN
      END
      FUNCTION ICUP(MU,NU,N,M)
C*
      COMMON/C905D/JCUP(24,24,4),JFILL(5107),NFORMT
C?IBM/GLD/GBR/UNX USE HALF-WORD INTEGER UNPACK
      INTEGER*2 IH1,IH2
C*
      COMMON/PACKED/IFILL(4),IH1,IH2
C*
      EQUIVALENCE (IH,IH1)
C*
      GO TO (1,2,3,4),M
    1 IH=JCUP(MU,NU,N)
      ICUP=IH1
      RETURN
    2 IH=JCUP(MU,NU,N)
      ICUP=IH2
      RETURN
    3 IH=JCUP(MU,NU,N+2)
      ICUP=IH1
      RETURN
    4 IH=JCUP(MU,NU,N+2)
      ICUP=IH2
C??
C?VAX USE HALF-WORD INTEGER UNPACK
C     INTEGER*2 IH1,IH2
C*
C     COMMON/PACKED/IFILL(4),IH1,IH2
C*
C     EQUIVALENCE (IH,IH1)
C*
C     GO TO (1,2,3,4),M
C   1 IH=JCUP(MU,NU,N)
C     ICUP=IH2
C     RETURN
C   2 IH=JCUP(MU,NU,N)
C     ICUP=IH1
C     RETURN
C   3 IH=JCUP(MU,NU,N+2)
C     ICUP=IH2
C     RETURN
C   4 IH=JCUP(MU,NU,N+2)
C     ICUP=IH1
C??
C?CDC USE SHIFT AND AND TO UNPACK
C     DATA IMASK/65535/
C*
C     GO TO (1,2,3,4),M
C   1 ICUP=SHIFT(JCUP(MU,NU,N),-16)
C     RETURN
C   2 ICUP=AND(JCUP(MU,NU,N),IMASK)
C     RETURN
C   3 ICUP=SHIFT(JCUP(MU,NU,N+2),-16)
C     RETURN
C   4 ICUP=AND(JCUP(MU,NU,N+2),IMASK)
C??
      RETURN
      END
