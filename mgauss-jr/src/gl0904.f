C     GL0904       06 JAN 87                                         MRP
C?IBM/GLD/GBR/VAX/UNX
      SUBROUTINE INTSRT
C??
C?CDC
C     PROGRAM INTSRT
C??
C1INTRODUCTION
C     LINK 0904
C
C     AUTHORS: N.C. HANDY, J.D. GODDARD AND H.F. SCHAEFER, BERKELEY.
C     MODIFIED BY R.A. POIRIER AND M.R. PETERSON,
C     UNIVERSITY OF TORONTO CHEMISTRY DEPT., TORONTO, ONTARIO, CANADA.
C     OPEN SHELL SINGLET ADDED BY P.S. MARTIN AND M.R. PETERSON,
C     UNIVERSITY OF TORONTO CHEMISTRY DEPT., TORONTO, ONTARIO, CANADA.
C
C     THIS PROGRAM READS THE TRANSFORMED INTEGRALS, SORTS THEM, THEN
C     FORMS THE FOCK MATRICES.
C     THE MO INTEGRALS ARE READ FROM UNIT IMOINT, AND THE SORTED LABELS
C     AND INTEGRALS ARE WRITTEN TO UNITS ILABEL AND IFINT RESPECTIVELY.
C     UNIT ISCRCH IS USED FOR SCRATCH.
C*
C/
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA)
C     PARAMETER (NT=#NT)
C##
      PARAMETER (NA= 36)
      PARAMETER (NT= 70)
C###
      PARAMETER (NT1=NT*(NT+1)/2)
C
      COMMON /A/ IOP(99),NATOMS,ICHARG,MULTIP,IC1(NA),NAE,NBE,NE,NBASIS,
     1 CD1(NA,3),CD2(4),IC3(401)
      COMMON/TYPIND/IM(NT,2),IQ(3,3),ICC(4,4),IPERM(4,4),ID(2,2)
      COMMON/C904A/NOCC,NOCC1,NHALF,NMO,NDF,NSF,NSTAT,NDOUB,NBF,NS,
     1 ITY(NT,2),ITV(NT,2),IN(NT,NT),ICASE
      COMMON/C904B/F1(NT1),F2(NT1),F3(NT1)
      COMMON/C904C/FILLC(1680),IFILL(1680,2)
      COMMON/C904D/FILLD(1680)
      COMMON/IO/IIN,IOUT,IPUNCH,IMAT,ITWOEL,
     1 IMOINT,ISCRCH,IFINT,ILABEL,ICOUPL,IFORMT,IODUM(6),NFILE(100,2)
C
      DIMENSION F1OUT(NT,NT),F2OUT(NT,NT)
C
      EQUIVALENCE (X904A,NOCC),(F1OUT(1,1),FILLC(1)),
     1 (F2OUT(1,1),FILLD(1))
C
 1000 FORMAT ('1FOCK MATRIX (ALPHA SPIN)'//)
 1020 FORMAT ('1FOCK MATRIX (BETA SPIN)'//)
 1030 FORMAT ('1FOCK MATRIX (CLOSED)'//)
C
C     CALCULATE LENGTH OF CONFIGURATION ARRAY NEEDED IN GL0904.
C
C?IBM/GLD/GBR/VAX/UNX
      L904A=(NT*(NT+4)+11)/2
C??
C?CDC
C     L904A=NT*(NT+4)+10
C??
      IF(IOP(10).EQ.0)RETURN
      ICASE = MULTIP
      IF (IOP(11) .EQ. 1) ICASE = 5
      CALL TREAD(9,X904A,L904A,1,L904A,1,0)
      CALL CONSTS
      CALL MOIN
      CALL REORDR
      WRITE(IFINT)F1
      WRITE(IFINT)F2
      IF (ICASE .EQ. 5) WRITE(IFINT)F3
      ENDFILE IFINT
      REWIND IFINT
      REWIND IMOINT
      IF(IOP(17).NE.1)RETURN
      DO 80 I=1,NMO
      DO 80 J=1,I
      K=IN(I,J)
      F1OUT(I,J)=F1(K)
      F1OUT(J,I)=F1(K)
      F2OUT(I,J)=F2(K)
   80 F2OUT(J,I)=F2(K)
      IF (ICASE .EQ. 5) THEN
         WRITE (IOUT,1030)
      ELSE
         WRITE (IOUT,1000)
      END IF
      CALL MATOUT(F1OUT,NT,NT,NMO,NMO)
      IF (ICASE .EQ. 5) THEN
         WRITE (IOUT,1000)
      ELSE
         WRITE (IOUT,1020)
      END IF
      CALL MATOUT(F2OUT,NT,NT,NMO,NMO)
      IF (ICASE .NE. 5) RETURN
      DO 90 I=1,NMO
      DO 90 J=1,I
      K=IN(I,J)
      F1OUT(I,J)=F3(K)
   90 F1OUT(J,I)=F3(K)
      WRITE (IOUT,1020)
      CALL MATOUT (F1OUT, NT, NT, NMO, NMO)
      RETURN
      END
      SUBROUTINE CONSTS
C
C     THIS SUBROUTINE SETS UP ARRAYS USED TO SORT THE MO INTEGRALS
C#
C     PARAMETER (NT=#NT)
C##
      PARAMETER (NT= 70)
C###
      COMMON/TYPIND/IM(NT,2),IQ(3,3),IC(4,4),IPERM(4,4),ID(2,2)
      COMMON/C904A/NOCC,NOCC1,NHALF,NMO,NDF,NSF,NSTAT,NDOUB,NBF,NS,
     1 ITY(NT,2),ITV(NT,2),IN(NT,NT),ICASE
C
      NVIRT=NOCC+1
      DO 45 I=1,NDOUB
      IM(I,1)=1
   45 IM(I,2)=3
      DO 50 I=NVIRT,NMO
      IM(I,1)=2
   50 IM(I,2)=3
      IF (NOCC1.GT.NOCC) GO TO 56
      DO 55 I=NOCC1,NOCC
      IM(I,1)=1
   55 IM(I,2)=2
   56 IQ(1,1)=1
      IQ(2,1)=2
      IQ(1,2)=2
      IQ(2,2)=3
      IC(1,1)=1
      IC(2,2)=2
      IC(2,1)=3
      IC(3,3)=4
      IC(3,2)=5
      IC(2,3)=5
      IC(1,2)=3
      IC(1,3)=6
      IC(3,1)=6
      DO 60 I=1,3
      IQ(I,3)=4
   60 IQ(3,I)=4
      DO 75 I=1,4
      IC(4,I)=7
   75 IC(I,4)=7
      ID(1,1)=1
      ID(1,2)=2
      ID(2,1)=3
      ID(2,2)=4
      IPERM(1,1)=1
      IPERM(3,1)=1
      IPERM(2,1)=2
      IPERM(1,3)=4
      IPERM(1,2)=6
      IPERM(4,1)=1
      IPERM(2,3)=2
      IPERM(1,4)=4
      IPERM(3,3)=1
      IPERM(2,2)=7
      IPERM(3,2)=3
      IPERM(4,3)=1
      IPERM(2,4)=5
      IPERM(4,2)=3
      IPERM(3,4)=4
      IPERM(4,4)=1
      RETURN
      END
      SUBROUTINE MOIN
C
C     SORT INTEGRALS AS EXCHANGE OR COULOMB.
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NT=#NT)
C##
      PARAMETER (NT= 70)
C###
      PARAMETER (NT1=NT*(NT+1)/2)
      PARAMETER (ZERO=0.0D0)
C
      COMMON/C904A/NOCC,NOCC1,NHALF,NMO,NDF,NSF,NSTAT,NDOUB,NBF,NS,
     1 ITY(NT,2),ITV(NT,2),IN(NT,NT),ICASE
      COMMON/C904B/F1(NT1),F2(NT1),F3(NT1)
      COMMON/C904C/II(1680),YY(1680),IFILLC(1680)
      COMMON/C904D/BUFF(900)
      COMMON/IO/IODUM1(5),IMOINT,ISCRCH,IFINT,ILABEL,ICOUPL,IFORMT,
     1 IODUM2(206)
C
      DIMENSION SOUT(NT,NT),H(NT1),FILLD(NT,NT)
C
      EQUIVALENCE (SOUT(1,1),II(1)), (H(1),BUFF(1),FILLD(1,1))
C
      DO 1 I=1,NT1
      F2(I) = ZERO
    1 F3(I) = ZERO
C
      NRS=(NBF*(NBF+1))/2
      REWIND ISCRCH
C     READ TRANSFORMED ONE ELECTRON H INTEGRALS.
      REWIND IMOINT
      READ(IMOINT)(H(K),K=1,NRS)
      NINT=0
      DO 4 I=1,NBF
      DO 4 J=1,I
      NINT=NINT+1
      SOUT(I,J)=H(NINT)
    4 SOUT(J,I)=H(NINT)
      DO 6 I=1,NMO
      DO 6 J=1,I
      IJ=IN(I,J)
      ITVI=ITV(I,2)
      ITVJ=ITV(J,2)
      F1(IJ)=SOUT(ITVI,ITVJ)
    6 IF (ICASE .NE. 5) F2(IJ)=F1(IJ)
      NINT=900
      IC=0
      DO 100 I1=1,NBF
      DO 100 J1=1,I1
      DO 100 K1=1,I1
      LMAX=K1
      IF (K1.EQ.I1) LMAX=J1
      DO 100 L1=1,LMAX
      NINT=NINT+1
      IF(NINT.LE.900)GO TO 40
      NINT=1
C     READ A BUFFER OF TRANSFORMED 2-ELECTRON INTEGRALS.
      READ(IMOINT)BUFF
C     NO PROCESSING FOR DELETED VIRTUAL ORBITALS.
   40 IF(ITY(I1,1).EQ.4.OR.ITY(J1,1).EQ.4.OR.ITY(K1,1).EQ.4.OR.ITY(L1,1
     1).EQ.4)GO TO 100
      BIB=BUFF(NINT)
      IF(I1.EQ.J1)CALL COUL(K1,L1,I1,BIB)
      IF(I1.EQ.K1)CALL EXCH(J1,L1,I1,BIB)
      IF(I1.EQ.J1.AND.I1.EQ.K1.AND.I1.EQ.L1)GO TO 62
      IF(K1.EQ.L1)CALL COUL(I1,J1,K1,BIB)
      IF(I1.EQ.K1.AND.(I1.EQ.J1.OR.I1.EQ.L1))GO TO 62
      IF(J1.EQ.K1)CALL EXCH(I1,L1,J1,BIB)
      IF(J1.EQ.K1.AND.J1.EQ.L1)GO TO 62
      IF(J1.EQ.L1)CALL EXCH(I1,K1,J1,BIB)
C     ONLY DO FOCK MATRIX ELEMENTS FOR FROZEN CORE MO.
   62 IF(ITY(I1,1).EQ.3.OR.ITY(J1,1).EQ.3.OR.ITY(K1,1).EQ.3.OR.ITY(L1,
     11).EQ.3)GO TO 100
      IX1=ITY(I1,2)
      JJ1=ITY(J1,2)
      KK1=ITY(K1,2)
      LL1=ITY(L1,2)
      IF(JJ1.LE.IX1)GO TO 15
      K=IX1
      IX1=JJ1
      JJ1=K
   15 IF(LL1.LE.KK1)GO TO 16
      K=KK1
      KK1=LL1
      LL1=K
   16 IF(KK1.LE.IX1)GO TO 17
      K=KK1
      L=LL1
      KK1=IX1
      LL1=JJ1
      IX1=K
      JJ1=L
   17 IF(KK1.NE.IX1)GO TO 18
      IF(LL1.LE.JJ1)GO TO 18
      K=LL1
      LL1=JJ1
      JJ1=K
C     PACK 2-ELECTRON LABELS.
   18 IC=IC+1
C?IBM/GLD/GBR/VAX
C     II(IC)=((IX1*256+JJ1)*256+KK1)*256+LL1
C??
C?UNX
      II(IC)=IPACK(IX1,JJ1,KK1,LL1)
C??
C?CDC
C     II(IC)=((IX1*1024+JJ1)*1024+KK1)*1024+LL1
C??
      YY(IC)=BIB
      IF(IC.LT.1680)GO TO 100
      WRITE(ISCRCH)II,YY
      IC=0
  100 CONTINUE
      IC=IC+1
      II(IC)=0
      WRITE(ISCRCH)II,YY
      ENDFILE ISCRCH
      RETURN
      END
      SUBROUTINE COUL(I,J,K,Z)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NT=#NT)
C##
      PARAMETER (NT= 70)
C###
      PARAMETER (NT1=NT*(NT+1)/2)
      PARAMETER (ONE=1.0D0, TWO=2.0D0)
C
      COMMON/C904A/NOCC,NOCC1,NHALF,NMO,NDF,NSF,NSTAT,NDOUB,NBF,NS,
     1 ITY(NT,2),ITV(NT,2),IN(NT,NT),ICASE
      COMMON/C904B/F1(NT1),F2(NT1),F3(NT1)
C
C     CHECK FOR FROZEN DOUBLY OCCUPIED MO.
      IF (ITY(I,1).EQ.3.OR.ITY(J,1).EQ.3) RETURN
C     CHECK FOR UNOCCUPIED MO.
      IF(ITY(K,2).GT.NOCC)RETURN
      X=ONE
      IF(ITY(K,2).LT.NOCC1)X=TWO
      I1=ITY(I,2)
      J1=ITY(J,2)
      M=IN(I1,J1)
      F1(M)=F1(M)+X*Z
      IF (ICASE .NE. 5) F2(M)=F2(M)+X*Z
      RETURN
      END
      SUBROUTINE EXCH(I,J,K,Z)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NT=#NT)
C##
      PARAMETER (NT= 70)
C###
      PARAMETER (NT1=NT*(NT+1)/2)
C
      COMMON/C904A/NOCC,NOCC1,NHALF,NMO,NDF,NSF,NSTAT,NDOUB,NBF,NS,
     1 ITY(NT,2),ITV(NT,2),IN(NT,NT),ICASE
      COMMON/C904B/F1(NT1),F2(NT1),F3(NT1)
C
C     CHECK FOR FROZEN DOUBLY OCCUPIED MO.
      IF (ITY(I,1).EQ.3.OR.ITY(J,1).EQ.3) RETURN
C     CHECK FOR UNOCCUPIED MO.
      IF (ITY(K,2).GT.NOCC) RETURN
C
      I1=ITY(I,2)
      J1=ITY(J,2)
      M=IN(I1,J1)
      IF (ICASE .EQ. 5) GO TO 5
C
C     CLOSED SHELL SINGLET, OPEN DOUBLET, TRIPLET, QUARTET.
C
      F1(M) = F1(M) - Z
      IF(ITY(K,2).LT.NOCC1) F2(M) = F2(M) - Z
      RETURN
C
C     OPEN SHELL SINGLET.
C
    5 IF (ITY(K,2) .GE. NOCC1) GO TO 10
      F1(M) = F1(M) - Z
      RETURN
C
   10 IF (ITY(K,2) .EQ. NOCC1) F2(M) = F2(M) + Z
      IF (ITY(K,2) .EQ. NOCC1+1) F3(M) = F3(M) + Z
      RETURN
      END
      SUBROUTINE REORDR
C*
C     SORT INTEGRALS INTO 6 TYPES:
C
C     TYPE 1: OO OO
C     TYPE 2: UU UU
C     TYPE 3: UU OO
C     TYPE 4: UO UO
C     TYPE 5: UO OO
C     TYPE 6: UU UO
C
C     WHERE O AND U REPRESENT OCCUPIED AND UNOCCUPIED MO RESPECTIVELY.
C*
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NT=#NT)
C##
      PARAMETER (NT= 70)
C###
      PARAMETER (NT1=NT*(NT+1)/2)
C
      COMMON/TYPIND/IM(NT,2),IQ(3,3),ICC(4,4),IPERM(4,4),ID(2,2)
      COMMON/C904A/NOCC,NOCC1,NHALF,NMO,NDF,NSF,NSTAT,NDOUB,NBF,NS,
     1 ITY(NT,2),ITV(NT,2),IN(NT,NT),ICASE
      COMMON/C904C/II(1680),IZ(1680),YZ(1680)
      COMMON/C904D/YY(1680)
      COMMON/PACKED/I1,J1,K1,L1,JA
      COMMON/IO/IODUM1(5),IMOINT,ISCRCH,IFINT,ILABEL,ICOUPL,IFORMT,
     1 IODUM2(206)
C
      DIMENSION FILLC(NT,NT), FILLD(NT,NT)
C
      EQUIVALENCE (II(1),FILLC(1,1)), (YY(1),FILLD(1,1))
C*
      MT=0
      REWIND ILABEL
C     LOOP OVER 6 TYPES OF INTEGRALS.
      DO 100 NTYPE=1,6
      NCNT=0
      REWIND ISCRCH
   22 READ(ISCRCH)II,YY
      DO 66 IL=1,1680
      JA=II(IL)
      IF(JA.EQ.0)GO TO 65
C?IBM/GLD/GBR/VAX/CDC
C     CALL UNPACK
C??
C?UNX
      CALL UNPACK (JA, I1, J1, K1, L1)
C??
      DO 44 I=1,2
      DO 44 J=1,2
      DO 44 K=1,2
      DO 44 L=1,2
      IY=IM(I1,I)
      JY=IM(J1,J)
      KY=IM(K1,K)
      LY=IM(L1,L)
      IJ=IQ(IY,JY)
      KL=IQ(KY,LY)
      N1=ICC(IJ,KL)
      IF(NTYPE.NE.N1)GO TO 44
      IF (ICASE .EQ. 5) GO TO 70
      GO TO (60,60,70,60,70,70),NTYPE
C
   60 IF (J.EQ.2.AND.L.EQ.1.AND.J1.EQ.L1.AND.I1.EQ.K1) GO TO 44
      IF (I.EQ.1.AND.K.EQ.2.AND.I1.EQ.K1.AND.J1.EQ.L1) GO TO 44
      IF (I.EQ.1.AND.J.EQ.2.AND.I1.EQ.J1) GO TO 44
      IF (K.EQ.2.AND.L.EQ.1.AND.K1.EQ.L1) GO TO 44
      GO TO 75
C
   70 IF (J.EQ.2.AND.L.EQ.1.AND.J1.EQ.L1.AND.I1.EQ.K1) GO TO 44
      IF (I.EQ.2.AND.K.EQ.1.AND.I1.EQ.K1.AND.J1.EQ.L1) GO TO 44
      IF (I.EQ.1.AND.J.EQ.2.AND.I1.EQ.J1) GO TO 44
      IF (K.EQ.1.AND.L.EQ.2.AND.K1.EQ.L1) GO TO 44
C
   75 IDIJ=ID(IY,JY)
      IDKL=ID(KY,LY)
      NLAB=IPERM(IDIJ,IDKL)
      NCNT=NCNT+1
      GO TO (1,2,3,4,5,6,7),NLAB
C
C     PACK 2-ELECTRON INTEGRAL LABEL.
C?IBM/GLD/GBR/VAX
C   1 IZ(NCNT)=((I1*256+J1)*256+K1)*256+L1
C     GO TO 43
C*
C   2 IZ(NCNT)=((J1*256+I1)*256+K1)*256+L1
C     GO TO 43
C*
C   3 IZ(NCNT)=((I1*256+J1)*256+L1)*256+K1
C     GO TO 43
C*
C   4 IZ(NCNT)=((K1*256+L1)*256+I1)*256+J1
C     GO TO 43
C*
C   5 IZ(NCNT)=((K1*256+L1)*256+J1)*256+I1
C     GO TO 43
C*
C   6 IZ(NCNT)=((L1*256+K1)*256+I1)*256+J1
C     GO TO 43
C*
C   7 IZ(NCNT)=((J1*256+I1)*256+L1)*256+K1
C??
C?UNX
    1 IZ(NCNT)=IPACK(I1,J1,K1,L1)
      GO TO 43
C*
    2 IZ(NCNT)=IPACK(J1,I1,K1,L1)
      GO TO 43
C*
    3 IZ(NCNT)=IPACK(I1,J1,L1,K1)
      GO TO 43
C*
    4 IZ(NCNT)=IPACK(K1,L1,I1,J1)
      GO TO 43
C*
    5 IZ(NCNT)=IPACK(K1,L1,J1,I1)
      GO TO 43
C*
    6 IZ(NCNT)=IPACK(L1,K1,I1,J1)
      GO TO 43
C*
    7 IZ(NCNT)=IPACK(J1,I1,L1,K1)
C??
C?CDC
C   1 IZ(NCNT)=((I1*1024+J1)*1024+K1)*1024+L1
C     GO TO 43
C*
C   2 IZ(NCNT)=((J1*1024+I1)*1024+K1)*1024+L1
C     GO TO 43
C*
C   3 IZ(NCNT)=((I1*1024+J1)*1024+L1)*1024+K1
C     GO TO 43
C*
C   4 IZ(NCNT)=((K1*1024+L1)*1024+I1)*1024+J1
C     GO TO 43
C*
C   5 IZ(NCNT)=((K1*1024+L1)*1024+J1)*1024+I1
C     GO TO 43
C*
C   6 IZ(NCNT)=((L1*1024+K1)*1024+I1)*1024+J1
C     GO TO 43
C*
C   7 IZ(NCNT)=((J1*1024+I1)*1024+L1)*1024+K1
C??
   43 IF(NCNT.LT.1680)GO TO 444
      WRITE(ILABEL)IZ
      NCNT=0
  444 MT=MT+1
      YZ(MT)=YY(IL)
      IF(MT.LT.1680)GO TO 44
      WRITE(IFINT)YZ
      MT=0
   44 CONTINUE
   66 CONTINUE
      GO TO 22
   65 NCNT=NCNT+1
      IZ(NCNT)=0
      WRITE(ILABEL)IZ
  100 CONTINUE
C
      ENDFILE ILABEL
      REWIND ILABEL
      IF(MT.GT.0)WRITE(IFINT)YZ
      RETURN
      END
