C     GL0903       16 OCT 87                                         MRP
C?IBM/GLD/GBR/VAX/UNX
      SUBROUTINE CONFIG
C??
C?CDC
C     PROGRAM CONFIG
C??
C=CONFIGURATION INTERACTION
C1INTRODUCTION
C     LINK 0903
C
C     CONFIGURATION GENERATOR
C     AUTHORS: N.C. HANDY, J.D. GODDARD AND H.F. SCHAEFER, BERKELEY.
C     MODIFIED BY R.A. POIRIER AND M.R. PETERSON,
C     UNIVERSITY OF TORONTO CHEMISTRY DEPT., TORONTO, ONTARIO, CANADA.
C     OPEN SHELL SINGLET ADDED BY P.S. MARTIN AND M.R. PETERSON,
C     UNIVERSITY OF TORONTO CHEMISTRY DEPT., TORONTO, ONTARIO, CANADA.
C
C     THIS PROGRAM GENERATES CONFIGURATIONS BY DOING SINGLE AND DOUBLE
C     EXCITATIONS WITH RESPECT TO A SINGLE REFERENCE CONFIGURATION.
C     THIS VERSION DOES CLOSED SHELL SINGLET AND OPEN SHELL SINGLET,
C     DOUBLET, TRIPLET AND QUARTET STATES.
C     THE CONFIGURATION DATA IS PUT IN SCRATCH FILES 31 AND 32 ON
C     UNIT IMAT, AND ON UNIT IFINT.
C
C*    INPUT REQUIREMENTS
C
C     1. NS (I4)
C        NS = NUMBER OF IRREDUCIBLE REPRESENTATIONS IN THE POINT GROUP
C           = 1   C1 (NO SYMMETRY)
C           = 2   CS, C2 OR CI
C           = 4   C2V, C2H OR D2
C           = 8   D2H
C
C     2. ZIA(I),IA(I,J),J=1,3 (REPEAT NS TIMES) (A4,3I4)
C        ZIA(I)  = LABEL (SYMMETRY)
C        IA(I,1) = NUMBER OF MO OF THAT SYMMETRY
C        IA(I,2) = NUMBER OF OCCUPIED MO OF THAT SYMMETRY
C        IA(I,3) = NUMBER OF MO OF THAT SYMMETRY TO BE FROZEN OFF THE
C                  TOP (HIGHEST)
C
C     3. IB(I),I=1,NT (NT= NUMBER OF OCCUPIED MO'S) (36I2)
C        IB(I) =   OCCUPANCY OF MO I
C              = 0 FROZEN AND DOUBLY OCCUPIED
C              = 1 SINGLY OCCUPIED
C              = 2 DOUBLY OCCUPIED
C
C     NOTE THAT THE OCCUPIED MO VECTORS (AND ORBITAL ENERGIES) MUST BE
C     SORTED BY SYMMETRY TYPES (SEE LINK 0901), AND THAT IB REFERS TO
C     THE OCCUPIED MO BY SYMMETRY TYPE (IE. ALL TYPE 1 OCCUPIED, THEN
C     ALL TYPE 2 OCCUPIED, ETC). ALL VIRTUAL ORBITALS, ALSO SORTED BY
C     SYMMETRY, MUST FOLLOW ALL OCCUPIED ORBITALS.
C*
C     THE ORDER OF THE IRREDUCIBLE REPRESENTATIONS FOR THE EIGHT
C     POSSIBLE POINTS GROUPS IS:
C     C1: A.
C     CS: A', A".
C     C2: A, B.
C     CI: AG, AU.
C     C2V: A1, A2, B1, B2.
C     C2H: AG, AU, BG, BU.
C     D2: A, B1, B2, B3.
C     D2H: AG, AU, B1G, B1U, B2G, B2U, B3G, B3U.
C==
C*
C/
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
C     MA   - MAXIMUM NUMBER OF ACTIVE OCCUPIED MO (#MA).
C     MV   - MAXIMUM NUMBER OF ACTIVE VIRTUALS + SINGLY OCCUPIED MO
C            (#MV).
C     NT   - MAXIMUM NUMBER OF ACTIVE MO (#NT).
C     NCON - MAXIMUM NUMBER OF CONFIGURATIONS (#NCON).
C#
C     PARAMETER (NA=#NA, NB=#NB)
C     PARAMETER (NF=#NF, NC=#NC, NE=2*NB)
C     PARAMETER (NT=#NT, NCON=#NCON , MA=#MA, MV=#MV)
C##
      PARAMETER (NA= 36, NB=200)
      PARAMETER (NF=120, NC=120, NE=2*NB)
      PARAMETER (NT= 70, NCON= 32000, MA= 25, MV= 50)
C###
      PARAMETER (MA1=MA*(MA+1)/2, MV1=MV*(MV+1)/2)
      PARAMETER (ZERO=0.0D0)
C?IBM/GLD/GBR/VAX/UNX
      INTEGER*2 MD1,MD2
C??
      COMMON /A/ IOP(99),NATOMS,ICHARG,MULTIP,IC1(NA),NAE,NBE,NEDUM,
     1 NBASIS,CD1(NA,3),CD2(4),IC2(401)
      COMMON/C903A/NOCC,NOCC1,NHALF,NMO,NDF,NSF,NSTAT,NDOUB,NBF,NS,
     1 ITY(NT,2),ITV(NT,2),INFILL(NT,NT),MS1(MA,NT),MS2(MA,NT),
     2 IA(8,3),IB(NT),F(NT)
      COMMON/C903B/MD1(MA1,MV1)
C?IBM/GLD/GBR/VAX/UNX  USE ARRAY MD2.
      COMMON/C903C/MD2(MA1,MV1)
C??
C     THIS COMMON BLOCK IS EXTENDED BY AN EQUIVALENCE BELOW.
      COMMON/C903D/D1(NE),D2(NF),D3(NC),D4(137),
     1 ID1(NC),ID2(3),NVAL,NOPEN,ID3(5)
C
      COMMON/IO/IN,IOUT,IPUNCH,IMAT,ITWOEL,
     1 IMOINT,ISCRCH,IFINT,ILABEL,ICOUPL,IFORMT,IODUM(6),NFILE(100,2)
      COMMON /CILAB/ ZIA(8)
C
      CHARACTER ZIA*4
C
      DIMENSION DIAG(NCON)
C
      EQUIVALENCE (X903A,NOCC),(DIAG(1),D1(1))
C
 1000 FORMAT('1',28('*')/' *CI CONFIGURATION GENERATOR*'/1X,28('*')//)
 1010 FORMAT(36I2)
 1020 FORMAT('0NUMBER OF ACTIVE OCCUPIED MO',21X,I4/
     1 ' POSITION OF FIRST SINGLY OCCUPIED OR VIRTUAL MO',2X,I4/
     2 ' TOTAL NUMBER OF ACTIVE MO',24X,I4/' TOTAL NUMBER OF DOUBLY ',
     3 'OCCUPIED ACTIVE MO',8X,I4/' NUMBER OF SYMMETRY TYPES',25X,I4)
 1030 FORMAT(' CLOSED SHELL SINGLET'//)
 1040 FORMAT(' OPEN SHELL DOUBLET'//)
 1050 FORMAT(' OPEN SHELL TRIPLET'//)
 1060 FORMAT(' OPEN SHELL QUARTET'//)
 1070 FORMAT(' ILLEGAL NUMBER OF SYMMETRY OPERATIONS - NOT 1 2 4 OR 8')
 1080 FORMAT(' SYMMETRY',5X,'NUMBER OF MO OF THAT SYMMETRY'/'  OF MO',
     1 7X,'TOTAL',5X,'OCCUPIED',5X,'FROZEN VIRTUAL'/1X,50('-'))
 1090 FORMAT(A4,3I4)
 1100 FORMAT(2X,A4,7X,I4,8X,I4,11X,I4)
 1110 FORMAT(//' OCCUPANCY VECTOR:'/(1X,36I3)/)
 1120 FORMAT(' MULTIPLICITY',I3,' CANNOT BE TREATED')
 1130 FORMAT('0TOO MANY ACTIVE OCCUPIED MO OR TOO MANY ACTIVE MO')
 1140 FORMAT('0NUMBER OF MO USED HERE DOES NOT MATCH NUMBER ',
     1 'TRANSFORMED IN LINK 0901')
 1150 FORMAT(I4)
 1160 FORMAT('0THIS GENERALIZED SCF CASE CAN NOT BE TREATED: NVAL =',
     1 I3,', NOPEN =',I3,', MULTIP =',I3)
 1170 FORMAT('0ILLEGAL VALUE (',I2,') FOUND ON OCCUPANCY CARD')
 1180 FORMAT('0OCCUPANCY CARD DOES NOT MATCH THE NUMBER OF ALPHA AND ',
     1 'BETA SPIN ELECTRONS')
 1190 FORMAT('0DO NOT FORGET THAT YOUR MOLECULAR ORBITALS ARE NOW ',
     1 'ORDERED IN TERMS OF SYMMETRY. MAKE SURE YOU FREEZE THE ',
     2 'CORRECT MO(S).')
 1200 FORMAT(' OPEN SHELL SINGLET'//)
C
C     CALCULATE LENGTH OF CONFIGURATION DATA.
C
C?IBM/GLD/GBR/VAX/UNX
      L3132=(MA1*MV1+3)/4
C??
C?CDC
C     L3132=MA1*MV1
C??
      IPRINT=IOP(19)
      IF(IPRINT.EQ.0)WRITE(IOUT,1000)
C     INITIALIZE ITY.
      DO 300 I=1,NT
      ITY(I,1)=1
  300 ITY(I,2)=0
      ICASE=MULTIP
      IF(IOP(11).EQ.1)ICASE=5
      IF(IOP(16).EQ.0)READ(IN,1150)NS
      IF(IOP(16).EQ.1)CALL TREAD(9,X903A,NFILE(9,1),1,NFILE(9,1),1,0)
      IF(NS.EQ.1.OR.NS.EQ.2.OR.NS.EQ.4.OR.NS.EQ.8)GO TO 10
      IOP(1)=-2
      WRITE(IOUT,1070)
      RETURN
C
   10 IF(ICASE.LT.1.OR.ICASE.GT.5)GO TO 200
      IF(IOP(9).NE.2.OR.IOP(16).EQ.1)GO TO 11
C     CHECK RHF CASES FOR MC-SCF.
      CALL TREAD(5,D1,NFILE(5,1),1,NFILE(5,1),1,0)
      IF(NVAL.EQ.0.AND.NOPEN.EQ.MULTIP-1.AND.ICASE.LE.4)GO TO 11
      IF(NVAL.EQ.0.AND.NOPEN.EQ.2.AND.ICASE.EQ.5)GO TO 11
      WRITE(IOUT,1160)NVAL,NOPEN,MULTIP
      IOP(1)=-2
      RETURN
C
   11 GO TO (1,2,3,4,5),ICASE
    1 NHALF=6
      NDF=4
      NSF=2
      IF(IPRINT.EQ.0)WRITE(IOUT,1030)
      GO TO 15
C
    2 NHALF=6
      NDF=7
      NSF=3
      IF(IPRINT.EQ.0)WRITE(IOUT,1040)
      GO TO 15
C
    3 NHALF=15
      NDF=9
      NSF=3
      IF(IPRINT.EQ.0)WRITE(IOUT,1050)
      GO TO 15
C
    4 NHALF=15
      NDF=9
      NSF=3
      IF(IPRINT.EQ.0)WRITE(IOUT,1060)
      GO TO 15
C
    5 NHALF=22
      NDF=12
      NSF=5
      IF(IPRINT.EQ.0)WRITE(IOUT,1200)
C
C     COUNT OCCUPIED MO, FROZEN VIRTUALS AND TOTAL MO.
C
   15 NTOCC=0
      NVF=0
      NBF=0
      IF(IPRINT.EQ.0)WRITE(IOUT,1080)
      DO 20 I=1,NS
      IF(IOP(16).EQ.0)READ(IN,1090)ZIA(I),(IA(I,J),J=1,3)
      IF(IPRINT.EQ.0)WRITE(IOUT,1100)ZIA(I),(IA(I,J),J=1,3)
      NVF=NVF+IA(I,3)
      NBF=NBF+IA(I,1)
   20 NTOCC=NTOCC+IA(I,2)
      IF(IOP(16).EQ.0)READ(IN,1010)(IB(I),I=1,NTOCC)
      IF(IPRINT.EQ.0)WRITE(IOUT,1110)(IB(I),I=1,NTOCC)
C
C     COUNT FROZEN CORE ORBITALS.
C
      NCF=0
      DO 21 I=1,NTOCC
      IF(IB(I).GE.0.AND.IB(I).LE.2)GO TO 21
      WRITE(IOUT,1170)IB(I)
      IOP(1)=-2
      RETURN
   21 IF(IB(I).EQ.0)NCF=NCF+1
C
C     THESE LOOPS RE-ORDER THE MO TO EXCLUDE FROZEN CORES AND DELETED
C     VIRTUALS. THE REMAINING ACTIVE MO ARE PARTITIONED INTO 3 GROUPS:
C     DOUBLY OCCUPIED, SINGLY OCCUPIED AND UNOCCUPIED, WITH EACH GROUP
C     STILL SORTED BY SYMMETRY.
C     ITV AND ITY ARE USED TO MAP BETWEEN THE ORIGINAL AND NEW SCHEMES:
C     ITV(I,1): SYMMETRY NUMBER FOR NEW MO I.
C     ITV(I,2): NUMBER OF NEW MO I IN THE ORIGINAL SET.
C     ITY(I,1): CODE FOR ORIGINAL MO I: 1 IS ACTIVE, 3 IS FROZEN CORE
C     AND 4 IS DELETED VIRTUAL.
C     ITY(I,2): NUMBER OF ORIGINAL MO I IN NEW SET (0 IF NOT PRESENT).
C
C     LOOP OVER DOUBLY OCCUPIED MO.
C
      K2=0
      K3=0
      DO 23 I=1,NS
      K1=IA(I,2)
      IF(K1.EQ.0)GO TO 23
      K22=K2
      DO 24 J=1,K1
      K22=K22+1
      IF(IB(K22).EQ.0)ITY(K22,1)=3
      IF(IB(K22).LT.2)GO TO 24
      K3=K3+1
      ITY(K22,2)=K3
      ITV(K3,1)=I
      ITV(K3,2)=K22
   24 CONTINUE
      K2=K2+IA(I,2)
   23 CONTINUE
C
C     NDOUB IS THE NUMBER OF DOUBLY OCCUPIED ACTIVE MO.
      NDOUB=K3
C     NOCC1 IS THE POSITION OF THE FIRST SINGLY OCCUPIED OR VIRTUAL MO.
      NOCC1=K3+1
C
C     LOOP OVER SINGLY OCCUPIED MO.
C
      K2=0
      DO 33 I=1,NS
      K1=IA(I,2)
      IF(K1.EQ.0)GO TO 33
      K22=K2
      DO 34 J=1,K1
      K22=K22+1
      IF(IB(K22).NE.1)GO TO 34
      K3=K3+1
      ITY(K22,2)=K3
      ITV(K3,1)=I
      ITV(K3,2)=K22
   34 CONTINUE
      K2=K2+IA(I,2)
   33 CONTINUE
C
C     NOCC IS THE TOTAL NUMBER OF ACTIVE OCCUPIED MO.
      NOCC=K3
C
C     LOOP OVER VIRTUAL MO.
C
      DO 43 I=1,NS
      L1=IA(I,1)-IA(I,2)
      K11=L1-IA(I,3)+1
      IF(L1.EQ.0)GO TO 43
      DO 44 J=1,L1
      K2=K2+1
      IF(J.GE.K11)ITY(K2,1)=4
      IF(J.GE.K11)GO TO 44
      K3=K3+1
      ITY(K2,2)=K3
      ITV(K3,1)=I
      ITV(K3,2)=K2
   44 CONTINUE
   43 CONTINUE
      NMO=K3
      IF(IPRINT.EQ.0)WRITE(IOUT,1020)NOCC,NOCC1,NMO,NDOUB,NS
      IF(NOCC.GT.MA.OR.NMO.GT.NT.OR.NMO-NDOUB.GT.MV)GO TO 210
C     CHECK NUMBER OF MO AGAINST NUMBER TRANSFORMED.
      IF (IOP(61).NE.0) THEN
         IF (NBF.NE.IOP(93) .OR. NCF+NMO+NVF.NE.IOP(93)) GO TO 220
      END IF
C     CHECK NUMBER OF OCCUPIED MO AGAINST NUMBER OF ALPHA AND BETA
C     ELECTRONS.
      IF (ICASE .NE. 5) THEN
         IF (NCF+NOCC.NE.NAE .OR. NCF+NDOUB.NE.NBE) GO TO 230
      ELSE
         IF (NCF+NOCC-1.NE.NAE .OR. NCF+NDOUB+1.NE.NBE) GO TO 230
      END IF
      IF (IOP(10).EQ.0) THEN
         WRITE(IOUT,1190)
         GO TO 70
      END IF
C
C     SHIFT THE SCF EIGENVALUES TO ACCOUNT FOR THE NEW ORDERING.
C
      CALL TREAD(12,DIAG,NT,1,NBF,1,0)
      GO TO 90
C
C     CHECK RUN: ZERO EIGENVALUES.
C
   70 DO 80 I=1,NBF
   80 DIAG(I)=ZERO
   90 DO 100 I=1,NMO
      K1=ITV(I,2)
  100 F(I)=DIAG(K1)
      CALL OPCODE(ICASE,IFINT,DIAG,NCON,L3132)
C     TEST I/O UNITS BY REWINDING THEM.
      REWIND ILABEL
      REWIND ICOUPL
      REWIND IFORMT
      RETURN
C
C     ILLEGAL MULTIPLICITY.
  200 WRITE(IOUT,1120)ICASE
      IOP(1)=-2
      RETURN
C     PROBLEM TOO LARGE.
  210 WRITE(IOUT,1130)
      IOP(1)=-2
      RETURN
C     INCORRECT NUMBER OF MO SPECIFIED.
  220 WRITE(IOUT,1140)
      IOP(1)=-2
      RETURN
C     OCCUPANCY CARD DOES NOT MATCH NAE/NBE.
  230 WRITE(IOUT,1180)
      IOP(1)=-2
      RETURN
      END
      SUBROUTINE OPCODE(ICASE,IFINT,DIAG,MXCONF,L3132)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C#
C     PARAMETER (NA=#NA)
C     PARAMETER (NT=#NT, MA=#MA, MV=#MV)
C##
      PARAMETER (NA= 36)
      PARAMETER (NT= 70, MA= 25, MV= 50)
C###
      PARAMETER (MA1=MA*(MA+1)/2, MV1=MV*(MV+1)/2)
      PARAMETER (ZERO=0.0D0)
C?IBM/GLD/GBR/VAX/UNX
      INTEGER*2 MD1,MD2
C??
      COMMON /A/ IOP(99),IC1(NA),IC2(7),CD1(NA,3),CD2(4),IC3(401)
      COMMON/C903A/NOCC,NOCC1,NHALF,NMO,NDF,NSF,NSTAT,NDOUB,NBF,NS,
     1 ITY(NT,2),ITV(NT,2),IN(NT,NT),MS1(MA,NT),MS2(MA,NT),
     2 IAFILL(8,3),IBFILL(NT),F(NT)
      COMMON/C903B/MD1(MA1,MV1)
C?IBM/GLD/GBR/VAX/UNX  USE ARRAY MD2.
      COMMON/C903C/MD2(MA1,MV1)
C??
      COMMON/IO/IIN,IOUT,IPUNCH,IMAT,ITWOEL,IODUM(12),NFILE(100,2)
C
      DIMENSION MTABSP(8),MTABS(85),MTAB(8,8),DIAG(MXCONF)
C
      EQUIVALENCE (X903A,NOCC),(X903B,MD1(1,1))
C?IBM/GLD/GBR/VAX/UNX
      EQUIVALENCE (X903C,MD2(1,1))
C??
      DATA MTABSP/1,2,0,6,0,0,0,22/
      DATA MTABS/1,1,2,2,1,1,2,3,4,2,1,4,3,3,4,1,2,4,3,2,1,
     1 1,2,3,4,5,6,7,8,2,1,4,3,6,5,8,7,3,4,1,2,7,8,5,6,4,3,2,1,8,7,6,5,
     2 5,6,7,8,1,2,3,4,6,5,8,7,2,1,4,3,7,8,5,6,3,4,1,2,8,7,6,5,4,3,2,1/
C
 1010 FORMAT('0TOTAL NUMBER OF CONFIGURATIONS',15X,I8)
 1020 FORMAT('0ERROR - TOO MANY CONFIGURATIONS (MAXIMUM OF',1X,I6,')')
C
      IFLAG=0
      DIAG(1)=ZERO
      DIAG(2)=ZERO
      DIAG(3)=ZERO
      MT=0
      DO 10 I=1,NMO
      DO 10 J=1,I
      MT=MT+1
      IN(J,I)=MT
   10 IN(I,J)=MT
      MT=3
C
C     COPY THE APPROPRIATE SYMMETRY TABLE.
C
      IS=MTABSP(NS)
      DO 4 I=1,NS
      DO 4 J=1,NS
      MTAB(I,J)=MTABS(IS)
    4 IS=IS+1
C*
C     THIS LOOP CREATES THE SINGLY EXCITED CONFIGURATIONS:
C     MT IS THE NUMBER OF THE CONFIGURATION AND MU IS THE TYPE OF
C     CONFIGURATION. ONLY THOSE CONFIGURATIONS WHICH ARE SYMMETRY
C     ALLOWED ARE INCLUDED. NUMBERING OF MO IS IN TERMS OF ACTIVE MO.
C     JUMPS IN MT ARE NECESSITATED BY MORE THAN ONE CONFIGURATION PER
C     GIVEN SPATIAL EXCITATION.
C*
C     LOOP OVER OCCUPIED MO.
C
      DO 45 I=1,NOCC
      IS=ITV(I,1)
C     LOOP OVER SINGLY OCCUPIED OR VIRTUAL MO.
      DO 45 J=NOCC1,NMO
      IAS=ITV(J,1)
      IPRD=MTAB(IS,IAS)
C     CHECK IF ALLOWED BY SYMMETRY.
      IF(IPRD.NE.1)GO TO 455
      MU=ITYPS(I,J,ICASE,NOCC,NOCC1)
      IF (MU.EQ.62) GO TO 455
      MT=MT+1
      DIAG(MT)=F(J)-F(I)
      MS1(I,J)=MU
      MS2(I,J)=MT
      IF (MU.LT.NSF) GO TO 45
      IF (ICASE.EQ.2 .OR. ICASE.EQ.5) GO TO 55
      IF(ICASE.EQ.4)GO TO 75
      DIAG(MT+1)=DIAG(MT)
      DIAG(MT+2)=DIAG(MT)
      MT=MT+2
      GO TO 45
   55 DIAG(MT+1)=DIAG(MT)
      MT=MT+1
      GO TO 45
   75 DIAG(MT+1)=DIAG(MT)
      DIAG(MT+2)=DIAG(MT)
      DIAG(MT+3)=DIAG(MT)
      MT=MT+3
      GO TO 45
  455 MS1(I,J)=1
      MS2(I,J)=1
   45 CONTINUE
C*
C     THIS LOOP CREATES THE HARTREE-FOCK INTERACTING DOUBLY EXCITED
C     CONFIGURATIONS:
C     SEE SINGLES LOOP FOR GENERAL INFORMATION.
C     CERTAIN OF THE DOUBLY EXCITED CONFIGURATIONS
C     I.E. THOSE OF (TYPE.GT.NHALF) INVOLVE DETERMINANTAL EXPANSIONS
C     WHICH INCLUDE BOTH SINGLE AND DOUBLE REPLACEMENT DETERMINANTS.
C*
C     LOOP OVER PAIRS OF OCCUPIED MO.
C
      DO 70 I=1,NOCC
      IS=ITV(I,1)
      DO 70 J=I,NOCC
      JS=ITV(J,1)
      IJPRD=MTAB(IS,JS)
      IJ=IN(I,J)
C
C     LOOP OVER PAIRS OF SINGLY OCCUPIED OR VIRTUAL MO.
C
      DO 70 IA=NOCC1,NMO
      IAS=ITV(IA,1)
      IJAPRD=MTAB(IJPRD,IAS)
      DO 70 IB=IA,NMO
      IBS=ITV(IB,1)
      IFPRD=MTAB(IJAPRD,IBS)
      IAB=IN(IA-NDOUB,IB-NDOUB)
C     CHECK IF ALLOWED BY SYMMETRY.
      IF(IFPRD.NE.1)GO TO 700
      MU=ITYPD(I,J,IA,IB,ICASE,NOCC,NOCC1)
      IF (MU.EQ.61) GO TO 700
      IF(ICASE.EQ.2)GO TO 65
      IF(MU.LT.NHALF)GO TO 33
      MM=MS2(I,IB)+1
C?IBM/GLD/GBR/VAX/UNX
      MD1(IJ,IAB)=MU
      MD2(IJ,IAB)=MM
C??
C?CDC PACK BOTH LABELS INTO MD1.
C     MD1(IJ,IAB)=OR(SHIFT(MU,16),MM)
C??
      GO TO 70
C
   65 IF(MU.NE.NHALF)GO TO 33
      MM=MS2(I,IB)+1
C?IBM/GLD/GBR/VAX/UNX
      MD1(IJ,IAB)=MU
      MD2(IJ,IAB)=MM
C??
C?CDC PACK BOTH LABELS INTO MD1.
C     MD1(IJ,IAB)=OR(SHIFT(MU,16),MM)
C??
      GO TO 70
C
   33 MT=MT+1
      IF(MT.LE.MXCONF)GO TO 50
      IFLAG=IFLAG+1
      MT=1
C?IBM/GLD/GBR/VAX/UNX
   50 MD1(IJ,IAB)=MU
      MD2(IJ,IAB)=MT
C??
C?CDC PACK BOTH LABELS INTO MD1.
C  50 MD1(IJ,IAB)=OR(SHIFT(MU,16),MT)
C??
      DIAG(MT)=F(IA)+F(IB)-F(I)-F(J)
      IF(MU.LT.NDF)GO TO 70
      MT=MT+1
      IF(MT.LE.MXCONF)GO TO 60
      IFLAG=IFLAG+1
      MT=1
      GO TO 70
C
   60 DIAG(MT)=DIAG(MT-1)
      GO TO 70
C?IBM/GLD/GBR/VAX/UNX
  700 MD1(IJ,IAB)=1
      MD2(IJ,IAB)=1
C??
C?CDC
C 700 MD1(IJ,IAB)=65537
C??
   70 CONTINUE
C
      IF(IFLAG.NE.0)GO TO 900
      NSTAT=MT
      CALL TWRITE(31,X903B,L3132,1,L3132,1,0)
C?IBM/GLD/GBR/VAX/UNX  ALSO SAVE MD2.
      CALL TWRITE(32,X903C,L3132,1,L3132,1,0)
C??
      REWIND IFINT
      IF(IOP(10).NE.0)WRITE(IFINT)(DIAG(I),I=1,NSTAT)
      CALL TWRITE(9,X903A,NFILE(9,1),1,NFILE(9,1),1,0)
      NSTAT=MT-2
      IF(IOP(19).EQ.0)WRITE(IOUT,1010)NSTAT
      RETURN
C
C     TOO MANY CONFIGURATIONS.
C
  900 NSTAT=IFLAG*MXCONF+MT-2
      WRITE(IOUT,1010)NSTAT
      I=MXCONF-2
      WRITE(IOUT,1020)I
      IOP(1)=-2
      RETURN
      END
      INTEGER FUNCTION ITYPS(I,J,ICASE,NO,NOCC1)
C*
      IF(ICASE.NE.1)GO TO 2
C
C     CLOSED SHELL SINGLET.
C
      ITYPS=1
      RETURN
C
C     OPEN SHELL SINGLET, DOUBLET, TRIPLET, QUARTET.
C
    2 NDO=NOCC1-1
      ITYPS=62
      IF(ICASE.EQ.5)GO TO 5
      IF(I.LE.NDO.AND.J.GT.NO)ITYPS=3
      IF(I.LE.NDO.AND.J.LE.NO)ITYPS=1
      IF(I.GT.NDO.AND.J.GT.NO)ITYPS=2
      RETURN
C
C     OPEN SHELL SINGLET ONLY.
C
    5 IF(I.LE.NDO.AND.J.EQ.NOCC1)ITYPS=1
      IF(I.LE.NDO.AND.J.EQ.NOCC1+1)ITYPS=2
      IF(I.EQ.NOCC1.AND.J.GT.NO)ITYPS=3
      IF(I.EQ.NOCC1+1.AND.J.GT.NO)ITYPS=4
      IF(I.LE.NDO.AND.J.GT.NO)ITYPS=5
      RETURN
      END
      INTEGER FUNCTION ITYPD(I,J,IA,IB,ICASE,NO,NOCC1)
C*
      GO TO (1,2,3,4,5),ICASE
C
C     CLOSED SHELL SINGLET.
C
    1 IF(I.EQ.J.AND.IA.EQ.IB)ITYPD=1
      IF(I.EQ.J.AND.IA.NE.IB)ITYPD=3
      IF(I.NE.J.AND.IA.EQ.IB)ITYPD=2
      IF(I.NE.J.AND.IA.NE.IB)ITYPD=4
      RETURN
C
C     OPEN SHELL DOUBLET.
C
    2 NDO=NOCC1-1
      IF(IA.LE.NO.OR.IB.LE.NO)GO TO 702
      IF(IA.NE.IB)GO TO 452
      IF(I.NE.J)GO TO 352
      IF(I.GT.NDO)GO TO 652
      ITYPD=1
      RETURN
C
  352 IF(I.GT.NDO)GO TO 652
      IF(J.GT.NDO)GO TO 402
      ITYPD=2
      RETURN
C
  402 ITYPD=5
      RETURN
C
  452 IF(I.EQ.J.AND.I.GT.NDO)GO TO 652
      IF(I.EQ.J)GO TO 602
      IF(I.GT.NDO)GO TO 652
      IF(J.LE.NDO)GO TO 502
      ITYPD=11
      RETURN
C
  502 ITYPD=7
      RETURN
C
  602 ITYPD=3
      RETURN
C
  652 ITYPD=61
      RETURN
C
  702 ITYPD=61
      IF(I.EQ.J.AND.I.LE.NDO.AND.IB.GT.NO)ITYPD=4
      IF(I.NE.J.AND.J.LE.NDO.AND.IB.GT.NO)ITYPD=9
      IF(I.LE.NDO.AND.IB.GT.NO.AND.J.EQ.IA.AND.J.EQ.NOCC1)ITYPD=6
      RETURN
C
C     OPEN SHELL TRIPLET.
C
    3 NDO=NOCC1-1
      IF(IA.LE.NO.OR.IB.LE.NO)GO TO 70
      IF(IA.NE.IB)GO TO 45
      IF(I.NE.J)GO TO 35
      IF(I.GT.NDO)GO TO 65
      ITYPD=1
      RETURN
C
   35 IF(I.GT.NDO)GO TO 65
      IF(J.GT.NDO)GO TO 40
      ITYPD=2
      RETURN
C
   40 ITYPD=5
      RETURN
C
   45 IF(I.EQ.J.AND.I.GT.NDO)GO TO 65
      IF(I.EQ.J)GO TO 60
      IF(I.GT.NDO)GO TO 55
      IF(J.LE.NDO)GO TO 50
      ITYPD=13
      RETURN
C
   50 ITYPD=9
      RETURN
C
   55 ITYPD=8
      RETURN
C
   60 ITYPD=3
      RETURN
C
   65 ITYPD=61
      RETURN
C
   70 ITYPD=61
      IF(I.EQ.J.AND.I.LE.NDO.AND.IB.GT.NO)ITYPD=4
      IF(I.NE.J.AND.J.LE.NDO.AND.IB.GT.NO)ITYPD=11
      IF(I.LE.NDO.AND.J.GT.NDO.AND.IB.GT.NO.AND.J.NE.IA)ITYPD=6
      IF(I.NE.J.AND.J.LE.NDO.AND.IB.LE.NO.AND.IA.NE.IB)ITYPD=7
      IF(I.LE.NDO.AND.IB.GT.NO.AND.J.EQ.IA.AND.J.EQ.NOCC1)ITYPD=15
      IF(I.LE.NDO.AND.IB.GT.NO.AND.J.EQ.IA.AND.J.EQ.NOCC1+1)ITYPD=17
      RETURN
C
C     OPEN SHELL QUARTET.
C
    4 NDO=NOCC1-1
      IF(IA.LE.NO.OR.IB.LE.NO)GO TO 704
      IF(IA.NE.IB)GO TO 454
      IF(I.NE.J)GO TO 354
      IF(I.GT.NDO)GO TO 654
      ITYPD=1
      RETURN
C
  354 IF(I.GT.NDO)GO TO 654
      IF(J.GT.NDO)GO TO 404
      ITYPD=2
      RETURN
C
  404 ITYPD=5
      RETURN
C
  454 IF(I.EQ.J.AND.I.GT.NDO)GO TO 654
      IF(I.EQ.J)GO TO 604
      IF(I.GT.NDO)GO TO 554
      IF(J.LE.NDO)GO TO 504
      ITYPD=13
      RETURN
C
  504 ITYPD=9
      RETURN
C
  554 ITYPD=8
      RETURN
C
  604 ITYPD=3
      RETURN
C
  654 ITYPD=61
      RETURN
C
  704 ITYPD=61
      IF(I.EQ.J.AND.I.LE.NDO.AND.IB.GT.NO)ITYPD=4
      IF(I.NE.J.AND.J.LE.NDO.AND.IB.GT.NO)ITYPD=11
      IF(I.LE.NDO.AND.J.GT.NDO.AND.IB.GT.NO.AND.J.NE.IA)ITYPD=6
      IF(I.NE.J.AND.J.LE.NDO.AND.IB.LE.NO.AND.IA.NE.IB)ITYPD=7
      IF(I.LE.NDO.AND.IB.GT.NO.AND.J.EQ.IA.AND.J.EQ.NOCC1)ITYPD=15
      IF(I.LE.NDO.AND.IB.GT.NO.AND.J.EQ.IA.AND.J.EQ.NOCC1+1)ITYPD=17
      IF(I.LE.NDO.AND.IB.GT.NO.AND.J.EQ.IA.AND.J.EQ.NOCC1+2)ITYPD=20
      RETURN
C
C     OPEN SHELL SINGLET.
C
    5 NDO=NOCC1-1
      IF(IA.LE.NO.OR.IB.LE.NO)GO TO 714
      IF(IA.NE.IB)GO TO 464
      IF(I.NE.J)GO TO 364
      IF(I.GT.NDO)GO TO 664
      ITYPD=1
      RETURN
  364 IF(I.GT.NDO)GO TO 664
      IF(J.GT.NDO)GO TO 414
      ITYPD=2
      RETURN
  414 IF(J.EQ.NOCC1)ITYPD=6
      IF(J.EQ.NOCC1+1)ITYPD=7
      RETURN
  464 IF(I.EQ.J.AND.I.GT.NDO)GO TO 664
      IF(I.EQ.J)GO TO 614
      IF(I.GT.NDO)GO TO 564
      IF(J.LE.NDO)GO TO 514
      IF(J.EQ.NOCC1)ITYPD=12
      IF(J.EQ.NOCC1+1)ITYPD=14
      RETURN
  514 ITYPD=20
      RETURN
  564 ITYPD=9
      RETURN
  614 ITYPD=3
      RETURN
  664 ITYPD=61
      RETURN
  714 ITYPD=61
      IF(I.EQ.J.AND.I.LE.NDO.AND.IB.GT.NO.AND.IA.EQ.NOCC1)ITYPD=4
      IF(I.EQ.J.AND.I.LE.NDO.AND.IB.GT.NO.AND.IA.EQ.NOCC1+1)ITYPD=5
      IF(I.NE.J.AND.J.LE.NDO.AND.IB.GT.NO.AND.IA.EQ.NOCC1)ITYPD=16
      IF(I.NE.J.AND.J.LE.NDO.AND.IB.GT.NO.AND.IA.EQ.NOCC1+1)ITYPD=18
      IF(I.LE.NDO.AND.J.EQ.NOCC1.AND.IB.GT.NO.AND.IA.EQ.NOCC1+1)ITYPD=10
      IF(I.LE.NDO.AND.J.EQ.NOCC1+1.AND.IB.GT.NO.AND.IA.EQ.NOCC1)ITYPD=11
      IF(I.NE.J.AND.J.LE.NDO.AND.IB.EQ.NOCC1+1.AND.IA.EQ.NOCC1)ITYPD=8
      IF(I.LE.NDO.AND.IB.GT.NO.AND.J.EQ.NOCC1.AND.IA.EQ.J)ITYPD=22
      IF(I.LE.NDO.AND.IB.GT.NO.AND.J.EQ.NOCC1+1.AND.IA.EQ.J)ITYPD=23
      RETURN
      END
