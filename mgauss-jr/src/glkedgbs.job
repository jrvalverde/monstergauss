$DEFM ALL BRIEF
$JOB GLKEDGBR GAU,1080 S SLOF=P.LINKBR
$NOTE GLKEDGBS     14-JUL-87                                         MRP
$NOTE
$NOTE LINK GAUSSBR (FORTRAN/X32 VERSION).
$NOTE IMAGE(S) LINKED IN THIS JOB: %ALL;.
$NOTE MAP OPTION(S) FOR THIS JOB: %BRIEF;.
$NOTE
$IFF %ALL EQ ALL NEXT
$NOTE FILE 'GLKEDGBS' MUST BE STORED UNNUMBERED (USE EDIT WITH
$NOTE 'STO UNN' OR THE PROGRAMMABLE EDITOR (PE)).
$NOTE
$NOTE TO RECREATE FILE 'GLKEDGBR', DO THE FOLLOWING TSM COMMAND:
$NOTE    M4 <GLKEDGBS >GLKEDGBR
$NOTE
$NOTE TO LINK WITH NO LOAD MAPS, USE:
$NOTE    TSM>BATCH GLKEDGBR [PGMNAME]
$NOTE WHERE 'PGMNAME' IS AN OPTIONAL PROGRAM NAME TO BE LINKED
$NOTE (E.G. 'SHELL', 'GBOPT' OR 'GAUSS'). IF NO PROGRAM NAME IS
$NOTE GIVEN, ALL SHARED IMAGES ARE LINKED.
$NOTE
$NOTE TO LINK WITH LOAD MAPS, USE:
$NOTE    TSM>BATCH GLKEDGBR ALL VALUE            (LINK ALL IMAGES)
$NOTE    TSM>BATCH GLKEDGBR PGMNAME VALUE        (LINK 'PGMNAME' ONLY)
$NOTE    TSM>BATCH GLKEDGBR PGMNAME 'VALU SECT COMM'
$NOTE WHERE THE LAST EXAMPLE LINKS PROGRAM NAME 'PGMNAME' (WHICH COULD
$NOTE BE 'ALL' TO LINK ALL IMAGES) WITH THE MAP OPTIONS 'VALUE',
$NOTE 'SECTIONS' AND 'COMMON' SPECIFIED.
$NOTE
$NOTE IGNORE LINKX32 WARNING MESSAGES ABOUT SHARED IMAGES BEING INCLUDED
$NOTE MORE THAN ONCE, AND ABOUT CONFLICTING SHARED IMAGE ADDRESSES -
$NOTE THESE ARE NORMAL GIVEN THE OVERLAY STRUCTURE USED BY MONSTERGAUSS.
$NOTE
$NOTE ******************************************************************
$NOTE LINK OVERLAY 9999 (CONTAINS UTILITY ROUTINES, SHLOUT
$NOTE AND ALL GLOBAL COMMON BLOCKS).
$NOTE ******************************************************************
$NOTE
$NOTE THIS OVERLAY IS POSITIONED JUST BELOW THE SHARED RUN-TIME LIBRARY
$NOTE IMAGE, WHICH IS POSITIONED AT LOGICAL ADDRESS 480000.
$NOTE IF THIS SHARED IMAGE IS LINKED OR RE-LINKED, ALL OTHER IMAGES
$NOTE MUST BE RE-LINKED AS WELL.
$NOTE
$EXEC LINKX32
LIBRARY @D2(GAU)L.GLIBBR
LIBRARY @SYSTEM(SYSTEM)FTNRTLX32
INCLUDE MODULE=TREAD MODULE=TWRITE MODULE=TRED12 MODULE=TQL12 -
MODULE=GBSOUT MODULE=MATOUT MODULE=MATPAC MODULE=FREEFM MODULE=UPPER -
MODULE=UNPACK MODULE=BDT2W2 MODULE=SHLOUT MODULE=NWIORD MODULE=NWIOWR -
MODULE=NWIOWT
INCLUDE MODULE=GETCC1 MODULE=GETA1 MODULE=GET2C MODULE=GET3C -
MODULE=GET1CS MODULE=GET2CS MODULE=GETCC2 MODULE=GETA2 MODULE=GETIP2 -
MODULE=TWOD2C MODULE=TWOD3C MODULE=TWOD4C MODULE=QINF MODULE=FILLC -
MODULE=FILLCP MODULE=FMTGEN MODULE=FMTSET MODULE=RPOLX MODULE=RYSSET
INCLUDE MODULE=PUREDF MODULE=PURDF2
INCLUDE MODULE=F0INIT MODULE=F0CFIL MODULE=F0CLD1 MODULE=F0CLD2 -
MODULE=F02CTR MODULE=F03CTR MODULE=F04CTR
UNIVERSAL ALL
COMMON A ZMAT ZMATC B BSINFO BSINFC IO -
GEN PACKED NFRAG OEPLAB CILAB GLDDATA -
C300 SHLCOM T2W2
COMMON LIMIT I1ECOM I2ECOM GCLOOP LIMIT2 QINFO MTPC FM -
CCPQ FST2D0 FSTCTR FSTIND
MAP SLO %BRIEF
SET DEBUGSYM=F LADDRESS=400000 ONEWARNING=F
SHARE @SYSTEM(SYSTEM)FRTLSHR PREA ACCE=RW
ACTIVATE MULTICOPY SHARED
ACCESS OT=(R,W)
LINK GAU9999  SHARED
EXIT
$IFT ABORT EXIT
$NOTE
$NOTE M4 PROCEDURE DEFINITION FOLLOWS (FILE 'GLKEDGBS' ONLY).
$NOTE
$NOTE MACRO GLINK:
$NOTE    $1: NAME OF SHARED IMAGE BEING BUILT IN FORM 'GAUNNNN '.
$NOTE    $2: NAME OF MONSTERGAUSS ROUTINE TO BE INCLUDED IN THIS IMAGE.
$NOTE    $3: START LOGICAL ADDRESS FOR THIS SHARED IMAGE.
$NOTE    $4: CODE FOR SECOND LEVEL SHARED IMAGES TO INCLUDE (0000=NONE.)
$NOTE
DEFINE(GLINK,$DEFNAME NEXT
$IFT %ALL EQ ALL LINKIT
$IFF %ALL EQ $2 NEXT
$DEFNAME LINKIT
$NOTE LINK $2 AS $1 AT $3 WITH SHARE CODE $4
$EXEC LINKX32
LIBRARY @D2(GAU)L.GLIBBR
LIBRARY @SYSTEM(SYSTEM)FTNRTLX32
INCLUDE MODULE=$2
VECTOR $2
MAP SLO %BRIEF
SET DEBUGSYM=F LADDRESS=$3 ONEWARNING=T
SHARE @D2(GAU)GAU9999  PREA ACCE=RW
[IFELSE($4,0300,SHARE @D2(GAU)GAU0306  DYNAMIC ACCE=RW
SHARE @D2(GAU)GAU0307  DYNAMIC ACCE=RW
SHARE @D2(GAU)GAU0308  DYNAMIC ACCE=RW
ACTI MULT SHARED,ACTI MULT SHARED)]
ACCESS OT=(R,W)
LINK $1 SHARED
EXIT
$IFT ABORT EXIT)
$NOTE
$NOTE ******************************************************************
$NOTE LINK SECOND LEVEL OVERLAYS.
$NOTE ******************************************************************
$NOTE
GLINK(GAU0306 ,SHELL ,70000,0000)
GLINK(GAU0307 ,UNCON ,70000,0000)
GLINK(GAU0308 ,PHOENX,70000,0000)
$NOTE
$NOTE ******************************************************************
$NOTE LINK FIRST LEVEL OVERLAYS.
$NOTE ******************************************************************
$NOTE
GLINK(GAU0100 ,SETUP ,60000,0000)
GLINK(GAU0101 ,LNK1  ,60000,0000)
GLINK(GAU0201 ,STDGEO,60000,0000)
GLINK(GAU0202 ,VGEOM ,60000,0000)
GLINK(GAU0301 ,GINPUT,60000,0000)
GLINK(GAU0302 ,STVINT,60000,0000)
GLINK(GAU0303 ,DIPOLE,60000,0000)
GLINK(GAU0300 ,DUMMYI,60000,0300)
GLINK(GAU0309 ,DSTVWT,60000,0000)
GLINK(GAU0310 ,DPHNXW,60000,0000)
GLINK(GAU0311 ,SECINT,60000,0000)
GLINK(GAU0401 ,RHFIN ,60000,0000)
GLINK(GAU0402 ,GUESS ,60000,0000)
GLINK(GAU0403 ,SECORT,60000,0000)
GLINK(GAU0501 ,CLOSED,60000,0000)
GLINK(GAU0502 ,UHFOPN,60000,0000)
GLINK(GAU0503 ,GSCF  ,60000,0000)
GLINK(GAU0505 ,ZCLOSE,60000,0000)
GLINK(GAU0506 ,ZUHF  ,60000,0000)
GLINK(GAU0507 ,ZRHF  ,60000,0000)
GLINK(GAU0601 ,POPGEN,60000,0000)
GLINK(GAU0602 ,PMO   ,60000,0000)
GLINK(GAU0603 ,ZMOROK,60000,0000)
GLINK(GAU0701 ,FORCEB,60000,0000)
GLINK(GAU0702 ,FORCE ,60000,0000)
GLINK(GAU0703 ,DTWOL ,60000,0000)
GLINK(GAU0704 ,DPHNIX,60000,0000)
GLINK(GAU0708 ,CPHF  ,60000,0000)
GLINK(GAU0709 ,DD1E  ,60000,0000)
GLINK(GAU0710 ,DD2E  ,60000,0000)
GLINK(GAU0711 ,GBOPT ,60000,0000)
GLINK(GAU0801 ,BOYLOC,60000,0000)
GLINK(GAU0802 ,OEPROP,60000,0000)
GLINK(GAU0803 ,DIPSQ ,60000,0000)
GLINK(GAU0901 ,INTRAN,60000,0000)
GLINK(GAU0902 ,COUPLE,60000,0000)
GLINK(GAU0903 ,CONFIG,60000,0000)
GLINK(GAU0904 ,INTSRT,60000,0000)
GLINK(GAU0905 ,FORMTP,60000,0000)
GLINK(GAU0906 ,CIROOT,60000,0000)
GLINK(GAU0907 ,OEPMO ,60000,0000)
$DEFNAME NEXT
$IFT %ALL EQ ALL LINKIT
$IFF %ALL EQ GAUSS NEXT
$DEFNAME LINKIT
$NOTE
$NOTE ******************************************************************
$NOTE LINK MAIN PROGRAM.
$NOTE ******************************************************************
$NOTE
$EXEC LINKX32
LIBRARY @D2(GAU)L.GLIBBR
LIBRARY @SYSTEM(SYSTEM)FTNRTLX32
INCLUDE MODULE=GAUSS
MAP SLO %BRIEF
AS 1 TO DEV=NU
AS 5 TO SYC
AS 6 TO LFC=UT
AS 7 TO DEV=NU
AS 8 TO TEMP SIZE=3944 BLOC=N
AS 9 TO TEMP SIZE=40000 BLOC=N
AS 10 TO TEMP SIZE=2000 BLOC=N
AS 11 TO TEMP SIZE=4000 BLOC=N
AS 12 TO TEMP SIZE=2000 BLOC=N
AS 13 TO TEMP SIZE=1000 BLOC=N
AS 14 TO TEMP SIZE=165 BLOC=N
AS 15 TO TEMP SIZE=1000 BLOC=N
AS 16 TO TEMP SIZE=1000 BLOC=N
AS 99 TO TEMP SIZE=1
OPTION PROMPT
SET DEBUGSYM=F BUFFERS=10 FILES=25 SEGFILES=25 STACKSIZE=16384 -
ONEWARNING=T
SHARE @D2(GAU)GAU9999  PREA ACCE=RW
SHARE @D2(GAU)GAU0100  DYNAMIC ACCE=RW
SHARE @D2(GAU)GAU0101  DYNAMIC ACCE=RW
SHARE @D2(GAU)GAU0201  DYNAMIC ACCE=RW
SHARE @D2(GAU)GAU0202  DYNAMIC ACCE=RW
SHARE @D2(GAU)GAU0301  DYNAMIC ACCE=RW
SHARE @D2(GAU)GAU0302  DYNAMIC ACCE=RW
SHARE @D2(GAU)GAU0303  DYNAMIC ACCE=RW
SHARE @D2(GAU)GAU0300  DYNAMIC ACCE=RW
SHARE @D2(GAU)GAU0309  DYNAMIC ACCE=RW
SHARE @D2(GAU)GAU0310  DYNAMIC ACCE=RW
SHARE @D2(GAU)GAU0311  DYNAMIC ACCE=RW
SHARE @D2(GAU)GAU0401  DYNAMIC ACCE=RW
SHARE @D2(GAU)GAU0402  DYNAMIC ACCE=RW
SHARE @D2(GAU)GAU0403  DYNAMIC ACCE=RW
SHARE @D2(GAU)GAU0501  DYNAMIC ACCE=RW
SHARE @D2(GAU)GAU0502  DYNAMIC ACCE=RW
SHARE @D2(GAU)GAU0503  DYNAMIC ACCE=RW
SHARE @D2(GAU)GAU0505  DYNAMIC ACCE=RW
SHARE @D2(GAU)GAU0506  DYNAMIC ACCE=RW
SHARE @D2(GAU)GAU0507  DYNAMIC ACCE=RW
SHARE @D2(GAU)GAU0601  DYNAMIC ACCE=RW
SHARE @D2(GAU)GAU0602  DYNAMIC ACCE=RW
SHARE @D2(GAU)GAU0603  DYNAMIC ACCE=RW
SHARE @D2(GAU)GAU0701  DYNAMIC ACCE=RW
SHARE @D2(GAU)GAU0702  DYNAMIC ACCE=RW
SHARE @D2(GAU)GAU0703  DYNAMIC ACCE=RW
SHARE @D2(GAU)GAU0704  DYNAMIC ACCE=RW
SHARE @D2(GAU)GAU0708  DYNAMIC ACCE=RW
SHARE @D2(GAU)GAU0709  DYNAMIC ACCE=RW
SHARE @D2(GAU)GAU0710  DYNAMIC ACCE=RW
SHARE @D2(GAU)GAU0711  DYNAMIC ACCE=RW
SHARE @D2(GAU)GAU0801  DYNAMIC ACCE=RW
SHARE @D2(GAU)GAU0802  DYNAMIC ACCE=RW
SHARE @D2(GAU)GAU0803  DYNAMIC ACCE=RW
SHARE @D2(GAU)GAU0901  DYNAMIC ACCE=RW
SHARE @D2(GAU)GAU0902  DYNAMIC ACCE=RW
SHARE @D2(GAU)GAU0903  DYNAMIC ACCE=RW
SHARE @D2(GAU)GAU0904  DYNAMIC ACCE=RW
SHARE @D2(GAU)GAU0905  DYNAMIC ACCE=RW
SHARE @D2(GAU)GAU0906  DYNAMIC ACCE=RW
SHARE @D2(GAU)GAU0907  DYNAMIC ACCE=RW
ACTIVATE MULTICOPY SHARED
LINK GAUSSBR
EXIT
$EOJ
$$
